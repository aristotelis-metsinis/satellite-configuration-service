<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.12.3 on linux)" generated="2024-12-01T17:03:21.135746" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests">
<suite id="s1-s1" name="Create Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/create_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.706999" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T17:03:21.706475" elapsed="0.001039"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:21.705332" elapsed="0.002342"/>
</kw>
<test id="s1-s1-t1" name="TC01 - Create Valid Configuration" line="14">
<kw name="Clear Mission Configuration Database" owner="common" type="SETUP">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.716329" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:21.716534" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '245'} 
 body={"meta":null,"data":[{"id":1,"name":"Satellite1","type":"OPTICAL","cospar_id":"2024-003ZZ"},{"id":2,"name":"Satellite2","type":"OPTICAL","cospar_id":"2023-001BC"},{"id":3,"name":"Satellite3","type":"SAR","cospar_id":"2050-002ZZ"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:21.716816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.709204" elapsed="0.007661"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.719727" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.717867" elapsed="0.001947"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.721463" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"Satellite1","type":"OPTICAL","cospar_id":"2024-003ZZ"},{"id":2,"name":"Satellite2","type":"OPTICAL","cospar_id":"2023-001BC"},{"id":3,"name":"Satellite3","type":"SAR","cospar_id":"2050-002ZZ"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.720026" elapsed="0.001512"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.723189" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'Satellite1', 'type': 'OPTICAL', 'cospar_id': '2024-003ZZ'}, {'id': 2, 'name': 'Satellite2', 'type': 'OPTICAL', 'cospar_id': '2023-001BC'}, {'id': 3, 'name': ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.721770" elapsed="0.001463"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.723857" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'Satellite1', 'type': 'OPTICAL', 'cospar_id': '2024-003ZZ'}, {'id': 2, 'name': 'Satellite2', 'type': 'OPTICAL', 'cospar_id': '2023-001BC'}, {'id': 3, 'name': ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.723461" elapsed="0.000464"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.717229" elapsed="0.006807"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:21.724985" elapsed="0.000126"/>
</return>
<msg time="2024-12-01T17:03:21.727018" level="INFO">${response_data} = [{'id': 1, 'name': 'Satellite1', 'type': 'OPTICAL', 'cospar_id': '2024-003ZZ'}, {'id': 2, 'name': 'Satellite2', 'type': 'OPTICAL', 'cospar_id': '2023-001BC'}, {'id': 3, 'name': 'Satellite3', 'type': '...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:21.724468" elapsed="0.002626"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.727670" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T17:03:21.727833" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:21.727368" elapsed="0.000507"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:21.729513" elapsed="0.000027"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:21.729289" elapsed="0.000351"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:21.729754" elapsed="0.000055"/>
</return>
<status status="PASS" start="2024-12-01T17:03:21.729692" elapsed="0.000195"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:21.729249" elapsed="0.000708"/>
</if>
<msg time="2024-12-01T17:03:21.731990" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:21.728752" elapsed="0.003292"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.736933" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:21.737051" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.732272" elapsed="0.004897"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T17:03:21.728402" elapsed="0.008874"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:21.739042" elapsed="0.000039"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:21.738783" elapsed="0.000501"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:21.739453" elapsed="0.000075"/>
</return>
<status status="PASS" start="2024-12-01T17:03:21.739363" elapsed="0.000256"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:21.738734" elapsed="0.000937"/>
</if>
<msg time="2024-12-01T17:03:21.741394" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:21.738126" elapsed="0.003331"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.744378" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:21.744495" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.741709" elapsed="0.002925"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T17:03:21.737662" elapsed="0.007068"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:21.745915" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:21.745722" elapsed="0.000277"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:21.746105" elapsed="0.000048"/>
</return>
<status status="PASS" start="2024-12-01T17:03:21.746054" elapsed="0.000169"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:21.745688" elapsed="0.000574"/>
</if>
<msg time="2024-12-01T17:03:21.747998" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:21.745232" elapsed="0.002816"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.750449" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:21.750596" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.748250" elapsed="0.002585"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T17:03:21.744930" elapsed="0.006066"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:21.728018" elapsed="0.023060"/>
</for>
<status status="PASS" start="2024-12-01T17:03:21.708810" elapsed="0.042440"/>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.755916" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.756053" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:21.756293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.752571" elapsed="0.003764"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.759150" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.757354" elapsed="0.001875"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.760833" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.759458" elapsed="0.001446"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.762544" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.761124" elapsed="0.001470"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.763140" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.762791" elapsed="0.000414"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.756720" elapsed="0.006584"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.763474" elapsed="0.000372"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:21.764740" elapsed="0.000060"/>
</return>
<msg time="2024-12-01T17:03:21.766695" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:21.764249" elapsed="0.002511"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:21.767039" elapsed="0.000413"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.768208" elapsed="0.000052"/>
</return>
<msg time="2024-12-01T17:03:21.770143" level="INFO">${actual_data_message} = Mission config created successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.767820" elapsed="0.002371"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.770963" level="FAIL">Mission config created successfully != Mission configuration created successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:21.770448" elapsed="0.001176">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.771938" elapsed="0.000038"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.772153" elapsed="0.000028"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T17:03:21.751673" elapsed="0.020704">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.776093" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTIC"}' 
 </msg>
<msg time="2024-12-01T17:03:21.776192" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.776353" level="FAIL">Url: http://localhost:1234/configs Expected status: 400 != 200</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T17:03:21.773294" elapsed="0.006369">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T17:03:21.780068" elapsed="0.000054"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.780372" elapsed="0.000045"/>
</kw>
<kw name="Get Meta" owner="common">
<var>${actual_meta}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.780741" elapsed="0.000056"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.781038" elapsed="0.000034"/>
</kw>
<kw name="Get Data Message" owner="common">
<var>${actual_data_message}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.781365" elapsed="0.000047"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.781629" elapsed="0.000041"/>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.781922" elapsed="0.000037"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.782158" elapsed="0.000032"/>
</kw>
<arg>&amp;{REQ_VALID_OPTIC_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T17:03:21.772701" elapsed="0.009681">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.786105" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:21.786207" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:21.786363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.783493" elapsed="0.002907"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.788751" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.787198" elapsed="0.001627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.790235" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.789005" elapsed="0.001306"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.792363" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.790572" elapsed="0.001869"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.793298" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.792845" elapsed="0.000556"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.786700" elapsed="0.006878"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.793808" elapsed="0.000389"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:21.794928" elapsed="0.000063"/>
</return>
<msg time="2024-12-01T17:03:21.796650" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:21.794533" elapsed="0.002173"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:21.796935" elapsed="0.000375"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.797903" elapsed="0.000049"/>
</return>
<msg time="2024-12-01T17:03:21.799701" level="INFO">${actual_data_message} = Mission config created successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.797601" elapsed="0.002146"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.800391" level="FAIL">Mission config created successfully != Mission configuration created successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:21.799965" elapsed="0.000525">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.801142" elapsed="0.000037"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.801349" elapsed="0.000032"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T17:03:21.782769" elapsed="0.018752">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.804960" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SARS"}' 
 </msg>
<msg time="2024-12-01T17:03:21.805139" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.805480" level="FAIL">Url: http://localhost:1234/configs Expected status: 400 != 200</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T17:03:21.802353" elapsed="0.004098">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T17:03:21.806906" elapsed="0.000066"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.807257" elapsed="0.000046"/>
</kw>
<kw name="Get Meta" owner="common">
<var>${actual_meta}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.807601" elapsed="0.000051"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.807876" elapsed="0.000043"/>
</kw>
<kw name="Get Data Message" owner="common">
<var>${actual_data_message}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.808202" elapsed="0.000048"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.808464" elapsed="0.000030"/>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.808738" elapsed="0.000047"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.808970" elapsed="0.000028"/>
</kw>
<arg>&amp;{REQ_VALID_SARS_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T17:03:21.801809" elapsed="0.007368">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.812967" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:21.813072" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:21.813255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.810208" elapsed="0.003087"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.815686" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.814120" elapsed="0.001714"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.817399" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.816023" elapsed="0.001474"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.819641" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.817862" elapsed="0.001841"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.820485" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.820005" elapsed="0.000615"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.813636" elapsed="0.007134"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.821017" elapsed="0.000344"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:21.822092" elapsed="0.000072"/>
</return>
<msg time="2024-12-01T17:03:21.824072" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:21.821646" elapsed="0.002483"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:21.824345" elapsed="0.000360"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.825238" elapsed="0.000067"/>
</return>
<msg time="2024-12-01T17:03:21.827038" level="INFO">${actual_data_message} = Mission config created successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.824958" elapsed="0.002124"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.827679" level="FAIL">Mission config created successfully != Mission configuration created successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:21.827281" elapsed="0.000495">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:21.828009" elapsed="0.000034"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:21.828201" elapsed="0.000027"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T17:03:21.809481" elapsed="0.018883">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<doc>Test that a valid satellite configuration can be created (for each possible payload type).</doc>
<tag>id:create_01</tag>
<tag>service:create</tag>
<status status="FAIL" start="2024-12-01T17:03:21.707794" elapsed="0.120836">Several failures occurred:

1) Mission config created successfully != Mission configuration created successfully.

2) Url: http://localhost:1234/configs Expected status: 400 != 200

3) Mission config created successfully != Mission configuration created successfully.

4) Url: http://localhost:1234/configs Expected status: 400 != 200

5) Mission config created successfully != Mission configuration created successfully.</status>
</test>
<test id="s1-s1-t2" name="TC02 - Invalid COSPAR ID" line="25">
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.833693" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "INVALID", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.833814" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.834130" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.830880" elapsed="0.003335"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.837144" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.835747" elapsed="0.001480"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.839079" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.837475" elapsed="0.001684"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.840963" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.839387" elapsed="0.001634"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.841612" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.841240" elapsed="0.000433"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.834914" elapsed="0.006863"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.841944" elapsed="0.000243"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.842764" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T17:03:21.844334" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.842481" elapsed="0.001892"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.844567" elapsed="0.000327"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.845529" elapsed="0.000085"/>
</return>
<msg time="2024-12-01T17:03:21.847184" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.845158" elapsed="0.002112"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.847727" elapsed="0.000771"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_XXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.830320" elapsed="0.018400"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.852506" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.852642" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.852817" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.849790" elapsed="0.003065"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.855335" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.853739" elapsed="0.001673"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.856963" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.855641" elapsed="0.001390"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.859268" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.857218" elapsed="0.002111"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.860184" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.859683" elapsed="0.000621"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.853157" elapsed="0.007314"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.860734" elapsed="0.000538"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.862585" elapsed="0.000082"/>
</return>
<msg time="2024-12-01T17:03:21.864145" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.862054" elapsed="0.002144"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.864432" elapsed="0.000458"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.865983" elapsed="0.000052"/>
</return>
<msg time="2024-12-01T17:03:21.867837" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.865168" elapsed="0.002729"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.868176" elapsed="0.000398"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_-dddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.849079" elapsed="0.019610"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.871809" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.871901" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.872064" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.869543" elapsed="0.002559"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.874733" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.872945" elapsed="0.001870"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.876530" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.875049" elapsed="0.001617"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.878676" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.876951" elapsed="0.001783"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.879775" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.879088" elapsed="0.000818"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.872470" elapsed="0.007560"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.880294" elapsed="0.000363"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.881247" elapsed="0.000048"/>
</return>
<msg time="2024-12-01T17:03:21.882907" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.880921" elapsed="0.002041"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.883167" elapsed="0.000327"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.883990" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T17:03:21.885618" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.883725" elapsed="0.001932"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.885841" elapsed="0.000301"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YY-dddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.868973" elapsed="0.017276"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.890201" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "2024-GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.890365" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.890618" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.887190" elapsed="0.003486"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.893496" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.891771" elapsed="0.001968"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.895575" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.893986" elapsed="0.001669"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.897419" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.895871" elapsed="0.001599"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.898048" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.897696" elapsed="0.000412"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.891068" elapsed="0.007135"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.898374" elapsed="0.000246"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.899102" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:21.901105" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.898832" elapsed="0.002359"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.901630" elapsed="0.001171"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.904050" elapsed="0.000148"/>
</return>
<msg time="2024-12-01T17:03:21.906043" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.903172" elapsed="0.002953"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.906363" elapsed="0.000386"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.886500" elapsed="0.020414"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.910320" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-7GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.910414" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.910817" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.907899" elapsed="0.002985"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.913208" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.911671" elapsed="0.001610"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.915315" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.913483" elapsed="0.001933"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.917429" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.915700" elapsed="0.001798"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.918473" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.918039" elapsed="0.000530"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.911190" elapsed="0.007542"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.918944" elapsed="0.000327"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.919933" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T17:03:21.921781" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.919605" elapsed="0.002238"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.922047" elapsed="0.000335"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.922902" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:21.924505" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.922637" elapsed="0.001911"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.925014" elapsed="0.000302"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.907250" elapsed="0.018161"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.929767" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-567", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.929904" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.930120" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.926211" elapsed="0.003957"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.933054" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.931206" elapsed="0.001956"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.934955" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.933379" elapsed="0.001664"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.936872" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.935389" elapsed="0.001527"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.937469" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.937124" elapsed="0.000408"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.930549" elapsed="0.007386"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.938104" elapsed="0.000254"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.938847" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T17:03:21.940548" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.938583" elapsed="0.002115"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.941041" elapsed="0.000588"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.943086" elapsed="0.000077"/>
</return>
<msg time="2024-12-01T17:03:21.945069" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.942111" elapsed="0.003017"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.945366" elapsed="0.000458"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-ddd}</arg>
<status status="PASS" start="2024-12-01T17:03:21.925678" elapsed="0.020311"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.949516" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '80'} 
 body=b'{"cospar_id": "2024-567GRE", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.949629" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.949790" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.947062" elapsed="0.002765"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.952407" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.950830" elapsed="0.001644"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.954348" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.952662" elapsed="0.001800"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.956463" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.954738" elapsed="0.001788"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.957334" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.956842" elapsed="0.000603"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.950126" elapsed="0.007725"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.958127" elapsed="0.000389"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.959182" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T17:03:21.960961" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.958845" elapsed="0.002164"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.961294" elapsed="0.000376"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.962189" elapsed="0.000054"/>
</return>
<msg time="2024-12-01T17:03:21.964015" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.961920" elapsed="0.002133"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.964231" elapsed="0.000291"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.946314" elapsed="0.018319"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.968908" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"cospar_id": "2024567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.969044" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.969314" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.965504" elapsed="0.003864"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.972261" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.970442" elapsed="0.001917"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.974535" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.972629" elapsed="0.002013"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.976364" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.974866" elapsed="0.001546"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.976986" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.976632" elapsed="0.000414"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.969757" elapsed="0.007392"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.977326" elapsed="0.000279"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.978121" elapsed="0.000049"/>
</return>
<msg time="2024-12-01T17:03:21.979976" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.977815" elapsed="0.002206"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.980224" elapsed="0.000418"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:21.982373" elapsed="0.000116"/>
</return>
<msg time="2024-12-01T17:03:21.984417" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:21.980940" elapsed="0.003542"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:21.984791" elapsed="0.000407"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYYdddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.964882" elapsed="0.020450"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:21.989077" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2O24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:21.989174" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:21 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:21.989343" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:21.986324" elapsed="0.003060"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.991755" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.990231" elapsed="0.001596"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.993395" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:21.992011" elapsed="0.001465"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:21.995618" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:21.993769" elapsed="0.001925"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:21.996501" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:21.996019" elapsed="0.000737"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:21.989719" elapsed="0.007198"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:21.997168" elapsed="0.000347"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:21.998132" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T17:03:22.000029" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:21.997809" elapsed="0.002269"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.000339" elapsed="0.000405"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.001322" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T17:03:22.003045" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.001016" elapsed="0.002077"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.003293" elapsed="0.000347"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YXYY-dddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:21.985652" elapsed="0.018090"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.007305" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-_67GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.007472" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.007799" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.004600" elapsed="0.003263"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.010487" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.008859" elapsed="0.001755"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.012423" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.010890" elapsed="0.001631"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.014477" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.012780" elapsed="0.001765"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.015198" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.014817" elapsed="0.000446"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.008275" elapsed="0.007091"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.015623" elapsed="0.000266"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.016395" elapsed="0.000052"/>
</return>
<msg time="2024-12-01T17:03:22.018046" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.016120" elapsed="0.001966"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.018265" elapsed="0.000323"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.019490" elapsed="0.000046"/>
</return>
<msg time="2024-12-01T17:03:22.021735" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.018809" elapsed="0.003027"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.022137" elapsed="0.000508"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:22.004002" elapsed="0.018806"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.026699" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567G8", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.026811" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.027185" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.024002" elapsed="0.003229"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.029710" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.028071" elapsed="0.001714"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.031353" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.029992" elapsed="0.001429"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.033086" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.031622" elapsed="0.001509"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.034065" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.033343" elapsed="0.000834"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.027532" elapsed="0.006795"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.034605" elapsed="0.000415"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.035698" elapsed="0.000073"/>
</return>
<msg time="2024-12-01T17:03:22.037394" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.035319" elapsed="0.002139"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.037770" elapsed="0.000454"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.038940" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T17:03:22.040882" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.038577" elapsed="0.002351"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.041159" elapsed="0.000408"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXd}</arg>
<status status="PASS" start="2024-12-01T17:03:22.023192" elapsed="0.018486"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.044889" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567gr", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.044988" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.045149" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.042526" elapsed="0.002660"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.048010" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.045971" elapsed="0.002199"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.050757" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.048601" elapsed="0.002259"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.052879" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.051085" elapsed="0.001843"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.053544" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.053178" elapsed="0.000517"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.045481" elapsed="0.008340"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.054032" elapsed="0.000272"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.055009" elapsed="0.000046"/>
</return>
<msg time="2024-12-01T17:03:22.056614" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.054619" elapsed="0.002036"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.056856" elapsed="0.000329"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.058366" elapsed="0.000040"/>
</return>
<msg time="2024-12-01T17:03:22.059979" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.057408" elapsed="0.002612"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.060247" elapsed="0.000503"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddxx}</arg>
<status status="PASS" start="2024-12-01T17:03:22.041966" elapsed="0.018960"/>
</kw>
<doc>Test that an invalid COSPAR ID value returns a specific error (for different COSPAR ID formats).</doc>
<tag>id:create_02</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:21.829026" elapsed="0.232122"/>
</test>
<test id="s1-s1-t3" name="TC03 - Invalid Type" line="42">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.066281" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "UNKNOWN"}' 
 </msg>
<msg time="2024-12-01T17:03:22.066392" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.066595" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.063135" elapsed="0.003501"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.069426" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.067598" elapsed="0.001928"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.071195" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.069769" elapsed="0.001498"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.072850" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.071459" elapsed="0.001432"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.073415" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.073082" elapsed="0.000409"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.066989" elapsed="0.006642"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.073817" elapsed="0.000886"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.075759" elapsed="0.000084"/>
</return>
<msg time="2024-12-01T17:03:22.077675" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.075251" elapsed="0.002488"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.078042" elapsed="0.000592"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.079792" elapsed="0.000088"/>
</return>
<msg time="2024-12-01T17:03:22.081653" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.079190" elapsed="0.002526"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.081982" elapsed="0.000414"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.085299" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "optical"}' 
 </msg>
<msg time="2024-12-01T17:03:22.085426" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.085624" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_TYPE_LOWERCASE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.082633" elapsed="0.003040"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.089024" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.086725" elapsed="0.002421"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.090839" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.089439" elapsed="0.001503"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.092852" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.091240" elapsed="0.001674"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.093681" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.093198" elapsed="0.000599"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.086102" elapsed="0.007837"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.094155" elapsed="0.000347"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.095152" elapsed="0.000083"/>
</return>
<msg time="2024-12-01T17:03:22.096949" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.094781" elapsed="0.002216"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.097255" elapsed="0.000385"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.098183" elapsed="0.000052"/>
</return>
<msg time="2024-12-01T17:03:22.099955" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.097875" elapsed="0.002126"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.100215" elapsed="0.000686"/>
</kw>
<doc>Test that an invalid TYPE value returns a specific error.</doc>
<tag>id:create_03</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.061672" elapsed="0.039575"/>
</test>
<test id="s1-s1-t4" name="TC04 - Missing COSPAR ID" line="62">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.106439" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.106618" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '118'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.106832" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.102882" elapsed="0.003993"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.109398" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.107749" elapsed="0.001726"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.111032" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.109696" elapsed="0.001403"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.112653" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.111282" elapsed="0.001413"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.113222" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.112896" elapsed="0.000390"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.107234" elapsed="0.006155"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.113642" elapsed="0.000437"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.115110" elapsed="0.000087"/>
</return>
<msg time="2024-12-01T17:03:22.116739" level="INFO">${actual_error_message} = invalid request due to cospar ID is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.114506" elapsed="0.002298"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.117053" elapsed="0.000422"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.118301" elapsed="0.000082"/>
</return>
<msg time="2024-12-01T17:03:22.120385" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.117864" elapsed="0.002583"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.120685" elapsed="0.000357"/>
</kw>
<doc>Test that the request fails if the COSPAR ID field is missing.</doc>
<tag>id:create_04</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.101873" elapsed="0.019367"/>
</test>
<test id="s1-s1-t5" name="TC05 - Missing Name" line="74">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.124539" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '46'} 
 body=b'{"cospar_id": "2024-003ZZ", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.124660" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '113'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.124815" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_NAME}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.122219" elapsed="0.002633"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.127177" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.125605" elapsed="0.001661"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.129357" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.127662" elapsed="0.001808"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.131408" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.129772" elapsed="0.001686"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.132113" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.131743" elapsed="0.000443"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.125161" elapsed="0.007143"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.132536" elapsed="0.000352"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.133516" elapsed="0.000072"/>
</return>
<msg time="2024-12-01T17:03:22.135313" level="INFO">${actual_error_message} = invalid request due to name is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.133205" elapsed="0.002156"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_NAME_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.135590" elapsed="0.000341"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.136454" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T17:03:22.138091" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.136167" elapsed="0.001962"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.138308" elapsed="0.000321"/>
</kw>
<doc>Test that the request fails if the NAME field is missing.</doc>
<tag>id:create_05</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.121548" elapsed="0.017267"/>
</test>
<test id="s1-s1-t6" name="TC06 - Missing Type" line="86">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.143112" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '60'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission"}' 
 </msg>
<msg time="2024-12-01T17:03:22.143256" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.143477" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.139761" elapsed="0.003764"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.146851" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.145050" elapsed="0.001885"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.148723" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.147197" elapsed="0.001606"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.150527" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.149113" elapsed="0.001467"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.151094" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.150778" elapsed="0.000376"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.143871" elapsed="0.007382"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.151419" elapsed="0.000242"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.152149" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T17:03:22.153878" level="INFO">${actual_error_message} = invalid request due to payload type is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.151887" elapsed="0.002073"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.154332" elapsed="0.000759"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.155868" elapsed="0.000081"/>
</return>
<msg time="2024-12-01T17:03:22.157446" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.155444" elapsed="0.002057"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.157762" elapsed="0.000415"/>
</kw>
<doc>Test that the request fails if the TYPE field is missing.</doc>
<tag>id:create_06</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.139113" elapsed="0.019312"/>
</test>
<test id="s1-s1-t7" name="TC07 - Boundary Test for Exceeding Maximum Configurations" line="98">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.162719" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.162815" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.162976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.160696" elapsed="0.002320"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.165291" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.163782" elapsed="0.001577"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.166878" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.165543" elapsed="0.001429"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.169049" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.167171" elapsed="0.001949"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.169993" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.169448" elapsed="0.000667"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.163322" elapsed="0.006951"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.170960" elapsed="0.000064"/>
</return>
<msg time="2024-12-01T17:03:22.173001" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.170605" elapsed="0.002450"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.173523" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T17:03:22.173692" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.173311" elapsed="0.000418"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.175180" level="INFO">&amp;{payload} = { cospar_id=2024-004ZZ | name=New Satellite 4 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.174624" elapsed="0.000602"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.177826" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2024-004ZZ", "name": "New Satellite 4", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.177921" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.178074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.175463" elapsed="0.002648"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.180518" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.178895" elapsed="0.001809"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.182622" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.181045" elapsed="0.001703"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.184750" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.183056" elapsed="0.001751"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.185754" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.185152" elapsed="0.000754"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.178397" elapsed="0.007694"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.187128" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T17:03:22.186408" elapsed="0.000803"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.187986" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T17:03:22.187515" elapsed="0.000524"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.188374" elapsed="0.000445"/>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.192115" elapsed="0.000055"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.192409" elapsed="0.000041"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.192730" elapsed="0.000044"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.192986" elapsed="0.000039"/>
</kw>
<status status="NOT RUN" start="2024-12-01T17:03:22.189008" elapsed="0.004091"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.188953" elapsed="0.004213"/>
</if>
<var name="${i}">4</var>
<status status="PASS" start="2024-12-01T17:03:22.174408" elapsed="0.018819"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.194929" level="INFO">&amp;{payload} = { cospar_id=2025-005ZZ | name=New Satellite 5 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.193880" elapsed="0.001145"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.198902" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2025-005ZZ", "name": "New Satellite 5", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.199042" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.199338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.195439" elapsed="0.003978"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.202764" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.200780" elapsed="0.002088"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.204730" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.203147" elapsed="0.001676"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.206653" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.205068" elapsed="0.001633"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.207455" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.207025" elapsed="0.000575"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.199919" elapsed="0.007865"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.208548" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T17:03:22.208005" elapsed="0.000617"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.209286" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T17:03:22.208861" elapsed="0.000496"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.209699" elapsed="0.000431"/>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.210854" elapsed="0.000065"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.211159" elapsed="0.000040"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.211469" elapsed="0.000043"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.211755" elapsed="0.000035"/>
</kw>
<status status="NOT RUN" start="2024-12-01T17:03:22.210317" elapsed="0.001533"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.210272" elapsed="0.001631"/>
</if>
<var name="${i}">5</var>
<status status="PASS" start="2024-12-01T17:03:22.193653" elapsed="0.018297"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.213158" level="INFO">&amp;{payload} = { cospar_id=2026-006ZZ | name=New Satellite 6 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.212478" elapsed="0.000762"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.216051" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2026-006ZZ", "name": "New Satellite 6", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.216149" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.216301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.213489" elapsed="0.002850"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.218628" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.217110" elapsed="0.001585"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.220134" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.218872" elapsed="0.001339"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.222141" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.220417" elapsed="0.001783"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.222972" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.222496" elapsed="0.000609"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.216644" elapsed="0.006612"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.224138" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T17:03:22.223522" elapsed="0.000670"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.224797" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T17:03:22.224449" elapsed="0.000388"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.225070" elapsed="0.000325"/>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.226053" elapsed="0.000046"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.226328" elapsed="0.000032"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.226661" elapsed="0.000040"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.226891" elapsed="0.000162"/>
</kw>
<status status="NOT RUN" start="2024-12-01T17:03:22.225545" elapsed="0.001595"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.225509" elapsed="0.001685"/>
</if>
<var name="${i}">6</var>
<status status="PASS" start="2024-12-01T17:03:22.212256" elapsed="0.014998"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.228343" level="INFO">&amp;{payload} = { cospar_id=2027-007ZZ | name=New Satellite 7 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.227775" elapsed="0.000612"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.230998" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2027-007ZZ", "name": "New Satellite 7", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.231092" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '128'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to mission config database is full","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.231243" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.228639" elapsed="0.002642"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.233431" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.232053" elapsed="0.001459"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.235490" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to mission config database is full","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.233797" elapsed="0.001830"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.262567" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to mission config database is full', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.235895" elapsed="0.026752"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.263580" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to mission config database is full', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.263020" elapsed="0.000686"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.231580" elapsed="0.032331"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.264929" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T17:03:22.264190" elapsed="0.000800"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.265715" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T17:03:22.265265" elapsed="0.000507"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.266683" level="FAIL">Url: http://localhost:1234/configs Expected status: 400 != 200</msg>
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="FAIL" start="2024-12-01T17:03:22.266091" elapsed="0.008458">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.275510" elapsed="0.000099"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.275907" elapsed="0.000051"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.276338" elapsed="0.000078"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.276716" elapsed="0.000061"/>
</kw>
<status status="NOT RUN" start="2024-12-01T17:03:22.274956" elapsed="0.001926"/>
</branch>
<status status="NOT RUN" start="2024-12-01T17:03:22.274873" elapsed="0.002095"/>
</if>
<var name="${i}">7</var>
<status status="FAIL" start="2024-12-01T17:03:22.227576" elapsed="0.049509">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</iter>
<var>${i}</var>
<value>${number_of_configurations} + 1</value>
<value>${MAX_CONFIGS} + 2</value>
<status status="FAIL" start="2024-12-01T17:03:22.173859" elapsed="0.103351">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</for>
<doc>Test for the server’s response when exceeding the maximum number of configurations.</doc>
<tag>id:create_07</tag>
<tag>service:create</tag>
<status status="FAIL" start="2024-12-01T17:03:22.159460" elapsed="0.118058">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</test>
<test id="s1-s1-t8" name="TC08 - Check Unauthorized Access" line="123">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.283427" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.283589" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T17:03:22.283938" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.279044" elapsed="0.004956"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.286699" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.285013" elapsed="0.001768"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.288693" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.287009" elapsed="0.001799"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.290906" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.289114" elapsed="0.001859"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.291646" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.291231" elapsed="0.000511"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.284433" elapsed="0.007429"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.292113" elapsed="0.000328"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.293113" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T17:03:22.294924" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.292767" elapsed="0.002206"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.295195" elapsed="0.000354"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.296163" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:22.297798" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.295883" elapsed="0.001954"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.298021" elapsed="0.000293"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:create_08</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.278030" elapsed="0.020466"/>
</test>
<test id="s1-s1-t9" name="TC09 - Unknown Payload Field" line="135">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.302756" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "SAR", "data_downlink_frequency_band": "S-Band"}' 
 </msg>
<msg time="2024-12-01T17:03:22.302900" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '149'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to json: unknown field \"data_downlink_frequency_band\"","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.303152" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_UNKNOWN_PAYLOAD_FIELD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.299517" elapsed="0.003691"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.306537" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.304735" elapsed="0.001917"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.308500" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to json: unknown field \"data_downlink_frequency_band\"","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.306881" elapsed="0.001723"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.310315" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: unknown field "data_downlink_frequency_band"', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.308862" elapsed="0.001517"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.311145" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: unknown field "data_downlink_frequency_band"', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.310662" elapsed="0.000584"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.303633" elapsed="0.007858"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.311758" elapsed="0.000377"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.312866" elapsed="0.000072"/>
</return>
<msg time="2024-12-01T17:03:22.315306" level="INFO">${actual_error_message} = invalid request due to json: unknown field "data_downlink_frequency_band"</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.312452" elapsed="0.002977"/>
</kw>
<kw name="Build Unknown Field Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:22.317053" level="INFO">${message} = invalid request due to json: unknown field "data_downlink_frequency_band"</msg>
<var>${message}</var>
<arg>${UNKNOWN_FIELD_ERROR_MSG}</arg>
<arg>UNKNOWN_FIELD_PLACEHOLDER</arg>
<arg>${UNKNOWN_FIELD}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.316602" elapsed="0.000511"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:22.317260" elapsed="0.000062"/>
</return>
<msg time="2024-12-01T17:03:22.317615" level="INFO">${expected_error_message} = invalid request due to json: unknown field "data_downlink_frequency_band"</msg>
<var>${expected_error_message}</var>
<arg>${UNKNOWN_PAYLOAD_FIELD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.315883" elapsed="0.001798"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.317939" elapsed="0.000413"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.319140" elapsed="0.000083"/>
</return>
<msg time="2024-12-01T17:03:22.320983" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.318740" elapsed="0.002309"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.321325" elapsed="0.000454"/>
</kw>
<doc>Verify the endpoint rejects requests with unknown payload field.</doc>
<tag>id:create_09</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.298818" elapsed="0.023193"/>
</test>
<test id="s1-s1-t10" name="TC10 - Malformed JSON" line="148">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.323396" level="INFO">${malformed_payload} = {"cospar_id": "2024-003ZZ", "name": "New Satellite"</msg>
<var>${malformed_payload}</var>
<arg>{"cospar_id": "2024-003ZZ", "name": "New Satellite"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T17:03:22.323143" elapsed="0.000299"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.326268" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '51'} 
 body={"cospar_id": "2024-003ZZ", "name": "New Satellite" 
 </msg>
<msg time="2024-12-01T17:03:22.326381" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '111'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to unexpected EOF","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.326586" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>data=${malformed_payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.323720" elapsed="0.002910"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.330319" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.328319" elapsed="0.002110"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.332330" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to unexpected EOF","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.330736" elapsed="0.001697"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.334369" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to unexpected EOF', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.332748" elapsed="0.001690"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.335870" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to unexpected EOF', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.335049" elapsed="0.001056"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.326973" elapsed="0.009387"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.336713" elapsed="0.000503"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.338178" elapsed="0.000089"/>
</return>
<msg time="2024-12-01T17:03:22.341418" level="INFO">${actual_error_message} = invalid request due to unexpected EOF</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.337678" elapsed="0.003922"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${UNEXPECTED_EOF_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.343197" elapsed="0.000529"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.347295" elapsed="0.000293"/>
</return>
<msg time="2024-12-01T17:03:22.349302" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.344187" elapsed="0.005180"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.349679" elapsed="0.000693"/>
</kw>
<doc>Verify the endpoint rejects requests when the JSON request body is malformed.</doc>
<tag>id:create_10</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T17:03:22.322317" elapsed="0.028343"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.353277" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T17:03:22.353027" elapsed="0.000475"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:22.352397" elapsed="0.001302"/>
</kw>
<doc>Create satellite configuration test cases</doc>
<status status="FAIL" start="2024-12-01T17:03:21.197883" elapsed="1.155916"/>
</suite>
<suite id="s1-s2" name="Delete Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/delete_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.375400" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T17:03:22.374645" elapsed="0.001350"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:22.374141" elapsed="0.002238"/>
</kw>
<test id="s1-s2-t1" name="TC01 - Delete Valid Configuration" line="14">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.389476" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.389670" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '506'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"},{"id":4,"name":"New Satellite 4","type":"OPTICAL","cospar_id":"2024-004ZZ"},{"id":5,"name":"New Satellite 5","type":"OPTICAL","cospar_id":"2025-005ZZ"},{"id":6,"name":"New Satellite 6","type":"OPTICAL","cospar_id":"2026-006ZZ"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.389935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.378962" elapsed="0.011031"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.393583" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.391059" elapsed="0.002652"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.396125" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"},{"id":4,"name":"New Satellite 4","type":"OPTICAL","cospar_id":"2024-004ZZ"},{"id":5,"name":"New Satellite 5","type":"OPTICAL","cospar_id":"2025-005ZZ"},{"id":6,"name":"New Satellite 6","type":"OPTICAL","cospar_id":"2026-006ZZ"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.394052" elapsed="0.002208"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.399246" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.396568" elapsed="0.002743"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.400188" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.399641" elapsed="0.000664"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.390379" elapsed="0.010088"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.402304" elapsed="0.000064"/>
</return>
<msg time="2024-12-01T17:03:22.405213" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.401771" elapsed="0.003503"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.405820" level="INFO">Length is 6.</msg>
<msg time="2024-12-01T17:03:22.405991" level="INFO">${number_of_configurations} = 6</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.405544" elapsed="0.000491"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.408717" elapsed="0.000030"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.408452" elapsed="0.000377"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.408993" elapsed="0.000172"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.408903" elapsed="0.000358"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.408403" elapsed="0.000934"/>
</if>
<msg time="2024-12-01T17:03:22.411446" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.407757" elapsed="0.003754"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.417642" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.417926" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.411813" elapsed="0.006294"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T17:03:22.406702" elapsed="0.011510"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.421552" elapsed="0.000059"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.421245" elapsed="0.000445"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.421817" elapsed="0.000076"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.421743" elapsed="0.000236"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.421199" elapsed="0.000829"/>
</if>
<msg time="2024-12-01T17:03:22.424002" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.419584" elapsed="0.004490"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.427537" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.427696" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.424370" elapsed="0.003479"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T17:03:22.418468" elapsed="0.009503"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.429316" elapsed="0.000042"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.429090" elapsed="0.000332"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.429526" elapsed="0.000065"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.429472" elapsed="0.000177"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.429027" elapsed="0.000662"/>
</if>
<msg time="2024-12-01T17:03:22.431689" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.428521" elapsed="0.003214"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.434939" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.435068" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.431945" elapsed="0.004564"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T17:03:22.428183" elapsed="0.008679"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.438524" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.438291" elapsed="0.000353"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.438743" elapsed="0.000056"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.438688" elapsed="0.000177"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.438257" elapsed="0.000662"/>
</if>
<msg time="2024-12-01T17:03:22.440905" level="INFO">${id} = 4</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.437751" elapsed="0.003202"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.444023" level="INFO">DELETE Request : url=http://localhost:1234/configs/4 
 path_url=/configs/4 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.444118" level="INFO">DELETE Response : url=http://localhost:1234/configs/4 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.441165" elapsed="0.003068"/>
</kw>
<var name="${i}">3</var>
<status status="PASS" start="2024-12-01T17:03:22.437195" elapsed="0.007124"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.445337" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.445175" elapsed="0.000315"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.445607" elapsed="0.000043"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.445543" elapsed="0.000159"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.445150" elapsed="0.000589"/>
</if>
<msg time="2024-12-01T17:03:22.447705" level="INFO">${id} = 5</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.444773" elapsed="0.002982"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.451277" level="INFO">DELETE Request : url=http://localhost:1234/configs/5 
 path_url=/configs/5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.451400" level="INFO">DELETE Response : url=http://localhost:1234/configs/5 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.448026" elapsed="0.003505"/>
</kw>
<var name="${i}">4</var>
<status status="PASS" start="2024-12-01T17:03:22.444495" elapsed="0.007150"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.452962" elapsed="0.000023"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.452748" elapsed="0.000302"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.453143" elapsed="0.000043"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.453091" elapsed="0.000148"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.452715" elapsed="0.000579"/>
</if>
<msg time="2024-12-01T17:03:22.455300" level="INFO">${id} = 6</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.452214" elapsed="0.003144"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.457808" level="INFO">DELETE Request : url=http://localhost:1234/configs/6 
 path_url=/configs/6 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.457916" level="INFO">DELETE Response : url=http://localhost:1234/configs/6 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.455591" elapsed="0.002444"/>
</kw>
<var name="${i}">5</var>
<status status="PASS" start="2024-12-01T17:03:22.451857" elapsed="0.006271"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:22.406158" elapsed="0.052026"/>
</for>
<status status="PASS" start="2024-12-01T17:03:22.378343" elapsed="0.079940"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.463316" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.463443" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.463940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.459133" elapsed="0.004881"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.458534" elapsed="0.005637"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.467756" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:22.467855" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.468020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.465208" elapsed="0.002849"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.464477" elapsed="0.003710"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.471264" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:22.471440" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.471612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.469001" elapsed="0.002650"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.468435" elapsed="0.003350"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T17:03:22.377754" elapsed="0.094124"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.475527" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.475680" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.475909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.472140" elapsed="0.003822"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.478823" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.477011" elapsed="0.001918"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.480887" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.479183" elapsed="0.001872"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.482753" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.481292" elapsed="0.001507"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.483317" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.482998" elapsed="0.000379"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.476336" elapsed="0.007138"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.483948" elapsed="0.000250"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:22.484696" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T17:03:22.486480" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:22.484428" elapsed="0.002167"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.487024" elapsed="0.000606"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.489232" elapsed="0.000073"/>
</return>
<msg time="2024-12-01T17:03:22.491523" level="INFO">${actual_data_message} = Mission config deleted successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.488137" elapsed="0.003461"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.492341" level="FAIL">Mission config deleted successfully != Mission configuration deleted successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_DELETED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:22.491858" elapsed="0.000599">Mission config deleted successfully != Mission configuration deleted successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.492768" elapsed="0.000037"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.492996" elapsed="0.000029"/>
</kw>
<doc>Verify that a valid satellite configuration can be deleted successfully.</doc>
<tag>id:delete_01</tag>
<tag>service:delete</tag>
<status status="FAIL" start="2024-12-01T17:03:22.376610" elapsed="0.116652">Mission config deleted successfully != Mission configuration deleted successfully.</status>
</test>
<test id="s1-s2-t2" name="TC02 - Delete Non-existent Configuration" line="32">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.497216" level="INFO">DELETE Request : url=http://localhost:1234/configs/9999 
 path_url=/configs/9999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.497322" level="INFO">DELETE Response : url=http://localhost:1234/configs/9999 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '124'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.497568" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.494637" elapsed="0.002976"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.500220" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.498334" elapsed="0.001996"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.502411" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.500689" elapsed="0.001842"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.504811" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.502842" elapsed="0.002022"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.505785" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.505204" elapsed="0.000694"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.497894" elapsed="0.008194"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.506344" elapsed="0.000470"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.507736" elapsed="0.000060"/>
</return>
<msg time="2024-12-01T17:03:22.509527" level="INFO">${actual_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.507303" elapsed="0.002305"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:22.511098" level="INFO">${message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.510663" elapsed="0.000491"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:22.511263" elapsed="0.000061"/>
</return>
<msg time="2024-12-01T17:03:22.511607" level="INFO">${expected_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID}</arg>
<status status="PASS" start="2024-12-01T17:03:22.510012" elapsed="0.001643"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.511906" elapsed="0.000406"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.513056" elapsed="0.000118"/>
</return>
<msg time="2024-12-01T17:03:22.514904" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.512644" elapsed="0.002525"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.515464" elapsed="0.000474"/>
</kw>
<doc>Verify server response when trying to delete a non-existent configuration.</doc>
<tag>id:delete_02</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T17:03:22.493662" elapsed="0.022931"/>
</test>
<test id="s1-s2-t3" name="TC03 - Delete with Invalid ID Format" line="45">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.522422" level="INFO">DELETE Request : url=http://localhost:1234/configs/invalid_id 
 path_url=/configs/invalid_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.522636" level="INFO">DELETE Response : url=http://localhost:1234/configs/invalid_id 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '153'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.522937" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID_FORMAT}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.517941" elapsed="0.005054"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.525485" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.523966" elapsed="0.001670"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.528012" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.525882" elapsed="0.002300"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.530148" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.528459" elapsed="0.001870"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.531123" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.530644" elapsed="0.000593"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.523347" elapsed="0.008043"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.531650" elapsed="0.000505"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.533527" elapsed="0.000111"/>
</return>
<msg time="2024-12-01T17:03:22.535575" level="INFO">${actual_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.532509" elapsed="0.003131"/>
</kw>
<kw name="Build Parse Int Invalid Syntax Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:22.536877" level="INFO">${message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${message}</var>
<arg>${PARSE_INT_INVALID_SYNTAX_ERROR_MSG}</arg>
<arg>INVALID_ID_FORMAT_PLACEHOLDER</arg>
<arg>${INVALID_ID_FORMAT}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.536501" elapsed="0.000418"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:22.537023" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T17:03:22.537260" level="INFO">${expected_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID_FORMAT}</arg>
<status status="PASS" start="2024-12-01T17:03:22.535963" elapsed="0.001333"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.537474" elapsed="0.000320"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.538253" elapsed="0.000037"/>
</return>
<msg time="2024-12-01T17:03:22.539707" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.538002" elapsed="0.001790"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.540190" elapsed="0.000476"/>
</kw>
<doc>Verify server response when deleting with an invalid ID format.</doc>
<tag>id:delete_03</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T17:03:22.517013" elapsed="0.023872"/>
</test>
<test id="s1-s2-t4" name="TC04 - Check Unauthorized Access" line="58">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.544658" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.544819" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T17:03:22.545037" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.541933" elapsed="0.003166"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.548164" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.546178" elapsed="0.002075"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.550089" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.548504" elapsed="0.001674"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.551873" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.550402" elapsed="0.001516"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.552489" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.552130" elapsed="0.000437"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.545487" elapsed="0.007206"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.552885" elapsed="0.000362"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.554173" elapsed="0.000137"/>
</return>
<msg time="2024-12-01T17:03:22.556013" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.553648" elapsed="0.002433"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.556362" elapsed="0.000394"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.557603" elapsed="0.000058"/>
</return>
<msg time="2024-12-01T17:03:22.559460" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.557157" elapsed="0.002353"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.559768" elapsed="0.000388"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:delete_04</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T17:03:22.541180" elapsed="0.019169"/>
</test>
<test id="s1-s2-t5" name="TC05 - Boundary Test - Delete with ID as 0" line="70">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.562114" level="INFO">${id} = 0</msg>
<var>${id}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T17:03:22.561828" elapsed="0.000335"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.565162" level="INFO">DELETE Request : url=http://localhost:1234/configs/0 
 path_url=/configs/0 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.565278" level="INFO">DELETE Response : url=http://localhost:1234/configs/0 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.565441" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.562427" elapsed="0.003069"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.568784" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.566760" elapsed="0.002125"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.570744" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.569130" elapsed="0.001729"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.573432" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.571190" elapsed="0.002295"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.574193" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.573754" elapsed="0.000504"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.565849" elapsed="0.008513"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.574536" elapsed="0.000273"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.575296" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:22.577007" level="INFO">${actual_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.575035" elapsed="0.002012"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:22.578015" level="INFO">${message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.577705" elapsed="0.000349"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:22.578145" elapsed="0.000038"/>
</return>
<msg time="2024-12-01T17:03:22.578368" level="INFO">${expected_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T17:03:22.577259" elapsed="0.001144"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.578580" elapsed="0.000290"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.579344" elapsed="0.000046"/>
</return>
<msg time="2024-12-01T17:03:22.581509" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.579084" elapsed="0.002530"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.581877" elapsed="0.000443"/>
</kw>
<doc>Verify server response when trying to delete a configuration with ID=0.</doc>
<tag>id:delete_05</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T17:03:22.560715" elapsed="0.021870"/>
</test>
<test id="s1-s2-t6" name="TC06 - Confirm Deletion of Valid ID" line="84">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.587105" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.587299" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '196'} 
 body={"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.587542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.584992" elapsed="0.002604"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.589927" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.588316" elapsed="0.001679"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.591469" level="INFO">Response Body : {"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.590168" elapsed="0.001370"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.593525" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.591720" elapsed="0.001919"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.594793" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.594065" elapsed="0.000837"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.587873" elapsed="0.007186"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.595739" elapsed="0.000075"/>
</return>
<msg time="2024-12-01T17:03:22.597705" level="INFO">${response_data} = [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}]</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.595367" elapsed="0.002409"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.598225" level="INFO">Length is 2.</msg>
<msg time="2024-12-01T17:03:22.598351" level="INFO">${number_of_configurations} = 2</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.598008" elapsed="0.000377"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.599716" elapsed="0.000023"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.599492" elapsed="0.000307"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.599903" elapsed="0.000042"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.599850" elapsed="0.000146"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.599465" elapsed="0.000569"/>
</if>
<msg time="2024-12-01T17:03:22.601886" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.599076" elapsed="0.002851"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.604789" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.604884" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.602141" elapsed="0.002843"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T17:03:22.598791" elapsed="0.006277"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.606154" elapsed="0.000028"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.605964" elapsed="0.000281"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.606398" elapsed="0.000063"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.606290" elapsed="0.000521"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.605920" elapsed="0.000979"/>
</if>
<msg time="2024-12-01T17:03:22.608794" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.605531" elapsed="0.003328"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.611778" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.611898" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.609121" elapsed="0.002900"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T17:03:22.605247" elapsed="0.006955"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:22.598479" elapsed="0.013784"/>
</for>
<status status="PASS" start="2024-12-01T17:03:22.584501" elapsed="0.027884"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.615791" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.615922" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.616113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.613303" elapsed="0.002856"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.612691" elapsed="0.003607"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.619335" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:22.619435" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.619639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.617115" elapsed="0.002583"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.616537" elapsed="0.003323"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.625168" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:22.625322" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.625627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.621727" elapsed="0.003972"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.620731" elapsed="0.005182"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T17:03:22.583933" elapsed="0.042104"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.629396" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.629547" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.629770" level="INFO">${delete_response} = &lt;Response [200]&gt;</msg>
<var>${delete_response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.626346" elapsed="0.003471"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.632741" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.631008" elapsed="0.001831"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.635213" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.633127" elapsed="0.002193"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.637080" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.635592" elapsed="0.001648"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.638311" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.637512" elapsed="0.000944"/>
</kw>
<arg>${delete_response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.630165" elapsed="0.008547"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.642001" level="INFO">GET Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.642123" level="INFO">GET Response : url=http://localhost:1234/configs/1 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '1' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.642294" level="INFO">${get_response} = &lt;Response [404]&gt;</msg>
<var>${get_response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.639143" elapsed="0.003192"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.644955" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.643209" elapsed="0.001822"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.646518" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '1' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.645261" elapsed="0.001435"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.649587" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.647615" elapsed="0.002045"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.650418" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.649965" elapsed="0.000553"/>
</kw>
<arg>${get_response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.642687" elapsed="0.008020"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${get_response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.651016" elapsed="0.000388"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.652831" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T17:03:22.655204" level="INFO">${actual_error_message} = 'resource '1' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.651750" elapsed="0.003549"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:22.657283" level="INFO">${message} = 'resource '1' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.656618" elapsed="0.000752"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:22.657536" elapsed="0.000090"/>
</return>
<msg time="2024-12-01T17:03:22.657933" level="INFO">${expected_error_message} = 'resource '1' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${VALID_ID}</arg>
<status status="PASS" start="2024-12-01T17:03:22.655736" elapsed="0.002250"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.658271" elapsed="0.000478"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.659534" elapsed="0.000088"/>
</return>
<msg time="2024-12-01T17:03:22.661312" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.659118" elapsed="0.002261"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.662252" elapsed="0.001084"/>
</kw>
<doc>Confirm the satellite configuration is no longer retrievable after deletion.</doc>
<tag>id:delete_06</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T17:03:22.582968" elapsed="0.080643"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.665369" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T17:03:22.665156" elapsed="0.000371"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:22.664671" elapsed="0.001025"/>
</kw>
<doc>Delete satellite configuration test cases</doc>
<status status="FAIL" start="2024-12-01T17:03:22.356132" elapsed="0.309678"/>
</suite>
<suite id="s1-s3" name="List Satellite Configurations" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/list_satellite_configurations.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.714590" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T17:03:22.714072" elapsed="0.000833"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:22.713339" elapsed="0.001925"/>
</kw>
<test id="s1-s3-t1" name="TC01 - List Valid Configurations" line="15">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.720469" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.720631" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '196'} 
 body={"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.720800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.717702" elapsed="0.003137"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.723402" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.721591" elapsed="0.001880"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.724971" level="INFO">Response Body : {"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.723665" elapsed="0.001382"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.726922" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.725233" elapsed="0.001755"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.727800" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.727278" elapsed="0.000705"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.721121" elapsed="0.007008"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.728898" elapsed="0.000065"/>
</return>
<msg time="2024-12-01T17:03:22.733368" level="INFO">${response_data} = [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}]</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.728466" elapsed="0.004968"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.733985" level="INFO">Length is 2.</msg>
<msg time="2024-12-01T17:03:22.734117" level="INFO">${number_of_configurations} = 2</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.733674" elapsed="0.000478"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.735350" elapsed="0.000023"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.735195" elapsed="0.000232"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.735523" elapsed="0.000050"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.735476" elapsed="0.000152"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.735169" elapsed="0.000498"/>
</if>
<msg time="2024-12-01T17:03:22.737683" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.734799" elapsed="0.002924"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.740427" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.740638" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.737911" elapsed="0.002914"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T17:03:22.734513" elapsed="0.006482"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.742735" elapsed="0.000027"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.742478" elapsed="0.000358"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.742940" elapsed="0.000050"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.742882" elapsed="0.000160"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.742419" elapsed="0.000660"/>
</if>
<msg time="2024-12-01T17:03:22.745099" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.741914" elapsed="0.003233"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.747736" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.747903" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.745379" elapsed="0.002653"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T17:03:22.741461" elapsed="0.006662"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:22.734251" elapsed="0.013930"/>
</for>
<status status="PASS" start="2024-12-01T17:03:22.717076" elapsed="0.031206"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.751444" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.751571" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.751762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.749104" elapsed="0.002702"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.748521" elapsed="0.003432"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.759608" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:22.759814" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.760084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.753001" elapsed="0.007138"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.752252" elapsed="0.008048"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.763996" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:22.764109" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.764281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.761340" elapsed="0.002984"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.760627" elapsed="0.003834"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T17:03:22.716266" elapsed="0.048301"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.767378" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.767576" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.767873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.764831" elapsed="0.003106"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.770662" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.769144" elapsed="0.001622"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.772474" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.771032" elapsed="0.001551"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.774477" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.772838" elapsed="0.001689"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.775154" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.774794" elapsed="0.000433"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.768466" elapsed="0.006870"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.775538" elapsed="0.000279"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.776316" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T17:03:22.778513" level="INFO">${actual_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${actual_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.776039" elapsed="0.002546"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.779004" level="INFO">Length is 3.</msg>
<arg>${actual_data}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2024-12-01T17:03:22.778787" elapsed="0.000284"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.779455" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T17:03:22.779615" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${actual_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.779253" elapsed="0.000405"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.780424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${number_of_configurations}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-12-01T17:03:22.779999" elapsed="0.000604"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.781326" level="INFO">${expected_configurations} = [{'cospar_id': '2024-111GR', 'name': 'New Satellite Mission', 'type': 'OPTICAL'}, {'cospar_id': '2024-222UK', 'name': 'New Satellite Mission', 'type': 'SAR'}, {'cospar_id': '2024-333RU', 'name': 'New ...</msg>
<var>${expected_configurations}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>${REQ_VALID_SAR_PAYLOAD}</arg>
<arg>${REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-01T17:03:22.780854" elapsed="0.000517"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration" owner="common">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]}</value>
<status status="PASS" start="2024-12-01T17:03:22.782726" elapsed="0.000075"/>
</return>
<msg time="2024-12-01T17:03:22.784811" level="INFO">${actual_configuration} = {'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}</msg>
<var>${actual_configuration}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T17:03:22.782236" elapsed="0.002650"/>
</kw>
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2024-12-01T17:03:22.785363" level="INFO">Removed item with key 'id' and value '1'.</msg>
<arg>${actual_configuration}</arg>
<arg>id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.785120" elapsed="0.000315"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.785993" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<arg>${actual_configuration}</arg>
<arg>${expected_configurations}[${id}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.785669" elapsed="0.000415"/>
</kw>
<var name="${id}">0</var>
<status status="PASS" start="2024-12-01T17:03:22.781913" elapsed="0.004237"/>
</iter>
<iter>
<kw name="Get Data Configuration" owner="common">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]}</value>
<status status="PASS" start="2024-12-01T17:03:22.786902" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T17:03:22.788912" level="INFO">${actual_configuration} = {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}</msg>
<var>${actual_configuration}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T17:03:22.786517" elapsed="0.002440"/>
</kw>
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2024-12-01T17:03:22.789374" level="INFO">Removed item with key 'id' and value '2'.</msg>
<arg>${actual_configuration}</arg>
<arg>id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.789157" elapsed="0.000281"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.789941" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<arg>${actual_configuration}</arg>
<arg>${expected_configurations}[${id}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.789641" elapsed="0.000376"/>
</kw>
<var name="${id}">1</var>
<status status="PASS" start="2024-12-01T17:03:22.786321" elapsed="0.003756"/>
</iter>
<iter>
<kw name="Get Data Configuration" owner="common">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]}</value>
<status status="PASS" start="2024-12-01T17:03:22.790766" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:22.792681" level="INFO">${actual_configuration} = {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}</msg>
<var>${actual_configuration}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T17:03:22.790412" elapsed="0.002318"/>
</kw>
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2024-12-01T17:03:22.793146" level="INFO">Removed item with key 'id' and value '3'.</msg>
<arg>${actual_configuration}</arg>
<arg>id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.792928" elapsed="0.000554"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.794209" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<arg>${actual_configuration}</arg>
<arg>${expected_configurations}[${id}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.793790" elapsed="0.000560"/>
</kw>
<var name="${id}">2</var>
<status status="PASS" start="2024-12-01T17:03:22.790237" elapsed="0.004208"/>
</iter>
<var>${id}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:22.781493" elapsed="0.013029"/>
</for>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:22.795181" elapsed="0.000068"/>
</return>
<msg time="2024-12-01T17:03:22.796876" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:22.794820" elapsed="0.002104"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.797180" elapsed="0.000501"/>
</kw>
<kw name="Get Errors" owner="common">
<return>
<value>${RESPONSE_JSON['errors']}</value>
<status status="PASS" start="2024-12-01T17:03:22.798370" elapsed="0.000052"/>
</return>
<msg time="2024-12-01T17:03:22.800392" level="INFO">${actual_errors} = None</msg>
<var>${actual_errors}</var>
<status status="PASS" start="2024-12-01T17:03:22.798025" elapsed="0.002414"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.800750" elapsed="0.000329"/>
</kw>
<doc>Test for retrieving all configurations.</doc>
<tag>id:list_01</tag>
<tag>service:list</tag>
<status status="PASS" start="2024-12-01T17:03:22.715431" elapsed="0.085825"/>
</test>
<test id="s1-s3-t2" name="TC02 - Boundary Condition - Validate with Empty Mission Configuration Database" line="40">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.805418" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.805512" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.805707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.803052" elapsed="0.002697"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.808286" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.806532" elapsed="0.001879"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.810058" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.808689" elapsed="0.001473"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.812209" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.810445" elapsed="0.001827"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.812940" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.812519" elapsed="0.000494"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.806039" elapsed="0.007085"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.813679" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T17:03:22.815501" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.813339" elapsed="0.002209"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.816031" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T17:03:22.816150" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.815836" elapsed="0.000348"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.817350" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.817199" elapsed="0.000224"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.817510" elapsed="0.000040"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.817464" elapsed="0.000151"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.817173" elapsed="0.000480"/>
</if>
<msg time="2024-12-01T17:03:22.819422" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.816821" elapsed="0.002645"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.822917" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.823123" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.819737" elapsed="0.003506"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T17:03:22.816525" elapsed="0.006813"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.824769" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.824550" elapsed="0.000325"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.824974" elapsed="0.000046"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.824919" elapsed="0.000154"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.824513" elapsed="0.000599"/>
</if>
<msg time="2024-12-01T17:03:22.826999" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.824008" elapsed="0.003040"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.829432" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.829527" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.827294" elapsed="0.002378"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T17:03:22.823575" elapsed="0.006180"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.830792" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.830625" elapsed="0.000243"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.830957" elapsed="0.000038"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.830909" elapsed="0.000138"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.830599" elapsed="0.000485"/>
</if>
<msg time="2024-12-01T17:03:22.832823" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:22.830206" elapsed="0.002660"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.836242" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.836375" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.833069" elapsed="0.003465"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T17:03:22.829930" elapsed="0.006729"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:22.816281" elapsed="0.020445"/>
</for>
<status status="PASS" start="2024-12-01T17:03:22.802707" elapsed="0.034134"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T17:03:22.802325" elapsed="0.034602"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.839524" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.839647" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.839836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.837199" elapsed="0.002676"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.842304" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.840733" elapsed="0.001644"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.843917" level="INFO">Response Body : {"meta":null,"data":[],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.842594" elapsed="0.001390"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.846034" level="INFO">${response_json} = {'meta': None, 'data': [], 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.844170" elapsed="0.001994"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.846838" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [], 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.846388" elapsed="0.000545"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.840159" elapsed="0.006910"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.847367" elapsed="0.000565"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.848721" elapsed="0.000095"/>
</return>
<msg time="2024-12-01T17:03:22.850392" level="INFO">${actual_data} = []</msg>
<var>${actual_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.848281" elapsed="0.002170"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.851019" level="INFO">Length is 0.</msg>
<arg>${actual_data}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-12-01T17:03:22.850745" elapsed="0.000379"/>
</kw>
<kw name="Get Errors" owner="common">
<return>
<value>${RESPONSE_JSON['errors']}</value>
<status status="PASS" start="2024-12-01T17:03:22.851805" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T17:03:22.853828" level="INFO">${actual_errors} = None</msg>
<var>${actual_errors}</var>
<status status="PASS" start="2024-12-01T17:03:22.851427" elapsed="0.002454"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.854154" elapsed="0.000319"/>
</kw>
<doc>Test for an empty database scenario.</doc>
<tag>id:list_02</tag>
<tag>service:list</tag>
<status status="PASS" start="2024-12-01T17:03:22.801621" elapsed="0.053048"/>
</test>
<test id="s1-s3-t3" name="TC03 - Test for SQL Injection Vulnerability" line="52">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.857849" level="INFO">GET Request : url=http://localhost:1234/configs?id=1%20OR%201=1 
 path_url=/configs?id=1%20OR%201=1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.857944" level="INFO">GET Response : url=http://localhost:1234/configs?id=1%20OR%201=1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.858084" level="FAIL">Url: http://localhost:1234/configs?id=1%20OR%201=1 Expected status: 200 != 400</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}?${REQ_SQL_INJECTION_PAYLOAD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T17:03:22.855774" elapsed="0.002940">Url: http://localhost:1234/configs?id=1%20OR%201=1 Expected status: 200 != 400</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T17:03:22.859017" elapsed="0.000042"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.859240" elapsed="0.000030"/>
</kw>
<kw name="Get Data" owner="common">
<var>${actual_data}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.859495" elapsed="0.000041"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<arg>${actual_data}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.859716" elapsed="0.000027"/>
</kw>
<doc>Attempt SQL Injection attack on the API and validate response.</doc>
<tag>id:list_03</tag>
<tag>service:list</tag>
<status status="FAIL" start="2024-12-01T17:03:22.854995" elapsed="0.004977">Url: http://localhost:1234/configs?id=1%20OR%201=1 Expected status: 200 != 400</status>
</test>
<test id="s1-s3-t4" name="TC04 - Test for Cross-Site Scripting" line="61">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.864407" level="INFO">GET Request : url=http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E 
 path_url=/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.864549" level="INFO">GET Response : url=http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.864753" level="FAIL">Url: http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E Expected status: 200 != 400</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}?${REQ_CROSS_SITE_SCRIPTING_PAYLOAD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T17:03:22.861745" elapsed="0.003774">Url: http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E Expected status: 200 != 400</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T17:03:22.865918" elapsed="0.000044"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.866178" elapsed="0.000033"/>
</kw>
<kw name="Get Data" owner="common">
<var>${actual_data}</var>
<status status="NOT RUN" start="2024-12-01T17:03:22.866428" elapsed="0.000046"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<arg>${actual_data}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.866653" elapsed="0.000029"/>
</kw>
<doc>Attempt Cross-Site Scripting attack on the API and validate response.</doc>
<tag>id:list_04</tag>
<tag>service:list</tag>
<status status="FAIL" start="2024-12-01T17:03:22.860604" elapsed="0.006298">Url: http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E Expected status: 200 != 400</status>
</test>
<test id="s1-s3-t5" name="TC05 - Check Unauthorized Access" line="70">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.870315" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.870489" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T17:03:22.870668" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.868174" elapsed="0.002534"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.873022" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.871440" elapsed="0.001655"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.875150" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.873363" elapsed="0.001891"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.876954" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.875538" elapsed="0.001475"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.877755" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.877307" elapsed="0.000562"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.870989" elapsed="0.006999"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.878194" elapsed="0.000321"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.879164" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T17:03:22.881581" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.878829" elapsed="0.002802"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.881873" elapsed="0.000364"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.882751" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T17:03:22.884366" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.882460" elapsed="0.001946"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.884597" elapsed="0.000303"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:list_05</tag>
<tag>service:list</tag>
<status status="PASS" start="2024-12-01T17:03:22.867299" elapsed="0.017773"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.886069" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T17:03:22.885935" elapsed="0.000244"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:22.885669" elapsed="0.000608"/>
</kw>
<doc>List satellite configurations test cases</doc>
<status status="FAIL" start="2024-12-01T17:03:22.667055" elapsed="0.219278"/>
</suite>
<suite id="s1-s4" name="Retrieve Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/retrieve_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.900697" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T17:03:22.900096" elapsed="0.000877"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:22.899640" elapsed="0.001490"/>
</kw>
<test id="s1-s4-t1" name="TC01 - Retrieve Valid Configuration" line="14">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.906712" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.906814" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.906987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.903493" elapsed="0.003535"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.909393" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.907858" elapsed="0.001613"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.911077" level="INFO">Response Body : {"meta":null,"data":[],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.909755" elapsed="0.001390"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.912757" level="INFO">${response_json} = {'meta': None, 'data': [], 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.911328" elapsed="0.001473"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.913388" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [], 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.913011" elapsed="0.000459"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.907360" elapsed="0.006290"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:22.914429" elapsed="0.000148"/>
</return>
<msg time="2024-12-01T17:03:22.916456" level="INFO">${response_data} = []</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:22.913968" elapsed="0.002559"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.917228" level="INFO">Length is 0.</msg>
<msg time="2024-12-01T17:03:22.917384" level="INFO">${number_of_configurations} = 0</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:22.916866" elapsed="0.000560"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<var>${id}</var>
<arg>${i}</arg>
<status status="NOT RUN" start="2024-12-01T17:03:22.918312" elapsed="0.000059"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:22.918616" elapsed="0.000041"/>
</kw>
<var name="${i}"/>
<status status="NOT RUN" start="2024-12-01T17:03:22.917925" elapsed="0.000828"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.917580" elapsed="0.001236"/>
</for>
<status status="PASS" start="2024-12-01T17:03:22.902984" elapsed="0.015953"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.922402" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:22.922499" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.922685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.919995" elapsed="0.002731"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.919214" elapsed="0.003652"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.925847" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:22.925942" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.926120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.923673" elapsed="0.002487"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.923112" elapsed="0.003191"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.930433" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:22.930584" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.930815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.927514" elapsed="0.003353"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:22.926732" elapsed="0.004300"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T17:03:22.902411" elapsed="0.028753"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.933862" level="INFO">GET Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.933995" level="INFO">GET Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '116'} 
 body={"meta":null,"data":{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:22.934201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.931606" elapsed="0.002636"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.936576" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.935032" elapsed="0.001616"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.938135" level="INFO">Response Body : {"meta":null,"data":{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.936831" elapsed="0.001372"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.939835" level="INFO">${response_json} = {'meta': None, 'data': {'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.938387" elapsed="0.001494"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.940789" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.940221" elapsed="0.000685"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.934539" elapsed="0.006578"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.941465" elapsed="0.000403"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:22.942668" elapsed="0.000072"/>
</return>
<msg time="2024-12-01T17:03:22.944686" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:22.942238" elapsed="0.002500"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.945004" elapsed="0.000389"/>
</kw>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.946972" elapsed="0.000045"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.946787" elapsed="0.000296"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.947178" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.947126" elapsed="0.000122"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.946755" elapsed="0.000548"/>
</if>
<msg time="2024-12-01T17:03:22.949129" level="INFO">${actual_data_id} = 1</msg>
<var>${actual_data_id}</var>
<status status="PASS" start="2024-12-01T17:03:22.946344" elapsed="0.002828"/>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.949685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${actual_data_id}</arg>
<arg>${VALID_ID}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" start="2024-12-01T17:03:22.949386" elapsed="0.000390"/>
</kw>
<kw name="Get Data Configuration Name" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['name']}</value>
<status status="PASS" start="2024-12-01T17:03:22.950587" elapsed="0.000040"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.950413" elapsed="0.000277"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['name']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.950784" elapsed="0.000019"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.950734" elapsed="0.000115"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.950387" elapsed="0.000499"/>
</if>
<msg time="2024-12-01T17:03:22.952612" level="INFO">${actual_data_name} = New Satellite Mission</msg>
<var>${actual_data_name}</var>
<status status="PASS" start="2024-12-01T17:03:22.950078" elapsed="0.002576"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-12-01T17:03:22.953186" level="INFO">${expected_data_name} = New Satellite Mission</msg>
<var>${expected_data_name}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.952875" elapsed="0.000348"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_name}</arg>
<arg>${expected_data_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.953494" elapsed="0.000486"/>
</kw>
<kw name="Get Data Configuration Type" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['type']}</value>
<status status="PASS" start="2024-12-01T17:03:22.955414" elapsed="0.000061"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.955188" elapsed="0.000400"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['type']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.955723" elapsed="0.000024"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.955645" elapsed="0.000158"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.955146" elapsed="0.000700"/>
</if>
<msg time="2024-12-01T17:03:22.957842" level="INFO">${actual_data_type} = OPTICAL</msg>
<var>${actual_data_type}</var>
<status status="PASS" start="2024-12-01T17:03:22.954630" elapsed="0.003293"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-12-01T17:03:22.958515" level="INFO">${expected_data_type} = OPTICAL</msg>
<var>${expected_data_type}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.958151" elapsed="0.000440"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_type}</arg>
<arg>${expected_data_type}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.958962" elapsed="0.000344"/>
</kw>
<kw name="Get Data Configuration Cospar ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['cospar_id']}</value>
<status status="PASS" start="2024-12-01T17:03:22.960210" elapsed="0.000052"/>
</return>
<status status="PASS" start="2024-12-01T17:03:22.960031" elapsed="0.000294"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['cospar_id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:22.960420" elapsed="0.000020"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:22.960368" elapsed="0.000119"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:22.959995" elapsed="0.000529"/>
</if>
<msg time="2024-12-01T17:03:22.962230" level="INFO">${actual_data_cospar_id} = 2024-111GR</msg>
<var>${actual_data_cospar_id}</var>
<status status="PASS" start="2024-12-01T17:03:22.959664" elapsed="0.002609"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-12-01T17:03:22.962802" level="INFO">${expected_data_cospar_id} = 2024-111GR</msg>
<var>${expected_data_cospar_id}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>cospar_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.962493" elapsed="0.000346"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_cospar_id}</arg>
<arg>${expected_data_cospar_id}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.963028" elapsed="0.000294"/>
</kw>
<kw name="Get Errors" owner="common">
<return>
<value>${RESPONSE_JSON['errors']}</value>
<status status="PASS" start="2024-12-01T17:03:22.963817" elapsed="0.000046"/>
</return>
<msg time="2024-12-01T17:03:22.965628" level="INFO">${actual_errors} = None</msg>
<var>${actual_errors}</var>
<status status="PASS" start="2024-12-01T17:03:22.963537" elapsed="0.002134"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:22.965868" elapsed="0.000310"/>
</kw>
<doc>Test retrieving satellite configuration with a valid mission ID.</doc>
<tag>id:retrieve_01</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T17:03:22.901293" elapsed="0.065061"/>
</test>
<test id="s1-s4-t2" name="TC02 - Retrieve Non-existent Configuration" line="40">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.970658" level="INFO">GET Request : url=http://localhost:1234/configs/9999 
 path_url=/configs/9999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.970814" level="INFO">GET Response : url=http://localhost:1234/configs/9999 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '124'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.971079" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.967980" elapsed="0.003186"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.973783" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.972101" elapsed="0.001764"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.976045" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.974169" elapsed="0.001954"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.977730" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.976325" elapsed="0.001447"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.978280" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.977963" elapsed="0.000377"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.971483" elapsed="0.006969"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.978619" elapsed="0.000224"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:22.979321" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T17:03:22.980891" level="INFO">${actual_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.979067" elapsed="0.001887"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:22.982593" level="INFO">${message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:22.982104" elapsed="0.000553"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:22.982791" elapsed="0.000064"/>
</return>
<msg time="2024-12-01T17:03:22.983138" level="INFO">${expected_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID}</arg>
<status status="PASS" start="2024-12-01T17:03:22.981471" elapsed="0.001716"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.983446" elapsed="0.000427"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:22.984608" elapsed="0.000096"/>
</return>
<msg time="2024-12-01T17:03:22.986738" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:22.984201" elapsed="0.002584"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:22.987023" elapsed="0.000391"/>
</kw>
<doc>Test retrieving satellite configuration with an invalid mission ID.</doc>
<tag>id:retrieve_02</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T17:03:22.966742" elapsed="0.020899"/>
</test>
<test id="s1-s4-t3" name="TC03 - Boundary Test - Retrieve with ID as 0 or -1" line="52">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.988955" level="INFO">${id} = 0</msg>
<var>${id}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T17:03:22.988750" elapsed="0.000242"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:22.991172" level="INFO">GET Request : url=http://localhost:1234/configs/0 
 path_url=/configs/0 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:22.991276" level="INFO">GET Response : url=http://localhost:1234/configs/0 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:22 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:22.991422" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:22.989171" elapsed="0.002287"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.993666" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.992168" elapsed="0.001628"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.995964" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:22.994221" elapsed="0.001846"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:22.998146" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:22.996334" elapsed="0.001866"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:22.998854" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:22.998463" elapsed="0.000460"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:22.991744" elapsed="0.007288"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:22.999216" elapsed="0.000280"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.000073" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T17:03:23.001705" level="INFO">${actual_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:22.999768" elapsed="0.001980"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:23.002779" level="INFO">${message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:23.002455" elapsed="0.000363"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:23.002907" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T17:03:23.003138" level="INFO">${expected_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T17:03:23.002004" elapsed="0.001169"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.003341" elapsed="0.000315"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.004133" elapsed="0.000046"/>
</return>
<msg time="2024-12-01T17:03:23.005711" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.003871" elapsed="0.001878"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.005910" elapsed="0.000300"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.006715" level="INFO">${id} = -1</msg>
<var>${id}</var>
<arg>-1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T17:03:23.006437" elapsed="0.000332"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.010899" level="INFO">GET Request : url=http://localhost:1234/configs/-1 
 path_url=/configs/-1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.011038" level="INFO">GET Response : url=http://localhost:1234/configs/-1 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '122'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '-1' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.011438" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.007088" elapsed="0.004427"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.015224" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.013032" elapsed="0.002298"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.017308" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '-1' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.015641" elapsed="0.001768"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.019392" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '-1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.017695" elapsed="0.001767"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.020176" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '-1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.019738" elapsed="0.000579"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.012031" elapsed="0.008490"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.020891" elapsed="0.000543"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.022239" elapsed="0.000069"/>
</return>
<msg time="2024-12-01T17:03:23.024394" level="INFO">${actual_error_message} = 'resource '-1' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.021834" elapsed="0.002624"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:23.026038" level="INFO">${message} = 'resource '-1' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:23.025486" elapsed="0.000645"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:23.026287" elapsed="0.000084"/>
</return>
<msg time="2024-12-01T17:03:23.026780" level="INFO">${expected_error_message} = 'resource '-1' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T17:03:23.024833" elapsed="0.002020"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.027179" elapsed="0.000516"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.028426" elapsed="0.000066"/>
</return>
<msg time="2024-12-01T17:03:23.030308" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.028031" elapsed="0.002336"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.030646" elapsed="0.000353"/>
</kw>
<doc>Test retrieving configurations with boundary ID values.</doc>
<tag>id:retrieve_03</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T17:03:22.987949" elapsed="0.043224"/>
</test>
<test id="s1-s4-t4" name="TC04 - Retrieve with Invalid ID Format" line="74">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.035362" level="INFO">GET Request : url=http://localhost:1234/configs/invalid_id 
 path_url=/configs/invalid_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.035496" level="INFO">GET Response : url=http://localhost:1234/configs/invalid_id 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '153'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.035754" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID_FORMAT}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.032236" elapsed="0.003569"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.038354" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.036879" elapsed="0.001556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.040210" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.038685" elapsed="0.001614"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.042094" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.040506" elapsed="0.001634"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.042803" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.042452" elapsed="0.000415"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.036210" elapsed="0.006757"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.043141" elapsed="0.000262"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.043875" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:23.045387" level="INFO">${actual_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.043622" elapsed="0.001804"/>
</kw>
<kw name="Build Parse Int Invalid Syntax Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:23.046490" level="INFO">${message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${message}</var>
<arg>${PARSE_INT_INVALID_SYNTAX_ERROR_MSG}</arg>
<arg>INVALID_ID_FORMAT_PLACEHOLDER</arg>
<arg>${INVALID_ID_FORMAT}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:23.046104" elapsed="0.000438"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:23.046652" elapsed="0.000068"/>
</return>
<msg time="2024-12-01T17:03:23.047058" level="INFO">${expected_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID_FORMAT}</arg>
<status status="PASS" start="2024-12-01T17:03:23.045635" elapsed="0.001472"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.047365" elapsed="0.000385"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.048328" elapsed="0.000063"/>
</return>
<msg time="2024-12-01T17:03:23.050608" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.048009" elapsed="0.002667"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.050952" elapsed="0.000461"/>
</kw>
<doc>Test the response when an invalid data format is passed as ID.</doc>
<tag>id:retrieve_04</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T17:03:23.031481" elapsed="0.020202"/>
</test>
<test id="s1-s4-t5" name="TC05 - Check Unauthorized Access" line="86">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.055124" level="INFO">GET Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.055229" level="INFO">GET Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T17:03:23.055388" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.052847" elapsed="0.002579"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.057689" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.056158" elapsed="0.001597"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.059201" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.057934" elapsed="0.001336"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.061416" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.059461" elapsed="0.002025"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.062215" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.061768" elapsed="0.000562"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.055725" elapsed="0.006737"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.062727" elapsed="0.000332"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.063837" elapsed="0.000083"/>
</return>
<msg time="2024-12-01T17:03:23.065712" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.063376" elapsed="0.002400"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.066010" elapsed="0.000375"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.066972" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T17:03:23.068712" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.066657" elapsed="0.002110"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.068999" elapsed="0.000465"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:retrieve_05</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T17:03:23.052055" elapsed="0.017700"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.070946" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T17:03:23.070827" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:23.070517" elapsed="0.000617"/>
</kw>
<doc>Retrieve satellite configuration test cases</doc>
<status status="PASS" start="2024-12-01T17:03:22.887624" elapsed="0.183556"/>
</suite>
<suite id="s1-s5" name="Update Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/update_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.090322" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T17:03:23.089899" elapsed="0.000731"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:23.089431" elapsed="0.001372"/>
</kw>
<test id="s1-s5-t1" name="TC01 - Update Valid Configuration" line="15">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.095367" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.095462" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.095682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.092978" elapsed="0.002744"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.098048" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.096475" elapsed="0.001641"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.099647" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.098304" elapsed="0.001418"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.101705" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.099940" elapsed="0.001825"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.102524" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.102040" elapsed="0.000600"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.096013" elapsed="0.006750"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T17:03:23.103351" elapsed="0.000070"/>
</return>
<msg time="2024-12-01T17:03:23.105418" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T17:03:23.103029" elapsed="0.002438"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.105907" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T17:03:23.106026" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T17:03:23.105694" elapsed="0.000365"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:23.107304" elapsed="0.000033"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:23.107140" elapsed="0.000270"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:23.107502" elapsed="0.000042"/>
</return>
<status status="PASS" start="2024-12-01T17:03:23.107452" elapsed="0.000155"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:23.107114" elapsed="0.000531"/>
</if>
<msg time="2024-12-01T17:03:23.109737" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:23.106738" elapsed="0.003038"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.111963" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.112135" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.109971" elapsed="0.002263"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T17:03:23.106413" elapsed="0.005902"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:23.113533" elapsed="0.000070"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:23.113224" elapsed="0.000471"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:23.113826" elapsed="0.000085"/>
</return>
<status status="PASS" start="2024-12-01T17:03:23.113749" elapsed="0.000251"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:23.113183" elapsed="0.000864"/>
</if>
<msg time="2024-12-01T17:03:23.115782" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:23.112783" elapsed="0.003047"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.118646" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.118757" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.116101" elapsed="0.002776"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T17:03:23.112494" elapsed="0.006466"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T17:03:23.120095" elapsed="0.000023"/>
</return>
<status status="NOT RUN" start="2024-12-01T17:03:23.119909" elapsed="0.000267"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T17:03:23.120269" elapsed="0.000055"/>
</return>
<status status="PASS" start="2024-12-01T17:03:23.120219" elapsed="0.000173"/>
</branch>
<status status="PASS" start="2024-12-01T17:03:23.119876" elapsed="0.000552"/>
</if>
<msg time="2024-12-01T17:03:23.122198" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T17:03:23.119457" elapsed="0.002781"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.124453" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T17:03:23.124542" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.122443" elapsed="0.002227"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T17:03:23.119159" elapsed="0.005591"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T17:03:23.106152" elapsed="0.018654"/>
</for>
<status status="PASS" start="2024-12-01T17:03:23.092603" elapsed="0.032302"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.128946" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.129292" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.129570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.125718" elapsed="0.003901"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:23.125137" elapsed="0.004674"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.133634" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:23.133735" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.133969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.130966" elapsed="0.003061"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:23.130131" elapsed="0.004048"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.137225" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:23.137316" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.137480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.135009" elapsed="0.002507"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T17:03:23.134428" elapsed="0.003244"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T17:03:23.092164" elapsed="0.045581"/>
</kw>
<kw name="Update Satellite Configuration" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.141865" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-235BE", "name": "Updated Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.141998" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.142222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_UPDATE}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.138699" elapsed="0.003581"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.148147" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.146334" elapsed="0.001900"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.150092" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.148447" elapsed="0.001718"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.151755" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.150349" elapsed="0.001445"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.152334" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.151982" elapsed="0.000415"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.142687" elapsed="0.009809"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.152669" elapsed="0.000259"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:23.153627" elapsed="0.000084"/>
</return>
<msg time="2024-12-01T17:03:23.155696" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:23.153152" elapsed="0.002609"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:23.156032" elapsed="0.000406"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.157243" elapsed="0.000086"/>
</return>
<msg time="2024-12-01T17:03:23.159343" level="INFO">${actual_data_message} = Mission config updated successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.156829" elapsed="0.002563"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.160099" level="FAIL">Mission config updated successfully != Mission configuration updated successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_UPDATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:23.159627" elapsed="0.000568">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:23.160551" elapsed="0.000051"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:23.160820" elapsed="0.000033"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_VALID_OPTICAL_UPDATE}</arg>
<status status="FAIL" start="2024-12-01T17:03:23.138104" elapsed="0.022901">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Update Satellite Configuration" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.164478" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-284BR", "name": "Updated Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T17:03:23.164589" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.164759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_UPDATE}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.161928" elapsed="0.002868"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.167444" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.165548" elapsed="0.002036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.169735" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.168007" elapsed="0.001825"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.171806" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.170088" elapsed="0.001765"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.172467" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.172100" elapsed="0.000431"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.165093" elapsed="0.007556"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.172851" elapsed="0.000260"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:23.173709" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T17:03:23.175451" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:23.173364" elapsed="0.002128"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:23.175966" elapsed="0.000311"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.176768" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T17:03:23.178430" level="INFO">${actual_data_message} = Mission config updated successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.176501" elapsed="0.001967"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.178998" level="FAIL">Mission config updated successfully != Mission configuration updated successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_UPDATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:23.178651" elapsed="0.000444">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:23.179334" elapsed="0.000034"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:23.179567" elapsed="0.000032"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_VALID_TELECOM_UPDATE}</arg>
<status status="FAIL" start="2024-12-01T17:03:23.161288" elapsed="0.018461">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Update Satellite Configuration" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.184843" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2025-674NL", "name": "Updated Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T17:03:23.184953" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T17:03:23.185168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_UPDATE}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.181131" elapsed="0.004079"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.187723" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.186029" elapsed="0.001770"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.189480" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.188088" elapsed="0.001462"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.191160" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.189769" elapsed="0.001432"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.191746" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.191397" elapsed="0.000409"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.185524" elapsed="0.006378"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.192068" elapsed="0.000230"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T17:03:23.192821" elapsed="0.000063"/>
</return>
<msg time="2024-12-01T17:03:23.194813" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T17:03:23.192535" elapsed="0.002360"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T17:03:23.195175" elapsed="0.000477"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.196328" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T17:03:23.198310" level="INFO">${actual_data_message} = Mission config updated successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.195990" elapsed="0.002403"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.199073" level="FAIL">Mission config updated successfully != Mission configuration updated successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_UPDATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T17:03:23.198646" elapsed="0.000552">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T17:03:23.199461" elapsed="0.000036"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T17:03:23.199733" elapsed="0.000031"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_VALID_SAR_UPDATE}</arg>
<status status="FAIL" start="2024-12-01T17:03:23.180150" elapsed="0.019766">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<doc>Verify that a valid satellite configuration can be updated successfully (for each possible payload type).</doc>
<tag>id:update_01</tag>
<tag>service:update</tag>
<status status="FAIL" start="2024-12-01T17:03:23.090974" elapsed="0.109182">Several failures occurred:

1) Mission config updated successfully != Mission configuration updated successfully.

2) Mission config updated successfully != Mission configuration updated successfully.

3) Mission config updated successfully != Mission configuration updated successfully.</status>
</test>
<test id="s1-s5-t2" name="TC02 - Update Non-existent Configuration" line="27">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.203728" level="INFO">PUT Request : url=http://localhost:1234/configs/9999 
 path_url=/configs/9999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-235BE", "name": "Updated Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.203822" level="INFO">PUT Response : url=http://localhost:1234/configs/9999 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '124'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.203981" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_OPTICAL_UPDATE}</arg>
<arg>expected_status=404</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.201374" elapsed="0.002644"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.206152" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.204770" elapsed="0.001469"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.208232" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.206468" elapsed="0.001872"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.210329" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.208616" elapsed="0.001782"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.211135" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.210732" elapsed="0.000496"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.204315" elapsed="0.007054"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.211589" elapsed="0.000283"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.212460" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T17:03:23.214253" level="INFO">${actual_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.212116" elapsed="0.002183"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T17:03:23.215332" level="INFO">${message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T17:03:23.215021" elapsed="0.000349"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T17:03:23.215455" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T17:03:23.215690" level="INFO">${expected_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID}</arg>
<status status="PASS" start="2024-12-01T17:03:23.214543" elapsed="0.001181"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.215889" elapsed="0.000291"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.216639" elapsed="0.000037"/>
</return>
<msg time="2024-12-01T17:03:23.218608" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.216381" elapsed="0.002266"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.218823" elapsed="0.000301"/>
</kw>
<doc>Verify server response when trying to update a non-existent configuration.</doc>
<tag>id:update_02</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.200580" elapsed="0.018721"/>
</test>
<test id="s1-s5-t3" name="TC03 - Update with Invalid COSPAR ID" line="40">
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.224755" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "INVALID", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.224869" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.225072" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.221675" elapsed="0.003436"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.227574" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.225949" elapsed="0.001702"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.229155" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.227857" elapsed="0.001363"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.230731" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.229405" elapsed="0.001365"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.231303" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.230969" elapsed="0.000391"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.225434" elapsed="0.006019"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.231683" elapsed="0.000226"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.232379" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:23.234328" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.232125" elapsed="0.002322"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.234830" elapsed="0.000428"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.235959" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T17:03:23.237899" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.235604" elapsed="0.002345"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.238179" elapsed="0.000349"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_XXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.220768" elapsed="0.017885"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.241964" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.242136" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.242293" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.239635" elapsed="0.002696"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.244585" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.243091" elapsed="0.001568"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.246132" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.244827" elapsed="0.001390"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.248244" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.246415" elapsed="0.001890"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.249087" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.248596" elapsed="0.000581"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.242617" elapsed="0.006714"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.249574" elapsed="0.000293"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.250592" elapsed="0.000062"/>
</return>
<msg time="2024-12-01T17:03:23.252386" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.250143" elapsed="0.002311"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.252679" elapsed="0.000360"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.253594" elapsed="0.000518"/>
</return>
<msg time="2024-12-01T17:03:23.255701" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.253293" elapsed="0.002448"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.255930" elapsed="0.000337"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_-dddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.238948" elapsed="0.017422"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.259703" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.259807" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.259977" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.257421" elapsed="0.002594"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.263090" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.261332" elapsed="0.001854"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.265143" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.263426" elapsed="0.001795"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.267012" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.265432" elapsed="0.001631"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.267676" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.267284" elapsed="0.000456"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.260445" elapsed="0.007466"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.268089" elapsed="0.000250"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.268818" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T17:03:23.270340" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.268545" elapsed="0.001833"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.270567" elapsed="0.000297"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.271343" elapsed="0.000040"/>
</return>
<msg time="2024-12-01T17:03:23.272934" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.271078" elapsed="0.001898"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.273175" elapsed="0.000519"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YY-dddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.256698" elapsed="0.017153"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.278430" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "2024-GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.278531" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.278715" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.275258" elapsed="0.003495"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.281140" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.279605" elapsed="0.001609"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.282732" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.281428" elapsed="0.001368"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.284312" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.282966" elapsed="0.001386"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.284875" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.284534" elapsed="0.000398"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.279062" elapsed="0.005963"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.285194" elapsed="0.000223"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.285888" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T17:03:23.287448" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.285635" elapsed="0.001864"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.287750" elapsed="0.000507"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.289035" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T17:03:23.291415" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.288633" elapsed="0.002839"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.291745" elapsed="0.000365"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.274276" elapsed="0.017942"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.295503" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-7GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.295613" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.295856" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.293143" elapsed="0.002752"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.298127" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.296651" elapsed="0.001543"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.299700" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.298373" elapsed="0.001404"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.301842" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.299984" elapsed="0.001935"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.302682" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.302192" elapsed="0.000573"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.296188" elapsed="0.006706"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.303117" elapsed="0.000347"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.304199" elapsed="0.000080"/>
</return>
<msg time="2024-12-01T17:03:23.305978" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.303797" elapsed="0.002233"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.306255" elapsed="0.000382"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.307175" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T17:03:23.308781" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.306891" elapsed="0.001932"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.309041" elapsed="0.000309"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.292497" elapsed="0.016958"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.312532" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-567", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.312641" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.312805" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.310306" elapsed="0.002537"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.315816" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.313902" elapsed="0.002011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.317734" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.316179" elapsed="0.001636"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.319595" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.318069" elapsed="0.001578"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.320259" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.319878" elapsed="0.000446"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.313144" elapsed="0.007283"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.320619" elapsed="0.000290"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.321487" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T17:03:23.323065" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.321216" elapsed="0.001892"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.323297" elapsed="0.000323"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.324096" elapsed="0.000039"/>
</return>
<msg time="2024-12-01T17:03:23.325653" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.323829" elapsed="0.001862"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.325877" elapsed="0.000301"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-ddd}</arg>
<status status="PASS" start="2024-12-01T17:03:23.309721" elapsed="0.016575"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.331271" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '80'} 
 body=b'{"cospar_id": "2024-567GRE", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.331396" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.331624" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.328347" elapsed="0.003353"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.334236" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.332527" elapsed="0.001792"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.335902" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.334526" elapsed="0.001446"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.337644" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.336181" elapsed="0.001503"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.338206" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.337869" elapsed="0.000396"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.332012" elapsed="0.006350"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.338527" elapsed="0.000240"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.339249" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T17:03:23.341387" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.338979" elapsed="0.002495"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.341799" elapsed="0.000414"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.343001" elapsed="0.000064"/>
</return>
<msg time="2024-12-01T17:03:23.344835" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.342591" elapsed="0.002301"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.345144" elapsed="0.000357"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.326586" elapsed="0.019063"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.348993" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"cospar_id": "2024567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.349103" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.349259" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.346588" elapsed="0.002707"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.351908" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.350422" elapsed="0.001552"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.353805" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.352148" elapsed="0.001827"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.356165" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.354440" elapsed="0.001774"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.356909" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.356458" elapsed="0.000548"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.349955" elapsed="0.007200"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.357471" elapsed="0.000431"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.358539" elapsed="0.000065"/>
</return>
<msg time="2024-12-01T17:03:23.360291" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.358221" elapsed="0.002115"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.360547" elapsed="0.000386"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.361438" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:23.363290" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.361168" elapsed="0.002164"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.363518" elapsed="0.000308"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYYdddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.345944" elapsed="0.017988"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.368492" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2O24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.368683" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.368965" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.364804" elapsed="0.004211"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.371821" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.369980" elapsed="0.001924"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.373661" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.372136" elapsed="0.001607"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.375498" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.374002" elapsed="0.001537"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.376123" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.375765" elapsed="0.000419"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.369371" elapsed="0.006909"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.376441" elapsed="0.000329"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.377291" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T17:03:23.378810" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.377025" elapsed="0.001824"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.379027" elapsed="0.000349"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.380507" elapsed="0.000136"/>
</return>
<msg time="2024-12-01T17:03:23.382611" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.379770" elapsed="0.002902"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.382942" elapsed="0.000387"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YXYY-dddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.364192" elapsed="0.019282"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.387322" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-_67GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.387423" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.387702" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.384770" elapsed="0.002972"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.390107" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.388508" elapsed="0.001664"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.391623" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.390347" elapsed="0.001344"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.393072" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.391861" elapsed="0.001267"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.394230" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.393437" elapsed="0.000867"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.388033" elapsed="0.006396"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.394751" elapsed="0.000395"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.395956" elapsed="0.000089"/>
</return>
<msg time="2024-12-01T17:03:23.397643" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.395522" elapsed="0.002175"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.397912" elapsed="0.000383"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.398944" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T17:03:23.400726" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.398636" elapsed="0.002234"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.401098" elapsed="0.000319"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XddXX}</arg>
<status status="PASS" start="2024-12-01T17:03:23.383837" elapsed="0.017679"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.405156" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567G8", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.405248" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.405418" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.402419" elapsed="0.003035"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.408383" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.406219" elapsed="0.002273"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.410438" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.408764" elapsed="0.001941"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.412724" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.411015" elapsed="0.001762"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.413401" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.413011" elapsed="0.000461"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.405759" elapsed="0.007849"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.413818" elapsed="0.000259"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.414687" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T17:03:23.416236" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.414409" elapsed="0.001865"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.416461" elapsed="0.000362"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.417297" elapsed="0.000038"/>
</return>
<msg time="2024-12-01T17:03:23.419101" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.417044" elapsed="0.002100"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.419331" elapsed="0.000349"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXd}</arg>
<status status="PASS" start="2024-12-01T17:03:23.401824" elapsed="0.017968"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.424483" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567gr", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.424639" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.424839" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.421238" elapsed="0.003643"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.427520" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.425757" elapsed="0.001880"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.429166" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.427844" elapsed="0.001389"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.430770" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.429406" elapsed="0.001403"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.431318" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.430994" elapsed="0.000387"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.425237" elapsed="0.006237"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.431643" elapsed="0.000228"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.432340" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T17:03:23.434675" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.432078" elapsed="0.002669"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.435033" elapsed="0.000469"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.436209" elapsed="0.000059"/>
</return>
<msg time="2024-12-01T17:03:23.438165" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.435855" elapsed="0.002356"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.438419" elapsed="0.000359"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddxx}</arg>
<status status="PASS" start="2024-12-01T17:03:23.420125" elapsed="0.018871"/>
</kw>
<doc>Verify server response when updating with an invalid COSPAR ID (for different COSPAR ID formats).</doc>
<tag>id:update_03</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.219620" elapsed="0.219554"/>
</test>
<test id="s1-s5-t4" name="TC04 - Update with Invalid Payload Type" line="57">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.442808" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "UNKNOWN"}' 
 </msg>
<msg time="2024-12-01T17:03:23.442947" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.443108" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.440329" elapsed="0.002815"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.445835" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.444357" elapsed="0.001555"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.447681" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.446096" elapsed="0.001739"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.449899" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.448275" elapsed="0.001676"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.450671" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.450217" elapsed="0.000584"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.443434" elapsed="0.007561"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.451218" elapsed="0.000323"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.452137" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T17:03:23.453851" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.451843" elapsed="0.002053"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.454105" elapsed="0.000385"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.455001" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:23.456549" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.454731" elapsed="0.002097"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.457055" elapsed="0.000303"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.459789" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "optical"}' 
 </msg>
<msg time="2024-12-01T17:03:23.459902" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.460422" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_TYPE_LOWERCASE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.457531" elapsed="0.003009"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.463945" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.462169" elapsed="0.001875"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.466033" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.464409" elapsed="0.001707"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.467943" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.466354" elapsed="0.001634"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.468657" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.468296" elapsed="0.000429"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.461186" elapsed="0.007633"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.468986" elapsed="0.000234"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.469976" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:23.471493" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.469433" elapsed="0.002098"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.471711" elapsed="0.000301"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.472470" elapsed="0.000039"/>
</return>
<msg time="2024-12-01T17:03:23.474265" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.472230" elapsed="0.002085"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.474623" elapsed="0.000525"/>
</kw>
<doc>Verify server response when updating with an invalid payload type.</doc>
<tag>id:update_04</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.439495" elapsed="0.035912"/>
</test>
<test id="s1-s5-t5" name="TC05 - Missing COSPAR ID" line="77">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.479501" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.479616" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '118'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.479786" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.476668" elapsed="0.003157"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.482217" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.480670" elapsed="0.001617"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.484052" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.482492" elapsed="0.001636"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.485643" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.484314" elapsed="0.001368"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.486171" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.485863" elapsed="0.000380"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.480136" elapsed="0.006214"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.486535" elapsed="0.000353"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.487799" elapsed="0.000903"/>
</return>
<msg time="2024-12-01T17:03:23.490387" level="INFO">${actual_error_message} = invalid request due to cospar ID is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.487343" elapsed="0.003103"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.490767" elapsed="0.000514"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.491952" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T17:03:23.493735" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.491625" elapsed="0.002160"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.493988" elapsed="0.000368"/>
</kw>
<doc>Test that the request fails if the COSPAR ID field is missing.</doc>
<tag>id:update_05</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.475830" elapsed="0.018704"/>
</test>
<test id="s1-s5-t6" name="TC06 - Missing Name" line="89">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.497974" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '46'} 
 body=b'{"cospar_id": "2024-003ZZ", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.498149" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '113'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.498313" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_NAME}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.495453" elapsed="0.002898"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.500992" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.499099" elapsed="0.002041"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.503162" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.501551" elapsed="0.001698"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.505201" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.503482" elapsed="0.001765"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.505827" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.505471" elapsed="0.000419"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.498655" elapsed="0.007339"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.506181" elapsed="0.000263"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.507034" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T17:03:23.508625" level="INFO">${actual_error_message} = invalid request due to name is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.506711" elapsed="0.001954"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_NAME_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.508859" elapsed="0.000310"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.509955" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T17:03:23.511504" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.509390" elapsed="0.002151"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.511724" elapsed="0.000294"/>
</kw>
<doc>Test that the request fails if the NAME field is missing.</doc>
<tag>id:update_06</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.494826" elapsed="0.017361"/>
</test>
<test id="s1-s5-t7" name="TC07 - Missing Type" line="101">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.516468" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '60'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission"}' 
 </msg>
<msg time="2024-12-01T17:03:23.516612" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.516782" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.513059" elapsed="0.003761"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.519601" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.517766" elapsed="0.001919"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.521322" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.519898" elapsed="0.001501"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.522998" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.521628" elapsed="0.001409"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.523523" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.523225" elapsed="0.000368"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.517178" elapsed="0.006590"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.523937" elapsed="0.000235"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.524671" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T17:03:23.526183" level="INFO">${actual_error_message} = invalid request due to payload type is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.524394" elapsed="0.001831"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.526434" elapsed="0.000381"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.527901" elapsed="0.000115"/>
</return>
<msg time="2024-12-01T17:03:23.530459" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.527305" elapsed="0.003219"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.530872" elapsed="0.000457"/>
</kw>
<doc>Test that the request fails if the TYPE field is missing.</doc>
<tag>id:update_07</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.512473" elapsed="0.019117"/>
</test>
<test id="s1-s5-t8" name="TC08 - Boundary Test - Empty Payload" line="113">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.535123" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '4'} 
 body=b'"{}"' 
 </msg>
<msg time="2024-12-01T17:03:23.535217" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '182'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T17:03:23.535391" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json={}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.532786" elapsed="0.002645"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.537868" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.536279" elapsed="0.001683"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.539753" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.538207" elapsed="0.001662"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.542174" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.540219" elapsed="0.002015"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.542976" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.542519" elapsed="0.000558"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.535732" elapsed="0.007515"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.543492" elapsed="0.000623"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.544897" elapsed="0.000070"/>
</return>
<msg time="2024-12-01T17:03:23.546982" level="INFO">${actual_error_message} = invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.544484" elapsed="0.002568"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${CANNOT_UNMARSHAL_STRING_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.547376" elapsed="0.000543"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.548703" elapsed="0.000079"/>
</return>
<msg time="2024-12-01T17:03:23.550407" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.548268" elapsed="0.002208"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.550765" elapsed="0.000420"/>
</kw>
<doc>Verify server response when sending an empty payload.</doc>
<tag>id:update_08</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.531980" elapsed="0.019425"/>
</test>
<test id="s1-s5-t9" name="TC09 - Check Unauthorized Access" line="125">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.556263" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-235BE", "name": "Updated Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T17:03:23.556377" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 15:03:23 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T17:03:23.556724" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>json=${REQ_VALID_OPTICAL_UPDATE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T17:03:23.552522" elapsed="0.004255"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.559262" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.557766" elapsed="0.001614"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.561279" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T17:03:23.559662" elapsed="0.001741"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T17:03:23.563290" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T17:03:23.561697" elapsed="0.001657"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T17:03:23.564114" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T17:03:23.563675" elapsed="0.000544"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T17:03:23.557125" elapsed="0.007261"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T17:03:23.564677" elapsed="0.000384"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T17:03:23.565806" elapsed="0.000070"/>
</return>
<msg time="2024-12-01T17:03:23.567655" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T17:03:23.565395" elapsed="0.002366"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.568189" elapsed="0.000584"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T17:03:23.569533" elapsed="0.000085"/>
</return>
<msg time="2024-12-01T17:03:23.571410" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T17:03:23.569125" elapsed="0.002340"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T17:03:23.571720" elapsed="0.000476"/>
</kw>
<doc>Verify server rejects requests from unauthorized users.</doc>
<tag>id:update_09</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T17:03:23.551779" elapsed="0.020669"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T17:03:23.575164" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T17:03:23.574158" elapsed="0.001205"/>
</kw>
<status status="PASS" start="2024-12-01T17:03:23.573651" elapsed="0.001877"/>
</kw>
<doc>Update satellite configuration test cases</doc>
<status status="FAIL" start="2024-12-01T17:03:23.072175" elapsed="0.503443"/>
</suite>
<status status="FAIL" start="2024-12-01T17:03:21.138493" elapsed="2.439401"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="6" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">id:create_01</stat>
<stat pass="1" fail="0" skip="0">id:create_02</stat>
<stat pass="1" fail="0" skip="0">id:create_03</stat>
<stat pass="1" fail="0" skip="0">id:create_04</stat>
<stat pass="1" fail="0" skip="0">id:create_05</stat>
<stat pass="1" fail="0" skip="0">id:create_06</stat>
<stat pass="0" fail="1" skip="0">id:create_07</stat>
<stat pass="1" fail="0" skip="0">id:create_08</stat>
<stat pass="1" fail="0" skip="0">id:create_09</stat>
<stat pass="1" fail="0" skip="0">id:create_10</stat>
<stat pass="0" fail="1" skip="0">id:delete_01</stat>
<stat pass="1" fail="0" skip="0">id:delete_02</stat>
<stat pass="1" fail="0" skip="0">id:delete_03</stat>
<stat pass="1" fail="0" skip="0">id:delete_04</stat>
<stat pass="1" fail="0" skip="0">id:delete_05</stat>
<stat pass="1" fail="0" skip="0">id:delete_06</stat>
<stat pass="1" fail="0" skip="0">id:list_01</stat>
<stat pass="1" fail="0" skip="0">id:list_02</stat>
<stat pass="0" fail="1" skip="0">id:list_03</stat>
<stat pass="0" fail="1" skip="0">id:list_04</stat>
<stat pass="1" fail="0" skip="0">id:list_05</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_01</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_02</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_03</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_04</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_05</stat>
<stat pass="0" fail="1" skip="0">id:update_01</stat>
<stat pass="1" fail="0" skip="0">id:update_02</stat>
<stat pass="1" fail="0" skip="0">id:update_03</stat>
<stat pass="1" fail="0" skip="0">id:update_04</stat>
<stat pass="1" fail="0" skip="0">id:update_05</stat>
<stat pass="1" fail="0" skip="0">id:update_06</stat>
<stat pass="1" fail="0" skip="0">id:update_07</stat>
<stat pass="1" fail="0" skip="0">id:update_08</stat>
<stat pass="1" fail="0" skip="0">id:update_09</stat>
<stat pass="8" fail="2" skip="0">service:create</stat>
<stat pass="5" fail="1" skip="0">service:delete</stat>
<stat pass="3" fail="2" skip="0">service:list</stat>
<stat pass="5" fail="0" skip="0">service:retrieve</stat>
<stat pass="8" fail="1" skip="0">service:update</stat>
</tag>
<suite>
<stat pass="29" fail="6" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="8" fail="2" skip="0" id="s1-s1" name="Create Satellite Configuration">Tests.Create Satellite Configuration</stat>
<stat pass="5" fail="1" skip="0" id="s1-s2" name="Delete Satellite Configuration">Tests.Delete Satellite Configuration</stat>
<stat pass="3" fail="2" skip="0" id="s1-s3" name="List Satellite Configurations">Tests.List Satellite Configurations</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Retrieve Satellite Configuration">Tests.Retrieve Satellite Configuration</stat>
<stat pass="8" fail="1" skip="0" id="s1-s5" name="Update Satellite Configuration">Tests.Update Satellite Configuration</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
