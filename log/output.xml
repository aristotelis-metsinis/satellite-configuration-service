<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.12.3 on linux)" generated="2024-12-01T15:25:57.203097" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests">
<suite id="s1-s1" name="Create Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/create_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.682103" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T15:25:57.681641" elapsed="0.001036"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:57.680483" elapsed="0.002331"/>
</kw>
<test id="s1-s1-t1" name="TC01 - Create Valid Configuration" line="14">
<kw name="Clear Mission Configuration Database" owner="common" type="SETUP">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.689379" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:57.689664" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '245'} 
 body={"meta":null,"data":[{"id":1,"name":"Satellite1","type":"OPTICAL","cospar_id":"2024-003ZZ"},{"id":2,"name":"Satellite2","type":"OPTICAL","cospar_id":"2023-001BC"},{"id":3,"name":"Satellite3","type":"SAR","cospar_id":"2050-002ZZ"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:57.689940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.684337" elapsed="0.005662"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.692817" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.691145" elapsed="0.001798"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.694845" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"Satellite1","type":"OPTICAL","cospar_id":"2024-003ZZ"},{"id":2,"name":"Satellite2","type":"OPTICAL","cospar_id":"2023-001BC"},{"id":3,"name":"Satellite3","type":"SAR","cospar_id":"2050-002ZZ"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.693215" elapsed="0.001731"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.696701" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'Satellite1', 'type': 'OPTICAL', 'cospar_id': '2024-003ZZ'}, {'id': 2, 'name': 'Satellite2', 'type': 'OPTICAL', 'cospar_id': '2023-001BC'}, {'id': 3, 'name': ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.695174" elapsed="0.001572"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.697363" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'Satellite1', 'type': 'OPTICAL', 'cospar_id': '2024-003ZZ'}, {'id': 2, 'name': 'Satellite2', 'type': 'OPTICAL', 'cospar_id': '2023-001BC'}, {'id': 3, 'name': ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.696979" elapsed="0.000446"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.690444" elapsed="0.007080"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:57.698010" elapsed="0.000059"/>
</return>
<msg time="2024-12-01T15:25:57.699703" level="INFO">${response_data} = [{'id': 1, 'name': 'Satellite1', 'type': 'OPTICAL', 'cospar_id': '2024-003ZZ'}, {'id': 2, 'name': 'Satellite2', 'type': 'OPTICAL', 'cospar_id': '2023-001BC'}, {'id': 3, 'name': 'Satellite3', 'type': '...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:57.697751" elapsed="0.001993"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.700086" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T15:25:57.700206" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:57.699916" elapsed="0.000327"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:57.702290" elapsed="0.000034"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:57.701989" elapsed="0.000431"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:57.702601" elapsed="0.000069"/>
</return>
<status status="PASS" start="2024-12-01T15:25:57.702483" elapsed="0.000264"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:57.701907" elapsed="0.000903"/>
</if>
<msg time="2024-12-01T15:25:57.704867" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:57.701178" elapsed="0.003756"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.710315" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:57.710416" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.705159" elapsed="0.005365"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T15:25:57.700695" elapsed="0.009929"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:57.711697" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:57.711502" elapsed="0.000349"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:57.711957" elapsed="0.000041"/>
</return>
<status status="PASS" start="2024-12-01T15:25:57.711899" elapsed="0.000153"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:57.711476" elapsed="0.000614"/>
</if>
<msg time="2024-12-01T15:25:57.713893" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:57.711099" elapsed="0.002839"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.717534" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:57.717656" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.714283" elapsed="0.003513"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T15:25:57.710808" elapsed="0.007110"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:57.719299" elapsed="0.000029"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:57.719018" elapsed="0.000379"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:57.719507" elapsed="0.000044"/>
</return>
<status status="PASS" start="2024-12-01T15:25:57.719452" elapsed="0.000201"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:57.718982" elapsed="0.000712"/>
</if>
<msg time="2024-12-01T15:25:57.721688" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:57.718482" elapsed="0.003252"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.724145" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:57.724242" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.721957" elapsed="0.002399"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T15:25:57.718154" elapsed="0.006287"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:57.700352" elapsed="0.024144"/>
</for>
<status status="PASS" start="2024-12-01T15:25:57.683943" elapsed="0.040681"/>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.728579" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.728828" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:57.729215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.725539" elapsed="0.003728"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.731968" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.730345" elapsed="0.001726"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.733962" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.732351" elapsed="0.001695"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.735854" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.734296" elapsed="0.001604"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.736514" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.736137" elapsed="0.000458"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.729695" elapsed="0.007003"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.736894" elapsed="0.000312"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:57.737741" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:57.739593" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:57.737425" elapsed="0.002208"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:57.739818" elapsed="0.000319"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.740730" elapsed="0.000089"/>
</return>
<msg time="2024-12-01T15:25:57.742697" level="INFO">${actual_data_message} = Mission config created successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.740384" elapsed="0.002380"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.743689" level="FAIL">Mission config created successfully != Mission configuration created successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:57.743055" elapsed="0.001401">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.744860" elapsed="0.000060"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.745187" elapsed="0.000038"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T15:25:57.724951" elapsed="0.020478">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.749111" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTIC"}' 
 </msg>
<msg time="2024-12-01T15:25:57.749208" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.749376" level="FAIL">Url: http://localhost:1234/configs Expected status: 400 != 200</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T15:25:57.746488" elapsed="0.004246">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T15:25:57.751075" elapsed="0.000038"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.751288" elapsed="0.000031"/>
</kw>
<kw name="Get Meta" owner="common">
<var>${actual_meta}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.751521" elapsed="0.000031"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.751751" elapsed="0.000028"/>
</kw>
<kw name="Get Data Message" owner="common">
<var>${actual_data_message}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.751965" elapsed="0.000030"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.752147" elapsed="0.000026"/>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.752352" elapsed="0.000029"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.752537" elapsed="0.000036"/>
</kw>
<arg>&amp;{REQ_VALID_OPTIC_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T15:25:57.745773" elapsed="0.006950">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.757149" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:57.757275" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:57.757485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.753591" elapsed="0.003950"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.760452" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.758574" elapsed="0.001963"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.762277" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.760795" elapsed="0.001562"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.763992" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.762579" elapsed="0.001453"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.764668" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.764318" elapsed="0.000410"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.757949" elapsed="0.006874"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.764994" elapsed="0.000236"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:57.765796" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:57.768006" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:57.765450" elapsed="0.002608"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:57.768330" elapsed="0.000487"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.769526" elapsed="0.000088"/>
</return>
<msg time="2024-12-01T15:25:57.771176" level="INFO">${actual_data_message} = Mission config created successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.769106" elapsed="0.002140"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.771913" level="FAIL">Mission config created successfully != Mission configuration created successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:57.771489" elapsed="0.000538">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.772925" elapsed="0.000052"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.773180" elapsed="0.000031"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T15:25:57.753003" elapsed="0.020409">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.776813" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SARS"}' 
 </msg>
<msg time="2024-12-01T15:25:57.776909" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.777053" level="FAIL">Url: http://localhost:1234/configs Expected status: 400 != 200</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T15:25:57.774426" elapsed="0.003351">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T15:25:57.778130" elapsed="0.000038"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.778358" elapsed="0.000028"/>
</kw>
<kw name="Get Meta" owner="common">
<var>${actual_meta}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.778592" elapsed="0.000031"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.778784" elapsed="0.000026"/>
</kw>
<kw name="Get Data Message" owner="common">
<var>${actual_data_message}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.778992" elapsed="0.000030"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.779183" elapsed="0.000026"/>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.779400" elapsed="0.000031"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.779607" elapsed="0.000027"/>
</kw>
<arg>&amp;{REQ_VALID_SARS_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T15:25:57.773781" elapsed="0.006001">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<kw name="Create Satellite Configuration" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.784543" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:57.784702" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:57.784912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.780643" elapsed="0.004322"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.787785" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.785957" elapsed="0.002002"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.789631" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.788188" elapsed="0.001516"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.791302" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.789907" elapsed="0.001436"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.791874" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.791536" elapsed="0.000396"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.785297" elapsed="0.006731"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.792198" elapsed="0.000226"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:57.792918" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T15:25:57.794615" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:57.792648" elapsed="0.002008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:57.794851" elapsed="0.000384"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.796579" elapsed="0.000137"/>
</return>
<msg time="2024-12-01T15:25:57.798895" level="INFO">${actual_data_message} = Mission config created successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.795813" elapsed="0.003132"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.799714" level="FAIL">Mission config created successfully != Mission configuration created successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_CREATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:57.799198" elapsed="0.000629">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:57.800128" elapsed="0.000048"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:57.800381" elapsed="0.000030"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="FAIL" start="2024-12-01T15:25:57.780053" elapsed="0.020551">Mission config created successfully != Mission configuration created successfully.</status>
</kw>
<doc>Test that a valid satellite configuration can be created (for each possible payload type).</doc>
<tag>id:create_01</tag>
<tag>service:create</tag>
<status status="FAIL" start="2024-12-01T15:25:57.682927" elapsed="0.117990">Several failures occurred:

1) Mission config created successfully != Mission configuration created successfully.

2) Url: http://localhost:1234/configs Expected status: 400 != 200

3) Mission config created successfully != Mission configuration created successfully.

4) Url: http://localhost:1234/configs Expected status: 400 != 200

5) Mission config created successfully != Mission configuration created successfully.</status>
</test>
<test id="s1-s1-t2" name="TC02 - Invalid COSPAR ID" line="25">
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.805652" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "INVALID", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.805754" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.805938" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.803351" elapsed="0.002625"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.808350" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.806720" elapsed="0.001720"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.810238" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.808773" elapsed="0.001537"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.812091" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.810522" elapsed="0.001627"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.812916" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.812430" elapsed="0.000595"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.806261" elapsed="0.006895"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.813389" elapsed="0.000318"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.814436" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T15:25:57.816317" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.814060" elapsed="0.002303"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.816609" elapsed="0.000403"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.817543" elapsed="0.000063"/>
</return>
<msg time="2024-12-01T15:25:57.819173" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.817272" elapsed="0.001939"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.819384" elapsed="0.000578"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_XXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.802800" elapsed="0.017256"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.823854" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.823967" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.824178" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.820864" elapsed="0.003376"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.827221" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.825341" elapsed="0.001962"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.829057" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.827543" elapsed="0.001594"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.830810" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.829348" elapsed="0.001513"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.831393" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.831068" elapsed="0.000383"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.824654" elapsed="0.006887"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.831745" elapsed="0.000224"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.832548" elapsed="0.000086"/>
</return>
<msg time="2024-12-01T15:25:57.834238" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.832243" elapsed="0.002035"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.834491" elapsed="0.000716"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.836803" elapsed="0.000063"/>
</return>
<msg time="2024-12-01T15:25:57.838499" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.835711" elapsed="0.002866"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.838822" elapsed="0.000407"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_-dddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.820311" elapsed="0.019081"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.843224" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.843320" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.843477" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.840534" elapsed="0.002980"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.845942" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.844369" elapsed="0.001641"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.847583" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.846269" elapsed="0.001387"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.849912" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.847869" elapsed="0.002111"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.850802" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.850357" elapsed="0.000581"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.843893" elapsed="0.007182"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.851349" elapsed="0.000385"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.852475" elapsed="0.000147"/>
</return>
<msg time="2024-12-01T15:25:57.854531" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.852085" elapsed="0.002543"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.854936" elapsed="0.000440"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.855966" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T15:25:57.857673" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.855656" elapsed="0.002058"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.857911" elapsed="0.000310"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YY-dddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.839714" elapsed="0.018602"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.861577" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "2024-GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.861684" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.861874" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.859240" elapsed="0.002713"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.865456" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.863701" elapsed="0.001887"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.867626" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.865828" elapsed="0.001946"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.869768" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.868089" elapsed="0.001738"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.870406" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.870050" elapsed="0.000416"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.862784" elapsed="0.007802"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.870760" elapsed="0.000239"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.871476" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T15:25:57.873135" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.871208" elapsed="0.001966"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.873353" elapsed="0.000309"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.874526" elapsed="0.000128"/>
</return>
<msg time="2024-12-01T15:25:57.876471" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.873870" elapsed="0.002674"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.876975" elapsed="0.000522"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.858586" elapsed="0.019121"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.881743" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-7GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.881841" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.882022" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.878925" elapsed="0.003135"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.884426" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.882904" elapsed="0.001592"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.886088" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.884744" elapsed="0.001429"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.887693" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.886349" elapsed="0.001384"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.888226" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.887915" elapsed="0.000381"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.882379" elapsed="0.006021"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.888673" elapsed="0.000668"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.890313" elapsed="0.000077"/>
</return>
<msg time="2024-12-01T15:25:57.892104" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.889751" elapsed="0.002403"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.892380" elapsed="0.000526"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.893552" elapsed="0.000079"/>
</return>
<msg time="2024-12-01T15:25:57.895368" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.893206" elapsed="0.002207"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.895648" elapsed="0.000325"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.878072" elapsed="0.018000"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.899175" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-567", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.899265" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.899413" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.896920" elapsed="0.002529"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.901782" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.900194" elapsed="0.002007"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.904091" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.902502" elapsed="0.001702"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.906440" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.904611" elapsed="0.001889"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.907244" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.906816" elapsed="0.000502"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.899748" elapsed="0.007682"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.907658" elapsed="0.000276"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.908518" elapsed="0.000060"/>
</return>
<msg time="2024-12-01T15:25:57.910137" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.908180" elapsed="0.002000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.910361" elapsed="0.000625"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.911861" elapsed="0.000040"/>
</return>
<msg time="2024-12-01T15:25:57.913422" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.911196" elapsed="0.002272"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.913669" elapsed="0.000292"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-ddd}</arg>
<status status="PASS" start="2024-12-01T15:25:57.896345" elapsed="0.017734"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.918223" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '80'} 
 body=b'{"cospar_id": "2024-567GRE", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.918342" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.918509" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.914889" elapsed="0.003659"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.921318" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.919516" elapsed="0.001888"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.923018" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.921655" elapsed="0.001432"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.924915" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.923273" elapsed="0.001690"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.925548" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.925187" elapsed="0.000433"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.918901" elapsed="0.006813"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.925900" elapsed="0.000229"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.926606" elapsed="0.000059"/>
</return>
<msg time="2024-12-01T15:25:57.928139" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.926346" elapsed="0.001846"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.928373" elapsed="0.000631"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.929997" elapsed="0.000117"/>
</return>
<msg time="2024-12-01T15:25:57.931935" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.929399" elapsed="0.002594"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.932238" elapsed="0.000488"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.914325" elapsed="0.018543"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.936519" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"cospar_id": "2024567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.936626" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.936792" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.933989" elapsed="0.002839"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.939148" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.937584" elapsed="0.001639"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.940738" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.939397" elapsed="0.001439"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.943515" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.941154" elapsed="0.002481"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.944693" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.944205" elapsed="0.000596"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.937112" elapsed="0.007835"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.945189" elapsed="0.000315"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.946139" elapsed="0.000084"/>
</return>
<msg time="2024-12-01T15:25:57.947755" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.945766" elapsed="0.002044"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.948047" elapsed="0.000377"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.949536" elapsed="0.000068"/>
</return>
<msg time="2024-12-01T15:25:57.951415" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.948724" elapsed="0.002743"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.951698" elapsed="0.000366"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYYdddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.933184" elapsed="0.019012"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.955540" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2O24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.955733" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.955978" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.953056" elapsed="0.003018"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.959037" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.957348" elapsed="0.001782"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.961047" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.959427" elapsed="0.001703"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.963090" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.961389" elapsed="0.001748"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.963766" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.963377" elapsed="0.000595"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.956506" elapsed="0.007571"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.964269" elapsed="0.000264"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.965038" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:57.966661" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.964772" elapsed="0.001970"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.966961" elapsed="0.000322"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.967771" elapsed="0.000061"/>
</return>
<msg time="2024-12-01T15:25:57.969966" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.967497" elapsed="0.002534"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.970326" elapsed="0.000461"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YXYY-dddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.952461" elapsed="0.018479"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.974676" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-_67GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.974801" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.975007" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.971909" elapsed="0.003139"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.977766" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.975991" elapsed="0.001850"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.979403" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.978057" elapsed="0.001411"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:57.981038" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.979701" elapsed="0.001375"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.981617" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:57.981269" elapsed="0.000409"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.975417" elapsed="0.006359"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:57.981973" elapsed="0.000623"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:57.983347" elapsed="0.000104"/>
</return>
<msg time="2024-12-01T15:25:57.985170" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:57.982904" elapsed="0.002312"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.985481" elapsed="0.000433"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:57.987029" elapsed="0.000052"/>
</return>
<msg time="2024-12-01T15:25:57.989139" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:57.986221" elapsed="0.002968"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:57.989429" elapsed="0.000382"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:57.971253" elapsed="0.018677"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:57.993202" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567G8", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:57.993292" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:57 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:57.993520" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:57.990943" elapsed="0.002628"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.996010" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.994307" elapsed="0.001842"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:57.998323" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:57.996618" elapsed="0.001797"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.000339" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:57.998641" elapsed="0.001746"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.001042" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.000655" elapsed="0.000480"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:57.993855" elapsed="0.007440"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.001529" elapsed="0.000357"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.002539" elapsed="0.000098"/>
</return>
<msg time="2024-12-01T15:25:58.004348" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.002207" elapsed="0.002185"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.004608" elapsed="0.000344"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.005436" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:58.007098" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.005180" elapsed="0.001955"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.007305" elapsed="0.000304"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXd}</arg>
<status status="PASS" start="2024-12-01T15:25:57.990201" elapsed="0.017498"/>
</kw>
<kw name="Create Satellite Configuration with Invalid COSPAR ID" owner="create_satellite_configuration_steps">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.011780" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567gr", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.011893" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.012081" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.008526" elapsed="0.003610"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.015137" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.013161" elapsed="0.002060"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.017123" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.015465" elapsed="0.001738"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.018872" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.017433" elapsed="0.001482"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.019446" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.019109" elapsed="0.000395"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.012460" elapsed="0.007154"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.019782" elapsed="0.000243"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.020581" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T15:25:58.022292" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.020233" elapsed="0.002162"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.022844" elapsed="0.000695"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.024829" elapsed="0.000067"/>
</return>
<msg time="2024-12-01T15:25:58.027206" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.023962" elapsed="0.003327"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.027605" elapsed="0.000449"/>
</kw>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddxx}</arg>
<status status="PASS" start="2024-12-01T15:25:58.007949" elapsed="0.020257"/>
</kw>
<doc>Test that an invalid COSPAR ID value returns a specific error (for different COSPAR ID formats).</doc>
<tag>id:create_02</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:57.801354" elapsed="0.227092"/>
</test>
<test id="s1-s1-t3" name="TC03 - Invalid Type" line="42">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.036405" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "UNKNOWN"}' 
 </msg>
<msg time="2024-12-01T15:25:58.036698" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.037117" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.029779" elapsed="0.007426"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.041178" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.038899" elapsed="0.002402"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.043862" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.041843" elapsed="0.002631"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.046678" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.044817" elapsed="0.001931"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.047580" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.047065" elapsed="0.000630"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.038097" elapsed="0.009766"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.048096" elapsed="0.000415"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.049718" elapsed="0.000153"/>
</return>
<msg time="2024-12-01T15:25:58.051781" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.048953" elapsed="0.002922"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.052330" elapsed="0.000868"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.054332" elapsed="0.000105"/>
</return>
<msg time="2024-12-01T15:25:58.056832" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.053766" elapsed="0.003152"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.057232" elapsed="0.000744"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.063946" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "optical"}' 
 </msg>
<msg time="2024-12-01T15:25:58.064108" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.064478" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_TYPE_LOWERCASE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.058356" elapsed="0.006187"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.068104" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.065977" elapsed="0.002274"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.070972" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.068542" elapsed="0.002723"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.073734" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.071764" elapsed="0.002050"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.074643" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.074111" elapsed="0.000801"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.065178" elapsed="0.010168"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.075927" elapsed="0.000428"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.077176" elapsed="0.000067"/>
</return>
<msg time="2024-12-01T15:25:58.079236" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.076725" elapsed="0.002612"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.079637" elapsed="0.000492"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.080917" elapsed="0.000067"/>
</return>
<msg time="2024-12-01T15:25:58.082927" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.080483" elapsed="0.002505"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.083266" elapsed="0.000481"/>
</kw>
<doc>Test that an invalid TYPE value returns a specific error.</doc>
<tag>id:create_03</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.028925" elapsed="0.055086"/>
</test>
<test id="s1-s1-t4" name="TC04 - Missing COSPAR ID" line="62">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.090405" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.090537" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '118'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.090826" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.085973" elapsed="0.004911"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.093887" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.092111" elapsed="0.001887"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.095950" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.094291" elapsed="0.001826"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.098528" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.096497" elapsed="0.002153"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.099389" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.098961" elapsed="0.000533"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.091396" elapsed="0.008270"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.099900" elapsed="0.000351"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.100999" elapsed="0.000075"/>
</return>
<msg time="2024-12-01T15:25:58.103016" level="INFO">${actual_error_message} = invalid request due to cospar ID is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.100577" elapsed="0.002512"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.103356" elapsed="0.002092"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.106304" elapsed="0.000069"/>
</return>
<msg time="2024-12-01T15:25:58.108282" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.105868" elapsed="0.002490"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.108652" elapsed="0.000529"/>
</kw>
<doc>Test that the request fails if the COSPAR ID field is missing.</doc>
<tag>id:create_04</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.084760" elapsed="0.024994"/>
</test>
<test id="s1-s1-t5" name="TC05 - Missing Name" line="74">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.114431" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '46'} 
 body=b'{"cospar_id": "2024-003ZZ", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.114575" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '113'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.114774" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_NAME}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.111044" elapsed="0.003806"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.118594" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.116483" elapsed="0.002236"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.120550" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.119023" elapsed="0.001639"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.122480" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.120917" elapsed="0.001616"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.123235" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.122852" elapsed="0.000463"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.115461" elapsed="0.007984"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.123703" elapsed="0.000349"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.124628" elapsed="0.000057"/>
</return>
<msg time="2024-12-01T15:25:58.126087" level="INFO">${actual_error_message} = invalid request due to name is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.124316" elapsed="0.001823"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_NAME_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.126402" elapsed="0.000442"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.127467" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T15:25:58.129541" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.127150" elapsed="0.002475"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.129901" elapsed="0.000498"/>
</kw>
<doc>Test that the request fails if the NAME field is missing.</doc>
<tag>id:create_05</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.110171" elapsed="0.020530"/>
</test>
<test id="s1-s1-t6" name="TC06 - Missing Type" line="86">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.135729" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '60'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission"}' 
 </msg>
<msg time="2024-12-01T15:25:58.135941" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.136238" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.132263" elapsed="0.004030"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.139817" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.138279" elapsed="0.001651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.144087" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.140630" elapsed="0.003559"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.148512" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.144753" elapsed="0.003841"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.149248" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.148895" elapsed="0.000427"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.136828" elapsed="0.012608"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.149683" elapsed="0.000338"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.152417" elapsed="0.000115"/>
</return>
<msg time="2024-12-01T15:25:58.155983" level="INFO">${actual_error_message} = invalid request due to payload type is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.150508" elapsed="0.005540"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.156325" elapsed="0.001010"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.160320" elapsed="0.000287"/>
</return>
<msg time="2024-12-01T15:25:58.162634" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.159449" elapsed="0.003240"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.162986" elapsed="0.000479"/>
</kw>
<doc>Test that the request fails if the TYPE field is missing.</doc>
<tag>id:create_06</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.131350" elapsed="0.032459"/>
</test>
<test id="s1-s1-t7" name="TC07 - Boundary Test for Exceeding Maximum Configurations" line="98">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.168978" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.169350" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.170000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.165642" elapsed="0.004493"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.172987" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.171386" elapsed="0.001696"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.174665" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.173317" elapsed="0.001450"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.176527" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.175008" elapsed="0.001595"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.177214" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.176851" elapsed="0.000437"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.170685" elapsed="0.006726"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.178018" elapsed="0.000063"/>
</return>
<msg time="2024-12-01T15:25:58.179739" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.177687" elapsed="0.002112"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.180411" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T15:25:58.180958" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.180065" elapsed="0.001062"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.183935" level="INFO">&amp;{payload} = { cospar_id=2024-004ZZ | name=New Satellite 4 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.183119" elapsed="0.000888"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.187839" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2024-004ZZ", "name": "New Satellite 4", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.187961" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.188135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.184270" elapsed="0.003904"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.190380" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.189004" elapsed="0.001457"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.191983" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.190700" elapsed="0.001373"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.193705" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.192305" elapsed="0.001458"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.194428" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.194051" elapsed="0.000461"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.188488" elapsed="0.006170"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.196215" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T15:25:58.195086" elapsed="0.001182"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.196908" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T15:25:58.196528" elapsed="0.000427"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.197205" elapsed="0.000446"/>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.202215" elapsed="0.000071"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.202569" elapsed="0.000051"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.202969" elapsed="0.000051"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.203247" elapsed="0.000063"/>
</kw>
<status status="NOT RUN" start="2024-12-01T15:25:58.197855" elapsed="0.005542"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.197810" elapsed="0.005664"/>
</if>
<var name="${i}">4</var>
<status status="PASS" start="2024-12-01T15:25:58.182431" elapsed="0.021104"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.204986" level="INFO">&amp;{payload} = { cospar_id=2025-005ZZ | name=New Satellite 5 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.204193" elapsed="0.000859"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.208427" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2025-005ZZ", "name": "New Satellite 5", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.208769" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.209279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.205334" elapsed="0.004071"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.212245" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.210484" elapsed="0.002295"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.214950" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.213085" elapsed="0.001996"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.217588" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.215392" elapsed="0.002292"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.218674" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.218191" elapsed="0.000599"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.209824" elapsed="0.009123"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.219837" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T15:25:58.219195" elapsed="0.000696"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.220620" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T15:25:58.220183" elapsed="0.000488"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.220978" elapsed="0.001515"/>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.224946" elapsed="0.000091"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.225443" elapsed="0.000058"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.225869" elapsed="0.000052"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.226190" elapsed="0.000048"/>
</kw>
<status status="NOT RUN" start="2024-12-01T15:25:58.222825" elapsed="0.003499"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.222780" elapsed="0.003608"/>
</if>
<var name="${i}">5</var>
<status status="PASS" start="2024-12-01T15:25:58.203939" elapsed="0.022506"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.228007" level="INFO">&amp;{payload} = { cospar_id=2026-006ZZ | name=New Satellite 6 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.227164" elapsed="0.000913"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.233217" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2026-006ZZ", "name": "New Satellite 6", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.233345" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.233588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.228397" elapsed="0.005245"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.237649" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.234784" elapsed="0.003020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.240039" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config created successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.238075" elapsed="0.002108"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.241990" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.240443" elapsed="0.001617"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.242984" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config created successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.242535" elapsed="0.000560"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.234047" elapsed="0.009363"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.246343" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T15:25:58.245678" elapsed="0.000745"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.247409" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T15:25:58.246823" elapsed="0.000815"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.248070" elapsed="0.000564"/>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.249425" elapsed="0.000101"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.249878" elapsed="0.000089"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.250635" elapsed="0.000076"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.250976" elapsed="0.000177"/>
</kw>
<status status="NOT RUN" start="2024-12-01T15:25:58.248882" elapsed="0.002363"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.248818" elapsed="0.002481"/>
</if>
<var name="${i}">6</var>
<status status="PASS" start="2024-12-01T15:25:58.226922" elapsed="0.024428"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.252797" level="INFO">&amp;{payload} = { cospar_id=2027-007ZZ | name=New Satellite 7 | type=OPTICAL }</msg>
<var>&amp;{payload}</var>
<arg>cospar_id=202${i}-00${i}ZZ</arg>
<arg>name=New Satellite ${i}</arg>
<arg>type=OPTICAL</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.251972" elapsed="0.000909"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.257451" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '73'} 
 body=b'{"cospar_id": "2027-007ZZ", "name": "New Satellite 7", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.257602" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '128'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to mission config database is full","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.257838" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{payload}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.253199" elapsed="0.004691"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.262407" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.260351" elapsed="0.002359"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.265868" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to mission config database is full","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.263506" elapsed="0.002525"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.299112" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to mission config database is full', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.266316" elapsed="0.032856"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.299874" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to mission config database is full', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.299453" elapsed="0.000499"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.258932" elapsed="0.041140"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.300889" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>200 if ${i} &lt;= ${MAX_CONFIGS} else 400</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-01T15:25:58.300295" elapsed="0.000645"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.301895" level="INFO">${expected_status} = 200</msg>
<var>${expected_status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-12-01T15:25:58.301192" elapsed="0.000764"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.303059" level="FAIL">Url: http://localhost:1234/configs Expected status: 400 != 200</msg>
<arg>${expected_status}</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="FAIL" start="2024-12-01T15:25:58.302361" elapsed="0.001918">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</kw>
<if>
<branch type="IF" condition="${i} &gt; ${MAX_CONFIGS}">
<kw name="Get Error Message" owner="common">
<var>${actual_error_message}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.304958" elapsed="0.000072"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${FULL_MISSION_CONFIG_DATABASE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.305330" elapsed="0.000047"/>
</kw>
<kw name="Get Error Source" owner="common">
<var>${actual_error_source}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.305770" elapsed="0.000073"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.306220" elapsed="0.000045"/>
</kw>
<status status="NOT RUN" start="2024-12-01T15:25:58.304546" elapsed="0.001800"/>
</branch>
<status status="NOT RUN" start="2024-12-01T15:25:58.304496" elapsed="0.001908"/>
</if>
<var name="${i}">7</var>
<status status="FAIL" start="2024-12-01T15:25:58.251739" elapsed="0.054766">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</iter>
<var>${i}</var>
<value>${number_of_configurations} + 1</value>
<value>${MAX_CONFIGS} + 2</value>
<status status="FAIL" start="2024-12-01T15:25:58.181362" elapsed="0.125278">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</for>
<doc>Test for the server’s response when exceeding the maximum number of configurations.</doc>
<tag>id:create_07</tag>
<tag>service:create</tag>
<status status="FAIL" start="2024-12-01T15:25:58.164337" elapsed="0.142646">Url: http://localhost:1234/configs Expected status: 400 != 200</status>
</test>
<test id="s1-s1-t8" name="TC08 - Check Unauthorized Access" line="123">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.311470" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.311610" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T15:25:58.311887" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.308570" elapsed="0.003363"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.314763" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.312822" elapsed="0.002066"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.316823" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.315160" elapsed="0.001801"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.319110" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.317281" elapsed="0.001895"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.319960" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.319531" elapsed="0.000518"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.312307" elapsed="0.007890"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.320412" elapsed="0.000312"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.321294" elapsed="0.000064"/>
</return>
<msg time="2024-12-01T15:25:58.323077" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.320993" elapsed="0.002130"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.323345" elapsed="0.000380"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.324246" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T15:25:58.325854" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.323951" elapsed="0.001940"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.326085" elapsed="0.000339"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:create_08</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.307575" elapsed="0.019053"/>
</test>
<test id="s1-s1-t9" name="TC09 - Unknown Payload Field" line="135">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.331031" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "SAR", "data_downlink_frequency_band": "S-Band"}' 
 </msg>
<msg time="2024-12-01T15:25:58.331184" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '149'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to json: unknown field \"data_downlink_frequency_band\"","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.331392" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_INVALID_UNKNOWN_PAYLOAD_FIELD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.327764" elapsed="0.003684"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.334665" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.332885" elapsed="0.001867"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.336408" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to json: unknown field \"data_downlink_frequency_band\"","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.334978" elapsed="0.001506"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.338103" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: unknown field "data_downlink_frequency_band"', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.336712" elapsed="0.001433"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.338667" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: unknown field "data_downlink_frequency_band"', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.338340" elapsed="0.000387"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.331836" elapsed="0.007060"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.339080" elapsed="0.000239"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.339799" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:58.341522" level="INFO">${actual_error_message} = invalid request due to json: unknown field "data_downlink_frequency_band"</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.339534" elapsed="0.002063"/>
</kw>
<kw name="Build Unknown Field Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.343263" level="INFO">${message} = invalid request due to json: unknown field "data_downlink_frequency_band"</msg>
<var>${message}</var>
<arg>${UNKNOWN_FIELD_ERROR_MSG}</arg>
<arg>UNKNOWN_FIELD_PLACEHOLDER</arg>
<arg>${UNKNOWN_FIELD}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.342763" elapsed="0.000609"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.343496" elapsed="0.000083"/>
</return>
<msg time="2024-12-01T15:25:58.343868" level="INFO">${expected_error_message} = invalid request due to json: unknown field "data_downlink_frequency_band"</msg>
<var>${expected_error_message}</var>
<arg>${UNKNOWN_PAYLOAD_FIELD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.341904" elapsed="0.002015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.344188" elapsed="0.000481"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.345365" elapsed="0.000068"/>
</return>
<msg time="2024-12-01T15:25:58.347241" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.344974" elapsed="0.002323"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.347525" elapsed="0.000370"/>
</kw>
<doc>Verify the endpoint rejects requests with unknown payload field.</doc>
<tag>id:create_09</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.326941" elapsed="0.021166"/>
</test>
<test id="s1-s1-t10" name="TC10 - Malformed JSON" line="148">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.349428" level="INFO">${malformed_payload} = {"cospar_id": "2024-003ZZ", "name": "New Satellite"</msg>
<var>${malformed_payload}</var>
<arg>{"cospar_id": "2024-003ZZ", "name": "New Satellite"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T15:25:58.349219" elapsed="0.000248"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.351855" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '51'} 
 body={"cospar_id": "2024-003ZZ", "name": "New Satellite" 
 </msg>
<msg time="2024-12-01T15:25:58.351954" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '111'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to unexpected EOF","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.352106" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>data=${malformed_payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.349681" elapsed="0.002463"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.354246" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.352909" elapsed="0.001428"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.356363" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to unexpected EOF","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.354659" elapsed="0.001836"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.358580" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to unexpected EOF', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.356827" elapsed="0.001812"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.359269" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to unexpected EOF', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.358912" elapsed="0.000455"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.352450" elapsed="0.007034"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.359739" elapsed="0.000346"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.360722" elapsed="0.000056"/>
</return>
<msg time="2024-12-01T15:25:58.362449" level="INFO">${actual_error_message} = invalid request due to unexpected EOF</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.360364" elapsed="0.002134"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${UNEXPECTED_EOF_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.362751" elapsed="0.000337"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.363589" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:58.365208" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.363316" elapsed="0.001934"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.365427" elapsed="0.000398"/>
</kw>
<doc>Verify the endpoint rejects requests when the JSON request body is malformed.</doc>
<tag>id:create_10</tag>
<tag>service:create</tag>
<status status="PASS" start="2024-12-01T15:25:58.348449" elapsed="0.017551"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.367156" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T15:25:58.367052" elapsed="0.000219"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:58.366771" elapsed="0.000587"/>
</kw>
<doc>Create satellite configuration test cases</doc>
<status status="FAIL" start="2024-12-01T15:25:57.255901" elapsed="1.111504"/>
</suite>
<suite id="s1-s2" name="Delete Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/delete_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.382790" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T15:25:58.382215" elapsed="0.000917"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:58.381742" elapsed="0.001587"/>
</kw>
<test id="s1-s2-t1" name="TC01 - Delete Valid Configuration" line="14">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.388316" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.388416" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '506'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"},{"id":4,"name":"New Satellite 4","type":"OPTICAL","cospar_id":"2024-004ZZ"},{"id":5,"name":"New Satellite 5","type":"OPTICAL","cospar_id":"2025-005ZZ"},{"id":6,"name":"New Satellite 6","type":"OPTICAL","cospar_id":"2026-006ZZ"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.388633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.385609" elapsed="0.003063"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.391390" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.389517" elapsed="0.001945"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.392970" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"},{"id":4,"name":"New Satellite 4","type":"OPTICAL","cospar_id":"2024-004ZZ"},{"id":5,"name":"New Satellite 5","type":"OPTICAL","cospar_id":"2025-005ZZ"},{"id":6,"name":"New Satellite 6","type":"OPTICAL","cospar_id":"2026-006ZZ"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.391664" elapsed="0.001383"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.394520" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.393231" elapsed="0.001353"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.395396" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.394933" elapsed="0.000586"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.388999" elapsed="0.006753"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.396534" elapsed="0.000102"/>
</return>
<msg time="2024-12-01T15:25:58.398412" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.396131" elapsed="0.002336"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.398912" level="INFO">Length is 6.</msg>
<msg time="2024-12-01T15:25:58.399047" level="INFO">${number_of_configurations} = 6</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.398710" elapsed="0.000381"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.400655" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.400457" elapsed="0.000280"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.400836" elapsed="0.000041"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.400779" elapsed="0.000154"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.400429" elapsed="0.000542"/>
</if>
<msg time="2024-12-01T15:25:58.402717" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.400011" elapsed="0.002760"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.405113" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.405296" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.402989" elapsed="0.002420"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T15:25:58.399714" elapsed="0.005780"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.406510" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.406347" elapsed="0.000246"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.406682" elapsed="0.000038"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.406633" elapsed="0.000138"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.406321" elapsed="0.000489"/>
</if>
<msg time="2024-12-01T15:25:58.408417" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.405948" elapsed="0.002525"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.412061" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.412165" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.408811" elapsed="0.003497"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T15:25:58.405688" elapsed="0.006711"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.413795" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.413618" elapsed="0.000259"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.413985" elapsed="0.000043"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.413917" elapsed="0.000165"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.413587" elapsed="0.000534"/>
</if>
<msg time="2024-12-01T15:25:58.416006" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.413102" elapsed="0.002949"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.418447" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.418539" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.416277" elapsed="0.002398"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T15:25:58.412595" elapsed="0.006170"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.419773" elapsed="0.000020"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.419609" elapsed="0.000235"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.419932" elapsed="0.000037"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.419884" elapsed="0.000137"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.419583" elapsed="0.000475"/>
</if>
<msg time="2024-12-01T15:25:58.422519" level="INFO">${id} = 4</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.419201" elapsed="0.003463"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.427043" level="INFO">DELETE Request : url=http://localhost:1234/configs/4 
 path_url=/configs/4 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.427163" level="INFO">DELETE Response : url=http://localhost:1234/configs/4 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.423122" elapsed="0.004189"/>
</kw>
<var name="${i}">3</var>
<status status="PASS" start="2024-12-01T15:25:58.418930" elapsed="0.008471"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.428582" elapsed="0.000022"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.428388" elapsed="0.000346"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.428840" elapsed="0.000047"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.428780" elapsed="0.000161"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.428359" elapsed="0.000619"/>
</if>
<msg time="2024-12-01T15:25:58.430718" level="INFO">${id} = 5</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.427900" elapsed="0.002863"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.433115" level="INFO">DELETE Request : url=http://localhost:1234/configs/5 
 path_url=/configs/5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.433207" level="INFO">DELETE Response : url=http://localhost:1234/configs/5 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.430965" elapsed="0.002357"/>
</kw>
<var name="${i}">4</var>
<status status="PASS" start="2024-12-01T15:25:58.427612" elapsed="0.005798"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.434595" elapsed="0.000056"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.434327" elapsed="0.000437"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.434867" elapsed="0.000057"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.434810" elapsed="0.000174"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.434298" elapsed="0.000749"/>
</if>
<msg time="2024-12-01T15:25:58.437041" level="INFO">${id} = 6</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.433883" elapsed="0.003225"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.440049" level="INFO">DELETE Request : url=http://localhost:1234/configs/6 
 path_url=/configs/6 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.440152" level="INFO">DELETE Response : url=http://localhost:1234/configs/6 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.437423" elapsed="0.002866"/>
</kw>
<var name="${i}">5</var>
<status status="PASS" start="2024-12-01T15:25:58.433595" elapsed="0.006785"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:58.399209" elapsed="0.041228"/>
</for>
<status status="PASS" start="2024-12-01T15:25:58.385074" elapsed="0.055465"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.443877" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.443976" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.444158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.441524" elapsed="0.002672"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.440834" elapsed="0.003501"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.447339" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:58.447441" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.447658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.445159" elapsed="0.002547"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.444596" elapsed="0.003328"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.452392" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:58.452652" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.452881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.449220" elapsed="0.003714"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.448332" elapsed="0.004776"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T15:25:58.384497" elapsed="0.068703"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.456066" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.456165" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.456336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.453487" elapsed="0.002887"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.458846" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.457266" elapsed="0.001653"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.460458" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.459118" elapsed="0.001416"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.462313" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.460745" elapsed="0.001639"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.463071" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.462677" elapsed="0.000497"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.456726" elapsed="0.006601"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.463605" elapsed="0.000390"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:58.464784" elapsed="0.000096"/>
</return>
<msg time="2024-12-01T15:25:58.466681" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:58.464364" elapsed="0.002364"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.466986" elapsed="0.000379"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.468635" elapsed="0.000061"/>
</return>
<msg time="2024-12-01T15:25:58.470333" level="INFO">${actual_data_message} = Mission config deleted successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.467728" elapsed="0.002650"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.470991" level="FAIL">Mission config deleted successfully != Mission configuration deleted successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_DELETED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:58.470615" elapsed="0.000469">Mission config deleted successfully != Mission configuration deleted successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.471319" elapsed="0.000034"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.471514" elapsed="0.000027"/>
</kw>
<doc>Verify that a valid satellite configuration can be deleted successfully.</doc>
<tag>id:delete_01</tag>
<tag>service:delete</tag>
<status status="FAIL" start="2024-12-01T15:25:58.383470" elapsed="0.088291">Mission config deleted successfully != Mission configuration deleted successfully.</status>
</test>
<test id="s1-s2-t2" name="TC02 - Delete Non-existent Configuration" line="32">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.475517" level="INFO">DELETE Request : url=http://localhost:1234/configs/9999 
 path_url=/configs/9999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.475680" level="INFO">DELETE Response : url=http://localhost:1234/configs/9999 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '124'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.476092" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.472904" elapsed="0.003242"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.479064" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.477195" elapsed="0.001977"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.480974" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.479443" elapsed="0.001624"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.482727" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.481281" elapsed="0.001491"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.483314" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.483000" elapsed="0.000382"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.476546" elapsed="0.006941"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.483667" elapsed="0.000240"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.484381" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:58.485933" level="INFO">${actual_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.484123" elapsed="0.001849"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.486918" level="INFO">${message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.486627" elapsed="0.000327"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.487042" elapsed="0.000039"/>
</return>
<msg time="2024-12-01T15:25:58.487265" level="INFO">${expected_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID}</arg>
<status status="PASS" start="2024-12-01T15:25:58.486195" elapsed="0.001106"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.487471" elapsed="0.000385"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.488620" elapsed="0.000065"/>
</return>
<msg time="2024-12-01T15:25:58.490393" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.488230" elapsed="0.002233"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.490754" elapsed="0.000424"/>
</kw>
<doc>Verify server response when trying to delete a non-existent configuration.</doc>
<tag>id:delete_02</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T15:25:58.472105" elapsed="0.019302"/>
</test>
<test id="s1-s2-t3" name="TC03 - Delete with Invalid ID Format" line="45">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.495155" level="INFO">DELETE Request : url=http://localhost:1234/configs/invalid_id 
 path_url=/configs/invalid_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.495278" level="INFO">DELETE Response : url=http://localhost:1234/configs/invalid_id 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '153'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.495439" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID_FORMAT}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.492607" elapsed="0.002869"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.497746" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.496233" elapsed="0.001578"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.499227" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.497981" elapsed="0.001312"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.500734" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.499471" elapsed="0.001393"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.501590" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.501104" elapsed="0.000574"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.495785" elapsed="0.006044"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.502044" elapsed="0.000581"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.504133" elapsed="0.000080"/>
</return>
<msg time="2024-12-01T15:25:58.505979" level="INFO">${actual_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.503051" elapsed="0.002986"/>
</kw>
<kw name="Build Parse Int Invalid Syntax Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.507267" level="INFO">${message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${message}</var>
<arg>${PARSE_INT_INVALID_SYNTAX_ERROR_MSG}</arg>
<arg>INVALID_ID_FORMAT_PLACEHOLDER</arg>
<arg>${INVALID_ID_FORMAT}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.506936" elapsed="0.000384"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.507424" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:58.507702" level="INFO">${expected_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID_FORMAT}</arg>
<status status="PASS" start="2024-12-01T15:25:58.506379" elapsed="0.001361"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.507944" elapsed="0.000370"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.508862" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:58.510505" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.508580" elapsed="0.001963"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.510727" elapsed="0.000300"/>
</kw>
<doc>Verify server response when deleting with an invalid ID format.</doc>
<tag>id:delete_03</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T15:25:58.491743" elapsed="0.019463"/>
</test>
<test id="s1-s2-t4" name="TC04 - Check Unauthorized Access" line="58">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.514398" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.514599" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T15:25:58.514901" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.512197" elapsed="0.002781"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.517769" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.516119" elapsed="0.001768"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.519543" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.518144" elapsed="0.001528"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.521435" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.519893" elapsed="0.001597"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.522156" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.521759" elapsed="0.000469"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.515315" elapsed="0.007016"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.522508" elapsed="0.000272"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.523256" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:58.524824" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.522996" elapsed="0.001866"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.525035" elapsed="0.000308"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.525887" elapsed="0.000037"/>
</return>
<msg time="2024-12-01T15:25:58.527355" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.525634" elapsed="0.001764"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.527603" elapsed="0.000463"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:delete_04</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T15:25:58.511487" elapsed="0.016845"/>
</test>
<test id="s1-s2-t5" name="TC05 - Boundary Test - Delete with ID as 0" line="70">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.529996" level="INFO">${id} = 0</msg>
<var>${id}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T15:25:58.529682" elapsed="0.000367"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.532926" level="INFO">DELETE Request : url=http://localhost:1234/configs/0 
 path_url=/configs/0 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.533061" level="INFO">DELETE Response : url=http://localhost:1234/configs/0 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.533301" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.530317" elapsed="0.003030"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.535972" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.534233" elapsed="0.001816"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.537613" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.536261" elapsed="0.001417"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.539672" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.537846" elapsed="0.001867"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.540211" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.539906" elapsed="0.000363"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.533718" elapsed="0.006650"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.540521" elapsed="0.000275"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.541455" elapsed="0.000095"/>
</return>
<msg time="2024-12-01T15:25:58.543151" level="INFO">${actual_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.541051" elapsed="0.002174"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.544728" level="INFO">${message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.544208" elapsed="0.000579"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.544914" elapsed="0.000064"/>
</return>
<msg time="2024-12-01T15:25:58.545208" level="INFO">${expected_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T15:25:58.543539" elapsed="0.001706"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.545465" elapsed="0.000441"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.546593" elapsed="0.000057"/>
</return>
<msg time="2024-12-01T15:25:58.548450" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.546252" elapsed="0.002268"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.548738" elapsed="0.000346"/>
</kw>
<doc>Verify server response when trying to delete a configuration with ID=0.</doc>
<tag>id:delete_05</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T15:25:58.528694" elapsed="0.020566"/>
</test>
<test id="s1-s2-t6" name="TC06 - Confirm Deletion of Valid ID" line="84">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.552865" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.552951" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '196'} 
 body={"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.553188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.551051" elapsed="0.002174"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.555441" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.553931" elapsed="0.001608"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.557437" level="INFO">Response Body : {"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.555888" elapsed="0.001660"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.559371" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.557836" elapsed="0.001625"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.560210" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.559801" elapsed="0.000497"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.553490" elapsed="0.006918"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.560954" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T15:25:58.562784" level="INFO">${response_data} = [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}]</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.560661" elapsed="0.002171"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.563237" level="INFO">Length is 2.</msg>
<msg time="2024-12-01T15:25:58.563354" level="INFO">${number_of_configurations} = 2</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.563052" elapsed="0.000334"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.564514" elapsed="0.000026"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.564363" elapsed="0.000240"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.564694" elapsed="0.000037"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.564645" elapsed="0.000137"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.564339" elapsed="0.000481"/>
</if>
<msg time="2024-12-01T15:25:58.566497" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.563986" elapsed="0.002548"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.569831" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.569975" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.566714" elapsed="0.003426"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T15:25:58.563733" elapsed="0.006509"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.571814" elapsed="0.000026"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.571580" elapsed="0.000335"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.572015" elapsed="0.000054"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.571955" elapsed="0.000170"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.571525" elapsed="0.000642"/>
</if>
<msg time="2024-12-01T15:25:58.574167" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.570921" elapsed="0.003292"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.576615" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.576727" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.574440" elapsed="0.002402"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T15:25:58.570489" elapsed="0.006520"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:58.563473" elapsed="0.013594"/>
</for>
<status status="PASS" start="2024-12-01T15:25:58.550699" elapsed="0.026473"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.580156" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.580268" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.580434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.578003" elapsed="0.002468"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.577406" elapsed="0.003224"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.584828" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:58.584977" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.585187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.581552" elapsed="0.003685"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.580886" elapsed="0.004559"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.589369" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:58.589476" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.589654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.586760" elapsed="0.002935"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.585800" elapsed="0.004029"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T15:25:58.550327" elapsed="0.039578"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.592202" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.592290" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.592459" level="INFO">${delete_response} = &lt;Response [200]&gt;</msg>
<var>${delete_response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.590183" elapsed="0.002314"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.595066" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.593274" elapsed="0.001918"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.597134" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.595511" elapsed="0.001741"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.599380" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.597604" elapsed="0.002005"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.600292" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config deleted successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.599900" elapsed="0.000460"/>
</kw>
<arg>${delete_response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.592805" elapsed="0.007659"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.602909" level="INFO">GET Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.603005" level="INFO">GET Response : url=http://localhost:1234/configs/1 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '1' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.603170" level="INFO">${get_response} = &lt;Response [404]&gt;</msg>
<var>${get_response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.600687" elapsed="0.002520"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.605537" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.603987" elapsed="0.001629"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.607137" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '1' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.605797" elapsed="0.001418"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.609238" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.607444" elapsed="0.001877"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.610072" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.609653" elapsed="0.000544"/>
</kw>
<arg>${get_response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.603501" elapsed="0.006845"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${get_response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.610641" elapsed="0.000397"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.612427" elapsed="0.000077"/>
</return>
<msg time="2024-12-01T15:25:58.614277" level="INFO">${actual_error_message} = 'resource '1' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.611379" elapsed="0.002947"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.615487" level="INFO">${message} = 'resource '1' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.615123" elapsed="0.000410"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.615678" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T15:25:58.615921" level="INFO">${expected_error_message} = 'resource '1' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${VALID_ID}</arg>
<status status="PASS" start="2024-12-01T15:25:58.614617" elapsed="0.001344"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.616165" elapsed="0.000313"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.616976" elapsed="0.000038"/>
</return>
<msg time="2024-12-01T15:25:58.618610" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.616708" elapsed="0.001942"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.618829" elapsed="0.000308"/>
</kw>
<doc>Confirm the satellite configuration is no longer retrievable after deletion.</doc>
<tag>id:delete_06</tag>
<tag>service:delete</tag>
<status status="PASS" start="2024-12-01T15:25:58.549544" elapsed="0.069761"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.620280" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T15:25:58.620176" elapsed="0.000196"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:58.619920" elapsed="0.000544"/>
</kw>
<doc>Delete satellite configuration test cases</doc>
<status status="FAIL" start="2024-12-01T15:25:58.368780" elapsed="0.251730"/>
</suite>
<suite id="s1-s3" name="List Satellite Configurations" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/list_satellite_configurations.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.647726" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T15:25:58.647335" elapsed="0.000613"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:58.646862" elapsed="0.001436"/>
</kw>
<test id="s1-s3-t1" name="TC01 - List Valid Configurations" line="15">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.653853" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.653954" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '196'} 
 body={"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.654152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.650750" elapsed="0.003441"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.656668" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.655045" elapsed="0.001705"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.658253" level="INFO">Response Body : {"meta":null,"data":[{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.656944" elapsed="0.001394"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.659912" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.658523" elapsed="0.001433"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.660501" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}],...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.660157" elapsed="0.000433"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.654476" elapsed="0.006252"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.661442" elapsed="0.000110"/>
</return>
<msg time="2024-12-01T15:25:58.666587" level="INFO">${response_data} = [{'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}]</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.660982" elapsed="0.005657"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.667074" level="INFO">Length is 2.</msg>
<msg time="2024-12-01T15:25:58.667195" level="INFO">${number_of_configurations} = 2</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.666863" elapsed="0.000366"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.668695" elapsed="0.000029"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.668438" elapsed="0.000359"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.668896" elapsed="0.000059"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.668841" elapsed="0.000168"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.668394" elapsed="0.000654"/>
</if>
<msg time="2024-12-01T15:25:58.670845" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.667940" elapsed="0.002952"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.673192" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.673284" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.671092" elapsed="0.002297"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T15:25:58.667654" elapsed="0.005821"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.674589" elapsed="0.000024"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.674404" elapsed="0.000280"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.674790" elapsed="0.000083"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.674736" elapsed="0.000198"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.674374" elapsed="0.000602"/>
</if>
<msg time="2024-12-01T15:25:58.677216" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.673939" elapsed="0.003340"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.680186" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.680390" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.677577" elapsed="0.002940"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T15:25:58.673667" elapsed="0.006958"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:58.667336" elapsed="0.013347"/>
</for>
<status status="PASS" start="2024-12-01T15:25:58.650182" elapsed="0.030617"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.684132" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.684242" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.684415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.681739" elapsed="0.002714"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.681038" elapsed="0.003564"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.687598" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:58.687714" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.687897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.685421" elapsed="0.002520"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.684846" elapsed="0.003320"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.692424" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:58.692540" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.692792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.689546" elapsed="0.003398"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.688607" elapsed="0.004504"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T15:25:58.649592" elapsed="0.043604"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.695727" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.695824" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.695998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.693489" elapsed="0.002546"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.698499" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.696908" elapsed="0.001689"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.700231" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.698850" elapsed="0.001460"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.702213" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.700501" elapsed="0.001768"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.703162" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.702620" elapsed="0.000665"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.696414" elapsed="0.007070"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.703788" elapsed="0.000410"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.704959" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T15:25:58.707592" level="INFO">${actual_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${actual_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.704544" elapsed="0.003102"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.708139" level="INFO">Length is 3.</msg>
<arg>${actual_data}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2024-12-01T15:25:58.707911" elapsed="0.000306"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.708583" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T15:25:58.708699" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${actual_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.708406" elapsed="0.000326"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.709098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${number_of_configurations}</arg>
<arg>3</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-12-01T15:25:58.708905" elapsed="0.000274"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.709777" level="INFO">${expected_configurations} = [{'cospar_id': '2024-111GR', 'name': 'New Satellite Mission', 'type': 'OPTICAL'}, {'cospar_id': '2024-222UK', 'name': 'New Satellite Mission', 'type': 'SAR'}, {'cospar_id': '2024-333RU', 'name': 'New ...</msg>
<var>${expected_configurations}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>${REQ_VALID_SAR_PAYLOAD}</arg>
<arg>${REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-01T15:25:58.709357" elapsed="0.000461"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration" owner="common">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]}</value>
<status status="PASS" start="2024-12-01T15:25:58.710711" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T15:25:58.712635" level="INFO">${actual_configuration} = {'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}</msg>
<var>${actual_configuration}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T15:25:58.710352" elapsed="0.002326"/>
</kw>
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2024-12-01T15:25:58.713065" level="INFO">Removed item with key 'id' and value '1'.</msg>
<arg>${actual_configuration}</arg>
<arg>id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.712866" elapsed="0.000263"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.713615" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<arg>${actual_configuration}</arg>
<arg>${expected_configurations}[${id}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.713309" elapsed="0.000381"/>
</kw>
<var name="${id}">0</var>
<status status="PASS" start="2024-12-01T15:25:58.710190" elapsed="0.003561"/>
</iter>
<iter>
<kw name="Get Data Configuration" owner="common">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]}</value>
<status status="PASS" start="2024-12-01T15:25:58.714583" elapsed="0.000110"/>
</return>
<msg time="2024-12-01T15:25:58.716591" level="INFO">${actual_configuration} = {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}</msg>
<var>${actual_configuration}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T15:25:58.714075" elapsed="0.002578"/>
</kw>
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2024-12-01T15:25:58.717203" level="INFO">Removed item with key 'id' and value '2'.</msg>
<arg>${actual_configuration}</arg>
<arg>id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.716922" elapsed="0.000373"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.717976" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<arg>${actual_configuration}</arg>
<arg>${expected_configurations}[${id}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.717581" elapsed="0.000500"/>
</kw>
<var name="${id}">1</var>
<status status="PASS" start="2024-12-01T15:25:58.713902" elapsed="0.004265"/>
</iter>
<iter>
<kw name="Get Data Configuration" owner="common">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]}</value>
<status status="PASS" start="2024-12-01T15:25:58.719343" elapsed="0.000115"/>
</return>
<msg time="2024-12-01T15:25:58.721670" level="INFO">${actual_configuration} = {'id': 3, 'name': 'New Satellite Mission', 'type': 'TELECOM', 'cospar_id': '2024-333RU'}</msg>
<var>${actual_configuration}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T15:25:58.718686" elapsed="0.003033"/>
</kw>
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2024-12-01T15:25:58.722205" level="INFO">Removed item with key 'id' and value '3'.</msg>
<arg>${actual_configuration}</arg>
<arg>id</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.721943" elapsed="0.000445"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.722991" level="INFO">Argument types are:
&lt;class 'dict'&gt;
&lt;class 'robot.utils.dotdict.DotDict'&gt;</msg>
<arg>${actual_configuration}</arg>
<arg>${expected_configurations}[${id}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.722611" elapsed="0.000483"/>
</kw>
<var name="${id}">2</var>
<status status="PASS" start="2024-12-01T15:25:58.718384" elapsed="0.004779"/>
</iter>
<var>${id}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:58.709917" elapsed="0.013303"/>
</for>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:58.723780" elapsed="0.000059"/>
</return>
<msg time="2024-12-01T15:25:58.725525" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:58.723486" elapsed="0.002093"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.725789" elapsed="0.000290"/>
</kw>
<kw name="Get Errors" owner="common">
<return>
<value>${RESPONSE_JSON['errors']}</value>
<status status="PASS" start="2024-12-01T15:25:58.726599" elapsed="0.000058"/>
</return>
<msg time="2024-12-01T15:25:58.728925" level="INFO">${actual_errors} = None</msg>
<var>${actual_errors}</var>
<status status="PASS" start="2024-12-01T15:25:58.726300" elapsed="0.002703"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.729430" elapsed="0.000772"/>
</kw>
<doc>Test for retrieving all configurations.</doc>
<tag>id:list_01</tag>
<tag>service:list</tag>
<status status="PASS" start="2024-12-01T15:25:58.648477" elapsed="0.081990"/>
</test>
<test id="s1-s3-t2" name="TC02 - Boundary Condition - Validate with Empty Mission Configuration Database" line="40">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.737165" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.737279" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.737452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.733360" elapsed="0.004130"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.739943" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.738281" elapsed="0.001732"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.741940" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.740210" elapsed="0.001918"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.744671" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.742630" elapsed="0.002105"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.745635" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.745042" elapsed="0.000768"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.737811" elapsed="0.008159"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.746787" elapsed="0.000070"/>
</return>
<msg time="2024-12-01T15:25:58.748789" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.746323" elapsed="0.002540"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.749308" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T15:25:58.749438" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.749113" elapsed="0.000359"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.750641" elapsed="0.000020"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.750477" elapsed="0.000236"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.750800" elapsed="0.000038"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.750753" elapsed="0.000135"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.750452" elapsed="0.000474"/>
</if>
<msg time="2024-12-01T15:25:58.752713" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.750084" elapsed="0.002688"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.755428" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.755837" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.752986" elapsed="0.003101"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T15:25:58.749842" elapsed="0.006379"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.757861" elapsed="0.000045"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.757605" elapsed="0.000389"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.758175" elapsed="0.000088"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.758079" elapsed="0.000321"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.757531" elapsed="0.000949"/>
</if>
<msg time="2024-12-01T15:25:58.760758" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.756947" elapsed="0.003880"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.763379" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.763483" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.761083" elapsed="0.002533"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T15:25:58.756514" elapsed="0.007189"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.764731" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.764566" elapsed="0.000238"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.764890" elapsed="0.000037"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.764843" elapsed="0.000135"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.764532" elapsed="0.000484"/>
</if>
<msg time="2024-12-01T15:25:58.766758" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:58.764156" elapsed="0.002640"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.770106" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.770229" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.766994" elapsed="0.003393"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T15:25:58.763883" elapsed="0.006618"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:58.749582" elapsed="0.021007"/>
</for>
<status status="PASS" start="2024-12-01T15:25:58.732732" elapsed="0.038016"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T15:25:58.732095" elapsed="0.038770"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.774004" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.774131" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.774315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.771169" elapsed="0.003185"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.776859" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.775202" elapsed="0.001735"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.778575" level="INFO">Response Body : {"meta":null,"data":[],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.777149" elapsed="0.001495"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.780708" level="INFO">${response_json} = {'meta': None, 'data': [], 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.778839" elapsed="0.002005"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.781720" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [], 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.781094" elapsed="0.000708"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.774689" elapsed="0.007240"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.782205" elapsed="0.000468"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.783414" elapsed="0.000084"/>
</return>
<msg time="2024-12-01T15:25:58.785480" level="INFO">${actual_data} = []</msg>
<var>${actual_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.783002" elapsed="0.002537"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.786141" level="INFO">Length is 0.</msg>
<arg>${actual_data}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-12-01T15:25:58.785872" elapsed="0.000457"/>
</kw>
<kw name="Get Errors" owner="common">
<return>
<value>${RESPONSE_JSON['errors']}</value>
<status status="PASS" start="2024-12-01T15:25:58.787123" elapsed="0.000059"/>
</return>
<msg time="2024-12-01T15:25:58.789225" level="INFO">${actual_errors} = None</msg>
<var>${actual_errors}</var>
<status status="PASS" start="2024-12-01T15:25:58.786682" elapsed="0.002590"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.789512" elapsed="0.000334"/>
</kw>
<doc>Test for an empty database scenario.</doc>
<tag>id:list_02</tag>
<tag>service:list</tag>
<status status="PASS" start="2024-12-01T15:25:58.730950" elapsed="0.059083"/>
</test>
<test id="s1-s3-t3" name="TC03 - Test for SQL Injection Vulnerability" line="52">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.793398" level="INFO">GET Request : url=http://localhost:1234/configs?id=1%20OR%201=1 
 path_url=/configs?id=1%20OR%201=1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.793494" level="INFO">GET Response : url=http://localhost:1234/configs?id=1%20OR%201=1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.793666" level="FAIL">Url: http://localhost:1234/configs?id=1%20OR%201=1 Expected status: 200 != 400</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}?${REQ_SQL_INJECTION_PAYLOAD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T15:25:58.791128" elapsed="0.003209">Url: http://localhost:1234/configs?id=1%20OR%201=1 Expected status: 200 != 400</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T15:25:58.794683" elapsed="0.000040"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.795214" elapsed="0.000036"/>
</kw>
<kw name="Get Data" owner="common">
<var>${actual_data}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.795543" elapsed="0.000088"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<arg>${actual_data}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.795899" elapsed="0.000052"/>
</kw>
<doc>Attempt SQL Injection attack on the API and validate response.</doc>
<tag>id:list_03</tag>
<tag>service:list</tag>
<status status="FAIL" start="2024-12-01T15:25:58.790347" elapsed="0.005971">Url: http://localhost:1234/configs?id=1%20OR%201=1 Expected status: 200 != 400</status>
</test>
<test id="s1-s3-t4" name="TC04 - Test for Cross-Site Scripting" line="61">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.801448" level="INFO">GET Request : url=http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E 
 path_url=/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.801605" level="INFO">GET Response : url=http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.801787" level="FAIL">Url: http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E Expected status: 200 != 400</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}?${REQ_CROSS_SITE_SCRIPTING_PAYLOAD}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-12-01T15:25:58.797802" elapsed="0.004652">Url: http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E Expected status: 200 != 400</status>
</kw>
<kw name="Save Response Details" owner="common">
<arg>${response}</arg>
<status status="NOT RUN" start="2024-12-01T15:25:58.802830" elapsed="0.000039"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.803046" elapsed="0.000031"/>
</kw>
<kw name="Get Data" owner="common">
<var>${actual_data}</var>
<status status="NOT RUN" start="2024-12-01T15:25:58.803267" elapsed="0.000031"/>
</kw>
<kw name="Should Be Empty" owner="BuiltIn">
<arg>${actual_data}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.803453" elapsed="0.000027"/>
</kw>
<doc>Attempt Cross-Site Scripting attack on the API and validate response.</doc>
<tag>id:list_04</tag>
<tag>service:list</tag>
<status status="FAIL" start="2024-12-01T15:25:58.796836" elapsed="0.006878">Url: http://localhost:1234/configs?id=%3Cscript%3Ealert(document.cookie)%3C/script%3E Expected status: 200 != 400</status>
</test>
<test id="s1-s3-t5" name="TC05 - Check Unauthorized Access" line="70">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.807261" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.807467" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T15:25:58.807669" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.804812" elapsed="0.002899"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.810960" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.808920" elapsed="0.002153"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.813042" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.811366" elapsed="0.001800"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.815112" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.813408" elapsed="0.001754"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.815870" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.815452" elapsed="0.000498"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.808028" elapsed="0.008040"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.816263" elapsed="0.000262"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.817030" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:58.819154" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.816752" elapsed="0.002443"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.819380" elapsed="0.000341"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.820200" elapsed="0.000040"/>
</return>
<msg time="2024-12-01T15:25:58.822611" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.819945" elapsed="0.002786"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.823126" elapsed="0.000469"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:list_05</tag>
<tag>service:list</tag>
<status status="PASS" start="2024-12-01T15:25:58.804056" elapsed="0.019809"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.825489" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T15:25:58.825183" elapsed="0.000508"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:58.824716" elapsed="0.001179"/>
</kw>
<doc>List satellite configurations test cases</doc>
<status status="FAIL" start="2024-12-01T15:25:58.621701" elapsed="0.204263"/>
</suite>
<suite id="s1-s4" name="Retrieve Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/retrieve_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.839615" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T15:25:58.838978" elapsed="0.000971"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:58.838371" elapsed="0.001743"/>
</kw>
<test id="s1-s4-t1" name="TC01 - Retrieve Valid Configuration" line="14">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.844650" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.844747" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '37'} 
 body={"meta":null,"data":[],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.844905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.841928" elapsed="0.003016"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.847312" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.845669" elapsed="0.001735"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.849665" level="INFO">Response Body : {"meta":null,"data":[],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.847773" elapsed="0.002014"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.851800" level="INFO">${response_json} = {'meta': None, 'data': [], 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.850074" elapsed="0.001784"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.852617" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [], 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.852179" elapsed="0.000516"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.845221" elapsed="0.007604"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:58.853464" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T15:25:58.855502" level="INFO">${response_data} = []</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:58.853148" elapsed="0.002401"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.856069" level="INFO">Length is 0.</msg>
<msg time="2024-12-01T15:25:58.856190" level="INFO">${number_of_configurations} = 0</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:58.855808" elapsed="0.000416"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<var>${id}</var>
<arg>${i}</arg>
<status status="NOT RUN" start="2024-12-01T15:25:58.856801" elapsed="0.000042"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:58.857004" elapsed="0.000028"/>
</kw>
<var name="${i}"/>
<status status="NOT RUN" start="2024-12-01T15:25:58.856544" elapsed="0.000555"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.856314" elapsed="0.000832"/>
</for>
<status status="PASS" start="2024-12-01T15:25:58.841579" elapsed="0.015669"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.860232" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:58.860331" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.860485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.857998" elapsed="0.002525"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.857438" elapsed="0.003243"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.865342" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:58.865604" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.865888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.861622" elapsed="0.004317"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.860938" elapsed="0.005206"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.869872" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:58.869969" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.870136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.867152" elapsed="0.003030"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:58.866485" elapsed="0.003831"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T15:25:58.841160" elapsed="0.029231"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.872791" level="INFO">GET Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.872892" level="INFO">GET Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '116'} 
 body={"meta":null,"data":{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:58.873044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.870775" elapsed="0.002306"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.875413" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.873856" elapsed="0.001645"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.877522" level="INFO">Response Body : {"meta":null,"data":{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.875825" elapsed="0.001868"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.879782" level="INFO">${response_json} = {'meta': None, 'data': {'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.877994" elapsed="0.001838"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.880425" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.880065" elapsed="0.000426"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.873377" elapsed="0.007236"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.880806" elapsed="0.000269"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:58.881717" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T15:25:58.883489" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:58.881317" elapsed="0.002212"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.883764" elapsed="0.000384"/>
</kw>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.885685" elapsed="0.000043"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.885505" elapsed="0.000286"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.885893" elapsed="0.000019"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.885844" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.885477" elapsed="0.000518"/>
</if>
<msg time="2024-12-01T15:25:58.887815" level="INFO">${actual_data_id} = 1</msg>
<var>${actual_data_id}</var>
<status status="PASS" start="2024-12-01T15:25:58.885095" elapsed="0.002763"/>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.888491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${actual_data_id}</arg>
<arg>${VALID_ID}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" start="2024-12-01T15:25:58.888077" elapsed="0.000558"/>
</kw>
<kw name="Get Data Configuration Name" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['name']}</value>
<status status="PASS" start="2024-12-01T15:25:58.890023" elapsed="0.000087"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.889740" elapsed="0.000493"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['name']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.890376" elapsed="0.000023"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.890302" elapsed="0.000154"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.889682" elapsed="0.000829"/>
</if>
<msg time="2024-12-01T15:25:58.892394" level="INFO">${actual_data_name} = New Satellite Mission</msg>
<var>${actual_data_name}</var>
<status status="PASS" start="2024-12-01T15:25:58.889019" elapsed="0.003462"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-12-01T15:25:58.893324" level="INFO">${expected_data_name} = New Satellite Mission</msg>
<var>${expected_data_name}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.892844" elapsed="0.000525"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_name}</arg>
<arg>${expected_data_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.893611" elapsed="0.000333"/>
</kw>
<kw name="Get Data Configuration Type" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['type']}</value>
<status status="PASS" start="2024-12-01T15:25:58.894964" elapsed="0.000042"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.894783" elapsed="0.000285"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['type']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.895158" elapsed="0.000020"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.895110" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.894756" elapsed="0.000505"/>
</if>
<msg time="2024-12-01T15:25:58.897039" level="INFO">${actual_data_type} = OPTICAL</msg>
<var>${actual_data_type}</var>
<status status="PASS" start="2024-12-01T15:25:58.894377" elapsed="0.002701"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-12-01T15:25:58.897575" level="INFO">${expected_data_type} = OPTICAL</msg>
<var>${expected_data_type}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.897282" elapsed="0.000331"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_type}</arg>
<arg>${expected_data_type}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.897892" elapsed="0.000296"/>
</kw>
<kw name="Get Data Configuration Cospar ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['cospar_id']}</value>
<status status="PASS" start="2024-12-01T15:25:58.899062" elapsed="0.000039"/>
</return>
<status status="PASS" start="2024-12-01T15:25:58.898859" elapsed="0.000298"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['cospar_id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:58.899249" elapsed="0.000019"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:58.899201" elapsed="0.000112"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:58.898835" elapsed="0.000515"/>
</if>
<msg time="2024-12-01T15:25:58.900949" level="INFO">${actual_data_cospar_id} = 2024-111GR</msg>
<var>${actual_data_cospar_id}</var>
<status status="PASS" start="2024-12-01T15:25:58.898490" elapsed="0.002513"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-12-01T15:25:58.901748" level="INFO">${expected_data_cospar_id} = 2024-111GR</msg>
<var>${expected_data_cospar_id}</var>
<arg>${REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>cospar_id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.901260" elapsed="0.000534"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_data_cospar_id}</arg>
<arg>${expected_data_cospar_id}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.902108" elapsed="0.000511"/>
</kw>
<kw name="Get Errors" owner="common">
<return>
<value>${RESPONSE_JSON['errors']}</value>
<status status="PASS" start="2024-12-01T15:25:58.903619" elapsed="0.000073"/>
</return>
<msg time="2024-12-01T15:25:58.905721" level="INFO">${actual_errors} = None</msg>
<var>${actual_errors}</var>
<status status="PASS" start="2024-12-01T15:25:58.903174" elapsed="0.002594"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:58.906007" elapsed="0.000404"/>
</kw>
<doc>Test retrieving satellite configuration with a valid mission ID.</doc>
<tag>id:retrieve_01</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T15:25:58.840221" elapsed="0.066400"/>
</test>
<test id="s1-s4-t2" name="TC02 - Retrieve Non-existent Configuration" line="40">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.910101" level="INFO">GET Request : url=http://localhost:1234/configs/9999 
 path_url=/configs/9999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.910207" level="INFO">GET Response : url=http://localhost:1234/configs/9999 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '124'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.910360" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.907865" elapsed="0.002532"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.912704" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.911156" elapsed="0.001627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.915107" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.912966" elapsed="0.002274"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.917513" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.915615" elapsed="0.001987"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.918412" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.917883" elapsed="0.000648"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.910707" elapsed="0.008097"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.919070" elapsed="0.000333"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.920074" elapsed="0.000048"/>
</return>
<msg time="2024-12-01T15:25:58.921807" level="INFO">${actual_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.919769" elapsed="0.002082"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.923107" level="INFO">${message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.922756" elapsed="0.000398"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.923251" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:58.923492" level="INFO">${expected_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID}</arg>
<status status="PASS" start="2024-12-01T15:25:58.922162" elapsed="0.001368"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.923719" elapsed="0.000307"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.924495" elapsed="0.000037"/>
</return>
<msg time="2024-12-01T15:25:58.926231" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.924235" elapsed="0.002035"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.926444" elapsed="0.000309"/>
</kw>
<doc>Test retrieving satellite configuration with an invalid mission ID.</doc>
<tag>id:retrieve_02</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T15:25:58.906976" elapsed="0.019953"/>
</test>
<test id="s1-s4-t3" name="TC03 - Boundary Test - Retrieve with ID as 0 or -1" line="52">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.928400" level="INFO">${id} = 0</msg>
<var>${id}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T15:25:58.928040" elapsed="0.000414"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.931698" level="INFO">GET Request : url=http://localhost:1234/configs/0 
 path_url=/configs/0 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.931827" level="INFO">GET Response : url=http://localhost:1234/configs/0 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.932065" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.928714" elapsed="0.003404"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.935072" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.933306" elapsed="0.001843"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.936724" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '0' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.935368" elapsed="0.001424"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.938505" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.936986" elapsed="0.001587"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.939192" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '0' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.938837" elapsed="0.000419"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.932583" elapsed="0.006776"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.939532" elapsed="0.000268"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.940298" elapsed="0.000056"/>
</return>
<msg time="2024-12-01T15:25:58.941934" level="INFO">${actual_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.940023" elapsed="0.001975"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.943843" level="INFO">${message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.943249" elapsed="0.000659"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.944046" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T15:25:58.944359" level="INFO">${expected_error_message} = 'resource '0' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T15:25:58.942366" elapsed="0.002032"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.944700" elapsed="0.000480"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.945988" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T15:25:58.948006" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.945584" elapsed="0.002468"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.948282" elapsed="0.000333"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.948997" level="INFO">${id} = -1</msg>
<var>${id}</var>
<arg>-1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-01T15:25:58.948827" elapsed="0.000207"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.951736" level="INFO">GET Request : url=http://localhost:1234/configs/-1 
 path_url=/configs/-1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.951828" level="INFO">GET Response : url=http://localhost:1234/configs/-1 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '122'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '-1' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.952085" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.949202" elapsed="0.002929"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.954499" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.952890" elapsed="0.001696"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.956652" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '-1' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.954792" elapsed="0.002014"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.958746" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '-1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.957134" elapsed="0.001683"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.959634" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '-1' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.959135" elapsed="0.000610"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.952407" elapsed="0.007456"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.960089" elapsed="0.000278"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.960928" elapsed="0.000048"/>
</return>
<msg time="2024-12-01T15:25:58.962707" level="INFO">${actual_error_message} = 'resource '-1' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.960632" elapsed="0.002140"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.963843" level="INFO">${message} = 'resource '-1' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.963508" elapsed="0.000373"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.963980" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T15:25:58.964219" level="INFO">${expected_error_message} = 'resource '-1' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${id}</arg>
<status status="PASS" start="2024-12-01T15:25:58.963035" elapsed="0.001218"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.964420" elapsed="0.000299"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.965167" elapsed="0.000036"/>
</return>
<msg time="2024-12-01T15:25:58.966754" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.964923" elapsed="0.001868"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.966951" elapsed="0.000299"/>
</kw>
<doc>Test retrieving configurations with boundary ID values.</doc>
<tag>id:retrieve_03</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T15:25:58.927231" elapsed="0.040184"/>
</test>
<test id="s1-s4-t4" name="TC04 - Retrieve with Invalid ID Format" line="74">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.972192" level="INFO">GET Request : url=http://localhost:1234/configs/invalid_id 
 path_url=/configs/invalid_id 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.972298" level="INFO">GET Response : url=http://localhost:1234/configs/invalid_id 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '153'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:58.972527" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID_FORMAT}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.968917" elapsed="0.003685"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.975374" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.973730" elapsed="0.001721"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.977027" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to strconv.ParseInt: parsing \"invalid_id\": invalid syntax","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.975683" elapsed="0.001411"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:58.978826" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.977270" elapsed="0.001612"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.979525" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:58.979175" elapsed="0.000440"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.973073" elapsed="0.006642"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:58.979884" elapsed="0.000246"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:58.980630" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T15:25:58.982452" level="INFO">${actual_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:58.980344" elapsed="0.002156"/>
</kw>
<kw name="Build Parse Int Invalid Syntax Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:58.984330" level="INFO">${message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${message}</var>
<arg>${PARSE_INT_INVALID_SYNTAX_ERROR_MSG}</arg>
<arg>INVALID_ID_FORMAT_PLACEHOLDER</arg>
<arg>${INVALID_ID_FORMAT}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:58.983752" elapsed="0.000636"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:58.984516" elapsed="0.000079"/>
</return>
<msg time="2024-12-01T15:25:58.984909" level="INFO">${expected_error_message} = invalid request due to strconv.ParseInt: parsing "invalid_id": invalid syntax</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID_FORMAT}</arg>
<status status="PASS" start="2024-12-01T15:25:58.983029" elapsed="0.001931"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.985277" elapsed="0.000597"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:58.986658" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T15:25:58.989008" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:58.986210" elapsed="0.002856"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:58.989268" elapsed="0.000333"/>
</kw>
<doc>Test the response when an invalid data format is passed as ID.</doc>
<tag>id:retrieve_04</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T15:25:58.967728" elapsed="0.022048"/>
</test>
<test id="s1-s4-t5" name="TC05 - Check Unauthorized Access" line="86">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:58.993429" level="INFO">GET Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:58.993527" level="INFO">GET Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 13:25:58 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T15:25:58.993725" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:58.990987" elapsed="0.002776"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.996429" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.994586" elapsed="0.001920"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:58.998339" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:58.996723" elapsed="0.001740"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.000932" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:58.999074" elapsed="0.001907"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.001658" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.001217" elapsed="0.000525"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:58.994066" elapsed="0.007807"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.002090" elapsed="0.000259"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.002856" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:59.004506" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.002588" elapsed="0.001958"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.004751" elapsed="0.000315"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.005538" elapsed="0.000049"/>
</return>
<msg time="2024-12-01T15:25:59.007207" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.005276" elapsed="0.001967"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.007428" elapsed="0.000316"/>
</kw>
<doc>Verify the endpoint rejects requests from unauthorized users.</doc>
<tag>id:retrieve_05</tag>
<tag>service:retrieve</tag>
<status status="PASS" start="2024-12-01T15:25:58.990108" elapsed="0.017841"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.009779" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T15:25:59.009491" elapsed="0.000397"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:59.008942" elapsed="0.001071"/>
</kw>
<doc>Retrieve satellite configuration test cases</doc>
<status status="PASS" start="2024-12-01T15:25:58.827178" elapsed="0.182894"/>
</suite>
<suite id="s1-s5" name="Update Satellite Configuration" source="/home/aristotelis/Documents/SatelliteConfigurationService/tests/update_satellite_configuration.robot">
<kw name="Create Session with Satellite Configuration Service" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.029393" level="INFO">Creating Session using : alias=api, url=http://localhost:1234, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-01T15:25:59.029038" elapsed="0.000610"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:59.028729" elapsed="0.001030"/>
</kw>
<test id="s1-s5-t1" name="TC01 - Update Valid Configuration" line="15">
<kw name="Run Keywords" owner="BuiltIn" type="SETUP">
<kw name="Clear Mission Configuration Database" owner="common">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.033664" level="INFO">GET Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:59.033773" level="INFO">GET Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '278'} 
 body={"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.033945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.031470" elapsed="0.002512"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.036678" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.034786" elapsed="0.002006"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.038880" level="INFO">Response Body : {"meta":null,"data":[{"id":1,"name":"New Satellite Mission","type":"OPTICAL","cospar_id":"2024-111GR"},{"id":2,"name":"New Satellite Mission","type":"SAR","cospar_id":"2024-222UK"},{"id":3,"name":"New Satellite Mission","type":"TELECOM","cospar_id":"2024-333RU"}],"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.037089" elapsed="0.001889"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.041000" level="INFO">${response_json} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.039226" elapsed="0.001823"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.041679" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, ...</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.041286" elapsed="0.000456"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.034284" elapsed="0.007558"/>
</kw>
<kw name="Get Data" owner="common">
<return>
<value>${RESPONSE_JSON['data']}</value>
<status status="PASS" start="2024-12-01T15:25:59.042336" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T15:25:59.044026" level="INFO">${response_data} = [{'id': 1, 'name': 'New Satellite Mission', 'type': 'OPTICAL', 'cospar_id': '2024-111GR'}, {'id': 2, 'name': 'New Satellite Mission', 'type': 'SAR', 'cospar_id': '2024-222UK'}, {'id': 3, 'name': 'New ...</msg>
<var>${response_data}</var>
<status status="PASS" start="2024-12-01T15:25:59.042070" elapsed="0.001997"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.044418" level="INFO">Length is 3.</msg>
<msg time="2024-12-01T15:25:59.044527" level="INFO">${number_of_configurations} = 3</msg>
<var>${number_of_configurations}</var>
<arg>${response_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-01T15:25:59.044243" elapsed="0.000326"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:59.045689" elapsed="0.000020"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:59.045506" elapsed="0.000254"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:59.045848" elapsed="0.000090"/>
</return>
<status status="PASS" start="2024-12-01T15:25:59.045799" elapsed="0.000192"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:59.045469" elapsed="0.000559"/>
</if>
<msg time="2024-12-01T15:25:59.048172" level="INFO">${id} = 1</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:59.045143" elapsed="0.003195"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.051615" level="INFO">DELETE Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:59.051952" level="INFO">DELETE Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.048611" elapsed="0.003538"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-12-01T15:25:59.044901" elapsed="0.007344"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:59.053501" elapsed="0.000020"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:59.053307" elapsed="0.000286"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:59.053684" elapsed="0.000041"/>
</return>
<status status="PASS" start="2024-12-01T15:25:59.053634" elapsed="0.000165"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:59.053279" elapsed="0.000560"/>
</if>
<msg time="2024-12-01T15:25:59.055650" level="INFO">${id} = 2</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:59.052777" elapsed="0.002914"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.057989" level="INFO">DELETE Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:59.058092" level="INFO">DELETE Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.055903" elapsed="0.002300"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2024-12-01T15:25:59.052438" elapsed="0.005847"/>
</iter>
<iter>
<kw name="Get Data Configuration ID" owner="common">
<if>
<branch type="IF" condition="'${data_index}'=='None'">
<return>
<value>${RESPONSE_JSON['data']['id']}</value>
<status status="NOT RUN" start="2024-12-01T15:25:59.059381" elapsed="0.000021"/>
</return>
<status status="NOT RUN" start="2024-12-01T15:25:59.059213" elapsed="0.000239"/>
</branch>
<branch type="ELSE">
<return>
<value>${RESPONSE_JSON['data'][${data_index}]['id']}</value>
<status status="PASS" start="2024-12-01T15:25:59.059539" elapsed="0.000046"/>
</return>
<status status="PASS" start="2024-12-01T15:25:59.059491" elapsed="0.000150"/>
</branch>
<status status="PASS" start="2024-12-01T15:25:59.059181" elapsed="0.000497"/>
</if>
<msg time="2024-12-01T15:25:59.061407" level="INFO">${id} = 3</msg>
<var>${id}</var>
<arg>${i}</arg>
<status status="PASS" start="2024-12-01T15:25:59.058758" elapsed="0.002695"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.064735" level="INFO">DELETE Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-01T15:25:59.064877" level="INFO">DELETE Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config deleted successfully"},"errors":null} 
 </msg>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${id}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.061834" elapsed="0.003237"/>
</kw>
<var name="${i}">2</var>
<status status="PASS" start="2024-12-01T15:25:59.058460" elapsed="0.006743"/>
</iter>
<var>${i}</var>
<value>0</value>
<value>${number_of_configurations}</value>
<status status="PASS" start="2024-12-01T15:25:59.044655" elapsed="0.020622"/>
</for>
<status status="PASS" start="2024-12-01T15:25:59.031152" elapsed="0.034278"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.068800" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-111GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.068896" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.069080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.066505" elapsed="0.002612"/>
</kw>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:59.065795" elapsed="0.003451"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.072466" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "2024-222UK", "name": "New Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:59.072579" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.072816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.070067" elapsed="0.002786"/>
</kw>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:59.069501" elapsed="0.003496"/>
</kw>
<kw name="Populate Mission Configuration Database" owner="common">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.076540" level="INFO">POST Request : url=http://localhost:1234/configs 
 path_url=/configs 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-333RU", "name": "New Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:59.076701" level="INFO">POST Response : url=http://localhost:1234/configs 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config created successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.076910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_VALID_PAYLOAD}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.073798" elapsed="0.003154"/>
</kw>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<status status="PASS" start="2024-12-01T15:25:59.073229" elapsed="0.003872"/>
</kw>
<arg>Clear Mission Configuration Database</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_OPTICAL_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_SAR_PAYLOAD}</arg>
<arg>AND</arg>
<arg>Populate Mission Configuration Database</arg>
<arg>&amp;{REQ_VALID_TELECOM_PAYLOAD}</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<status status="PASS" start="2024-12-01T15:25:59.030797" elapsed="0.046445"/>
</kw>
<kw name="Update Satellite Configuration" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.081532" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-235BE", "name": "Updated Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.081663" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.081832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_UPDATE}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.078617" elapsed="0.003253"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.086534" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.084824" elapsed="0.002007"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.089191" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.087043" elapsed="0.002303"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.091701" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.089768" elapsed="0.002010"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.092484" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.092077" elapsed="0.000509"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.082174" elapsed="0.010536"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.092905" elapsed="0.000381"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:59.093896" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T15:25:59.095658" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:59.093587" elapsed="0.002115"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:59.095932" elapsed="0.000319"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.096756" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:59.098419" level="INFO">${actual_data_message} = Mission config updated successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.096471" elapsed="0.001993"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.098999" level="FAIL">Mission config updated successfully != Mission configuration updated successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_UPDATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:59.098646" elapsed="0.000444">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:59.099413" elapsed="0.000036"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:59.099630" elapsed="0.000027"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_VALID_OPTICAL_UPDATE}</arg>
<status status="FAIL" start="2024-12-01T15:25:59.077715" elapsed="0.022079">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Update Satellite Configuration" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.103913" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-284BR", "name": "Updated Satellite Mission", "type": "TELECOM"}' 
 </msg>
<msg time="2024-12-01T15:25:59.104057" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.104295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_UPDATE}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.100764" elapsed="0.003579"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.107092" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.105385" elapsed="0.001799"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.108984" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.107422" elapsed="0.001640"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.110751" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.109290" elapsed="0.001500"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.111332" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.110999" elapsed="0.000390"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.104720" elapsed="0.006766"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.111663" elapsed="0.000238"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:59.112377" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T15:25:59.114018" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:59.112110" elapsed="0.001945"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:59.114255" elapsed="0.000298"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.115333" elapsed="0.000051"/>
</return>
<msg time="2024-12-01T15:25:59.117165" level="INFO">${actual_data_message} = Mission config updated successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.114790" elapsed="0.002460"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.118107" level="FAIL">Mission config updated successfully != Mission configuration updated successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_UPDATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:59.117587" elapsed="0.000643">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:59.118586" elapsed="0.000054"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:59.118899" elapsed="0.000046"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_VALID_TELECOM_UPDATE}</arg>
<status status="FAIL" start="2024-12-01T15:25:59.100060" elapsed="0.019122">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Update Satellite Configuration" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.123406" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2025-674NL", "name": "Updated Satellite Mission", "type": "SAR"}' 
 </msg>
<msg time="2024-12-01T15:25:59.123499" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=200, reason=OK 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '84'} 
 body={"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null} 
 </msg>
<msg time="2024-12-01T15:25:59.123697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_UPDATE}</arg>
<arg>expected_status=200</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.120410" elapsed="0.003324"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.126237" level="INFO">Status Code : 200</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.124621" elapsed="0.001694"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.127824" level="INFO">Response Body : {"meta":null,"data":{"message":"Mission config updated successfully"},"errors":null}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.126595" elapsed="0.001330"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.130168" level="INFO">${response_json} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.128234" elapsed="0.002005"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.130991" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': {'message': 'Mission config updated successfully'}, 'errors': None}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.130511" elapsed="0.000601"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.124031" elapsed="0.007215"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.131541" elapsed="0.000535"/>
</kw>
<kw name="Get Meta" owner="common">
<return>
<value>${RESPONSE_JSON['meta']}</value>
<status status="PASS" start="2024-12-01T15:25:59.133305" elapsed="0.000100"/>
</return>
<msg time="2024-12-01T15:25:59.135213" level="INFO">${actual_meta} = None</msg>
<var>${actual_meta}</var>
<status status="PASS" start="2024-12-01T15:25:59.132730" elapsed="0.002551"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_meta}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-12-01T15:25:59.135551" elapsed="0.000354"/>
</kw>
<kw name="Get Data Message" owner="common">
<return>
<value>${RESPONSE_JSON['data']['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.136415" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:59.138267" level="INFO">${actual_data_message} = Mission config updated successfully</msg>
<var>${actual_data_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.136152" elapsed="0.002157"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.138932" level="FAIL">Mission config updated successfully != Mission configuration updated successfully.</msg>
<arg>${actual_data_message}</arg>
<arg>${MISSION_CONFIG_UPDATED_DATA_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-12-01T15:25:59.138506" elapsed="0.000537">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<kw name="Get Errors" owner="common">
<var>${actual_errors}</var>
<status status="NOT RUN" start="2024-12-01T15:25:59.139306" elapsed="0.000035"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${actual_errors}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-12-01T15:25:59.139513" elapsed="0.000028"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_VALID_SAR_UPDATE}</arg>
<status status="FAIL" start="2024-12-01T15:25:59.119585" elapsed="0.020121">Mission config updated successfully != Mission configuration updated successfully.</status>
</kw>
<doc>Verify that a valid satellite configuration can be updated successfully (for each possible payload type).</doc>
<tag>id:update_01</tag>
<tag>service:update</tag>
<status status="FAIL" start="2024-12-01T15:25:59.029905" elapsed="0.110025">Several failures occurred:

1) Mission config updated successfully != Mission configuration updated successfully.

2) Mission config updated successfully != Mission configuration updated successfully.

3) Mission config updated successfully != Mission configuration updated successfully.</status>
</test>
<test id="s1-s5-t2" name="TC02 - Update Non-existent Configuration" line="27">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.145203" level="INFO">PUT Request : url=http://localhost:1234/configs/9999 
 path_url=/configs/9999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-235BE", "name": "Updated Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.145329" level="INFO">PUT Response : url=http://localhost:1234/configs/9999 
 status=404, reason=Not Found 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '124'} 
 body={"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.145594" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${INVALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_VALID_OPTICAL_UPDATE}</arg>
<arg>expected_status=404</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.141117" elapsed="0.004526"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.148760" level="INFO">Status Code : 404</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.147008" elapsed="0.001838"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.150396" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"'resource '9999' of type 'Mission'' does not exist","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.149056" elapsed="0.001409"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.152128" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.150691" elapsed="0.001478"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.152682" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': "'resource '9999' of type 'Mission'' does not exist", 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.152362" elapsed="0.000383"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.146175" elapsed="0.006664"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>404</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.153017" elapsed="0.000228"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.153759" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:59.155407" level="INFO">${actual_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.153481" elapsed="0.001982"/>
</kw>
<kw name="Build Resource Does Not Exist Error Message" owner="response_data">
<kw name="Replace String" owner="String">
<msg time="2024-12-01T15:25:59.157264" level="INFO">${message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${message}</var>
<arg>${RESOURCE_DOES_NOT_EXIST_ERROR_MSG}</arg>
<arg>INVALID_ID_PLACEHOLDER</arg>
<arg>${INVALID_ID}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-12-01T15:25:59.156791" elapsed="0.000538"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" start="2024-12-01T15:25:59.157453" elapsed="0.000066"/>
</return>
<msg time="2024-12-01T15:25:59.157841" level="INFO">${expected_error_message} = 'resource '9999' of type 'Mission'' does not exist</msg>
<var>${expected_error_message}</var>
<arg>${INVALID_ID}</arg>
<status status="PASS" start="2024-12-01T15:25:59.155808" elapsed="0.002087"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${expected_error_message}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.158189" elapsed="0.000781"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.160128" elapsed="0.000077"/>
</return>
<msg time="2024-12-01T15:25:59.162660" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.159522" elapsed="0.003199"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.162970" elapsed="0.000343"/>
</kw>
<doc>Verify server response when trying to update a non-existent configuration.</doc>
<tag>id:update_02</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.140341" elapsed="0.023151"/>
</test>
<test id="s1-s5-t3" name="TC03 - Update with Invalid COSPAR ID" line="40">
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.167812" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "INVALID", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.167931" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.168111" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.165427" elapsed="0.002722"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.171227" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.169290" elapsed="0.002046"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.173290" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.171640" elapsed="0.001790"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.175411" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.173724" elapsed="0.001749"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.176112" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.175741" elapsed="0.000442"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.168625" elapsed="0.007657"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.176457" elapsed="0.000264"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.177199" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:59.178864" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.176936" elapsed="0.001987"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.179131" elapsed="0.000333"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.179980" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:59.181877" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.179717" elapsed="0.002222"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.182277" elapsed="0.000661"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_XXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.164853" elapsed="0.018355"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.187915" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '75'} 
 body=b'{"cospar_id": "-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.188119" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.188294" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.184548" elapsed="0.003796"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.190705" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.189135" elapsed="0.001637"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.192282" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.190950" elapsed="0.001398"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.193932" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.192532" elapsed="0.001443"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.194498" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.194172" elapsed="0.000426"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.188645" elapsed="0.006078"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.195003" elapsed="0.000455"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.196451" elapsed="0.000082"/>
</return>
<msg time="2024-12-01T15:25:59.198274" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.195872" elapsed="0.002467"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.198645" elapsed="0.000594"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.200058" elapsed="0.000566"/>
</return>
<msg time="2024-12-01T15:25:59.202293" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.199627" elapsed="0.002732"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.202620" elapsed="0.000385"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_-dddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.183660" elapsed="0.019457"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.206384" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.206478" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.206648" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.204098" elapsed="0.002591"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.209502" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.207483" elapsed="0.002221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.211626" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.209995" elapsed="0.001805"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.213820" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.212144" elapsed="0.001743"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.214491" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.214117" elapsed="0.000434"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.206984" elapsed="0.007773"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.214944" elapsed="0.000249"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.215687" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T15:25:59.217256" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.215410" elapsed="0.001890"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.217516" elapsed="0.000341"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.218354" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:59.219978" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.218079" elapsed="0.001938"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.220197" elapsed="0.000304"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YY-dddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.203434" elapsed="0.017174"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.225053" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '76'} 
 body=b'{"cospar_id": "2024-GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.225202" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.225546" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.221502" elapsed="0.004152"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.228469" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.226757" elapsed="0.001788"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.230136" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.228776" elapsed="0.001428"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.231785" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.230394" elapsed="0.001433"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.232362" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.232019" elapsed="0.000401"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.226080" elapsed="0.006433"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.232723" elapsed="0.000239"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.233448" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T15:25:59.235180" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.233179" elapsed="0.002062"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.235508" elapsed="0.000391"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.236653" elapsed="0.000079"/>
</return>
<msg time="2024-12-01T15:25:59.238928" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.236276" elapsed="0.002712"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.239276" elapsed="0.000497"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.220884" elapsed="0.019063"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.243571" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-7GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.243682" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.243915" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.241128" elapsed="0.002827"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.246284" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.244729" elapsed="0.001633"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.247869" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.246533" elapsed="0.001418"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.249891" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.248154" elapsed="0.001797"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.250769" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.250271" elapsed="0.000611"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.244250" elapsed="0.006801"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.251291" elapsed="0.000437"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.252690" elapsed="0.000078"/>
</return>
<msg time="2024-12-01T15:25:59.254542" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.252239" elapsed="0.002362"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.254833" elapsed="0.000342"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.255695" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:59.257484" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.255418" elapsed="0.002117"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.257776" elapsed="0.000335"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.240300" elapsed="0.017919"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.261388" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body=b'{"cospar_id": "2024-567", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.261483" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.261680" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.259095" elapsed="0.002630"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.264530" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.262766" elapsed="0.001886"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.266357" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.264938" elapsed="0.001575"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.268477" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.266835" elapsed="0.001692"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.269206" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.268820" elapsed="0.000450"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.262141" elapsed="0.007229"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.269551" elapsed="0.000258"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.270407" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:59.272005" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.270140" elapsed="0.001908"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.272256" elapsed="0.000311"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.273041" elapsed="0.000038"/>
</return>
<msg time="2024-12-01T15:25:59.274652" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.272785" elapsed="0.001909"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.274893" elapsed="0.000414"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-ddd}</arg>
<status status="PASS" start="2024-12-01T15:25:59.258480" elapsed="0.016955"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.280865" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '80'} 
 body=b'{"cospar_id": "2024-567GRE", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.280976" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.281179" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.277493" elapsed="0.003733"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.283675" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.282078" elapsed="0.001667"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.285274" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.283923" elapsed="0.001418"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.286922" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.285527" elapsed="0.001439"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.287550" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.287193" elapsed="0.000445"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.281587" elapsed="0.006154"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.287940" elapsed="0.000252"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.288892" elapsed="0.000049"/>
</return>
<msg time="2024-12-01T15:25:59.290609" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.288491" elapsed="0.002214"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.290963" elapsed="0.000490"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.292214" elapsed="0.000054"/>
</return>
<msg time="2024-12-01T15:25:59.294250" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.291820" elapsed="0.002497"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.294599" elapsed="0.000464"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.275779" elapsed="0.019426"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.298499" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '78'} 
 body=b'{"cospar_id": "2024567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.298617" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.298769" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.296217" elapsed="0.002589"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.301043" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.299650" elapsed="0.001468"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.303090" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.301343" elapsed="0.001880"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.305179" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.303492" elapsed="0.001746"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.306096" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.305570" elapsed="0.000649"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.299173" elapsed="0.007200"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.306706" elapsed="0.000363"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.307688" elapsed="0.000048"/>
</return>
<msg time="2024-12-01T15:25:59.309376" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.307373" elapsed="0.002047"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.309649" elapsed="0.000337"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.310466" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T15:25:59.312086" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.310207" elapsed="0.001918"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.312312" elapsed="0.000303"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYYdddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.295550" elapsed="0.017164"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.317089" level="INFO">PUT Request : url=http://localhost:1234/configs/3 
 path_url=/configs/3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2O24-567GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.317250" level="INFO">PUT Response : url=http://localhost:1234/configs/3 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.317526" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.313561" elapsed="0.004043"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.321050" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.318838" elapsed="0.002293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.322908" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.321361" elapsed="0.001623"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.324624" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.323196" elapsed="0.001471"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.325241" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.324871" elapsed="0.000430"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.318038" elapsed="0.007358"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.325552" elapsed="0.000251"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.326403" elapsed="0.000053"/>
</return>
<msg time="2024-12-01T15:25:59.327885" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.326047" elapsed="0.001906"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.328242" elapsed="0.000500"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.329437" elapsed="0.000105"/>
</return>
<msg time="2024-12-01T15:25:59.331695" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.329142" elapsed="0.002629"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.332277" elapsed="0.000662"/>
</kw>
<arg>3</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YXYY-dddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.312974" elapsed="0.020251"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.336886" level="INFO">PUT Request : url=http://localhost:1234/configs/2 
 path_url=/configs/2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-_67GR", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.336979" level="INFO">PUT Response : url=http://localhost:1234/configs/2 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.337142" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.334505" elapsed="0.002675"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.339525" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.337976" elapsed="0.001653"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.341075" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.339811" elapsed="0.001342"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.343239" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.341381" elapsed="0.001929"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.344168" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.343620" elapsed="0.000684"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.337483" elapsed="0.006984"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.344736" elapsed="0.000412"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.346022" elapsed="0.000110"/>
</return>
<msg time="2024-12-01T15:25:59.347986" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.345505" elapsed="0.002549"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.348357" elapsed="0.000406"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.349296" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:59.351010" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.349027" elapsed="0.002024"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.351246" elapsed="0.000297"/>
</kw>
<arg>2</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-XddXX}</arg>
<status status="PASS" start="2024-12-01T15:25:59.333696" elapsed="0.017949"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.355520" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567G8", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.355652" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.355969" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.352463" elapsed="0.003586"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.358988" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.357430" elapsed="0.001651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.361087" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.359371" elapsed="0.001890"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.363116" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.361494" elapsed="0.001674"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.363760" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.363399" elapsed="0.000424"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.356705" elapsed="0.007216"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.364096" elapsed="0.000253"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.364921" elapsed="0.000046"/>
</return>
<msg time="2024-12-01T15:25:59.366447" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.364595" elapsed="0.001890"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.366665" elapsed="0.000295"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.367422" elapsed="0.000042"/>
</return>
<msg time="2024-12-01T15:25:59.369642" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.367165" elapsed="0.002557"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.369997" elapsed="0.000492"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddXd}</arg>
<status status="PASS" start="2024-12-01T15:25:59.351895" elapsed="0.018793"/>
</kw>
<kw name="Update Satellite Configuration with Invalid COSPAR ID" owner="update_satellite_configuration_steps">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.375198" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-567gr", "name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.375303" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '114'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.375477" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${REQ_VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.371938" elapsed="0.003576"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.377912" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.376304" elapsed="0.001676"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.379459" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid COSPAR ID","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.378172" elapsed="0.001363"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.381023" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.379717" elapsed="0.001349"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.381753" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid COSPAR ID', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.381266" elapsed="0.000577"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.375820" elapsed="0.006148"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.382220" elapsed="0.000379"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.383644" elapsed="0.000074"/>
</return>
<msg time="2024-12-01T15:25:59.385281" level="INFO">${actual_error_message} = invalid request due to invalid COSPAR ID</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.383070" elapsed="0.002334"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.385794" elapsed="0.000551"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.387063" elapsed="0.000048"/>
</return>
<msg time="2024-12-01T15:25:59.388894" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.386761" elapsed="0.002177"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.389142" elapsed="0.000337"/>
</kw>
<arg>1</arg>
<arg>&amp;{REQ_INVALID_COSPAR_ID_YYYY-dddxx}</arg>
<status status="PASS" start="2024-12-01T15:25:59.371012" elapsed="0.018685"/>
</kw>
<doc>Verify server response when updating with an invalid COSPAR ID (for different COSPAR ID formats).</doc>
<tag>id:update_03</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.163839" elapsed="0.226077"/>
</test>
<test id="s1-s5-t4" name="TC04 - Update with Invalid Payload Type" line="57">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.393183" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "UNKNOWN"}' 
 </msg>
<msg time="2024-12-01T15:25:59.393270" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.393420" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.390985" elapsed="0.002480"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.396624" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.394751" elapsed="0.001984"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.398473" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.397021" elapsed="0.001598"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.400337" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.398923" elapsed="0.001461"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.400999" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.400643" elapsed="0.000424"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.393758" elapsed="0.007469"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.401454" elapsed="0.000271"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.402240" elapsed="0.000044"/>
</return>
<msg time="2024-12-01T15:25:59.403830" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.401970" elapsed="0.001947"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.404114" elapsed="0.000298"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.404878" elapsed="0.000038"/>
</return>
<msg time="2024-12-01T15:25:59.406416" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.404623" elapsed="0.001829"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.406624" elapsed="0.000288"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.410023" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '79'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission", "type": "optical"}' 
 </msg>
<msg time="2024-12-01T15:25:59.410256" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '117'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.410509" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=${REQ_INVALID_TYPE_LOWERCASE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.407083" elapsed="0.003499"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.413297" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.411694" elapsed="0.001727"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.415268" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to invalid payload type","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.413709" elapsed="0.001652"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.417072" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.415625" elapsed="0.001488"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.417733" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to invalid payload type', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.417393" elapsed="0.000401"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.410998" elapsed="0.006897"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.418065" elapsed="0.000247"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.418794" elapsed="0.000041"/>
</return>
<msg time="2024-12-01T15:25:59.420323" level="INFO">${actual_error_message} = invalid request due to invalid payload type</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.418522" elapsed="0.001839"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${INVALID_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.420540" elapsed="0.000307"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.421339" elapsed="0.000048"/>
</return>
<msg time="2024-12-01T15:25:59.423188" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.421062" elapsed="0.002197"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.423540" elapsed="0.000521"/>
</kw>
<doc>Verify server response when updating with an invalid payload type.</doc>
<tag>id:update_04</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.390221" elapsed="0.034081"/>
</test>
<test id="s1-s5-t5" name="TC05 - Missing COSPAR ID" line="77">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.428694" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"name": "New Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.428793" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '118'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.428958" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_COSPAR_ID}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.425748" elapsed="0.003247"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.431286" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.429778" elapsed="0.001573"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.432817" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to cospar ID is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.431530" elapsed="0.001352"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.434388" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.433053" elapsed="0.001375"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.434982" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to cospar ID is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.434656" elapsed="0.000438"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.429299" elapsed="0.005931"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.435465" elapsed="0.000289"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.436465" elapsed="0.000636"/>
</return>
<msg time="2024-12-01T15:25:59.438593" level="INFO">${actual_error_message} = invalid request due to cospar ID is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.436037" elapsed="0.002618"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_COSPAR_ID_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.438904" elapsed="0.000371"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.439927" elapsed="0.000056"/>
</return>
<msg time="2024-12-01T15:25:59.441752" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.439608" elapsed="0.002199"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.442039" elapsed="0.000347"/>
</kw>
<doc>Test that the request fails if the COSPAR ID field is missing.</doc>
<tag>id:update_05</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.424732" elapsed="0.017869"/>
</test>
<test id="s1-s5-t6" name="TC06 - Missing Name" line="89">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.445922" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '46'} 
 body=b'{"cospar_id": "2024-003ZZ", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.446105" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '113'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.446270" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_NAME}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.443526" elapsed="0.002788"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.448861" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.447050" elapsed="0.001930"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.451081" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to name is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.449325" elapsed="0.001883"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.453415" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.451525" elapsed="0.001941"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.454078" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to name is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.453720" elapsed="0.000427"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.446626" elapsed="0.007628"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.454488" elapsed="0.000315"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.455319" elapsed="0.000055"/>
</return>
<msg time="2024-12-01T15:25:59.456934" level="INFO">${actual_error_message} = invalid request due to name is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.455041" elapsed="0.001934"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_NAME_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.457253" elapsed="0.000381"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.458243" elapsed="0.000043"/>
</return>
<msg time="2024-12-01T15:25:59.460002" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.457864" elapsed="0.002176"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.460229" elapsed="0.000298"/>
</kw>
<doc>Test that the request fails if the NAME field is missing.</doc>
<tag>id:update_06</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.442888" elapsed="0.017826"/>
</test>
<test id="s1-s5-t7" name="TC07 - Missing Type" line="101">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.466823" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '60'} 
 body=b'{"cospar_id": "2024-003ZZ", "name": "New Satellite Mission"}' 
 </msg>
<msg time="2024-12-01T15:25:59.466982" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '121'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.467168" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json=&amp;{REQ_MISSING_TYPE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.461924" elapsed="0.005282"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.469832" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.468260" elapsed="0.001642"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.471381" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to payload type is required","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.470106" elapsed="0.001340"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.472939" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.471627" elapsed="0.001351"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.473481" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to payload type is required', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.473167" elapsed="0.000371"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.467678" elapsed="0.006036"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.473889" elapsed="0.000230"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.474658" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T15:25:59.476850" level="INFO">${actual_error_message} = invalid request due to payload type is required</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.474346" elapsed="0.002569"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${REQUIRED_PAYLOAD_TYPE_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.477188" elapsed="0.000499"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.478639" elapsed="0.000093"/>
</return>
<msg time="2024-12-01T15:25:59.481242" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.478054" elapsed="0.003234"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.481518" elapsed="0.000347"/>
</kw>
<doc>Test that the request fails if the TYPE field is missing.</doc>
<tag>id:update_07</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.461005" elapsed="0.021037"/>
</test>
<test id="s1-s5-t8" name="TC08 - Boundary Test - Empty Payload" line="113">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.485199" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '4'} 
 body=b'"{}"' 
 </msg>
<msg time="2024-12-01T15:25:59.485298" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '182'} 
 body={"meta":null,"data":null,"errors":[{"message":"invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig","source":"data-server"}]} 
 </msg>
<msg time="2024-12-01T15:25:59.485449" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<arg>json={}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.483051" elapsed="0.002434"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.487815" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.486299" elapsed="0.001587"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.489949" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig","source":"data-server"}]}</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.488103" elapsed="0.001968"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.492254" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.490354" elapsed="0.001978"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.493077" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.492668" elapsed="0.000555"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.485818" elapsed="0.007542"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.493584" elapsed="0.000279"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.494491" elapsed="0.000047"/>
</return>
<msg time="2024-12-01T15:25:59.496104" level="INFO">${actual_error_message} = invalid request due to json: cannot unmarshal string into Go value of type missionconfig.UpdateMissionConfig</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.494181" elapsed="0.002016"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${CANNOT_UNMARSHAL_STRING_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.496429" elapsed="0.000499"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.497507" elapsed="0.000045"/>
</return>
<msg time="2024-12-01T15:25:59.499138" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.497214" elapsed="0.001962"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.499355" elapsed="0.000307"/>
</kw>
<doc>Verify server response when sending an empty payload.</doc>
<tag>id:update_08</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.482347" elapsed="0.017485"/>
</test>
<test id="s1-s5-t9" name="TC09 - Check Unauthorized Access" line="125">
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.504594" level="INFO">PUT Request : url=http://localhost:1234/configs/1 
 path_url=/configs/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'InvalidToken', 'Content-Length': '83'} 
 body=b'{"cospar_id": "2025-235BE", "name": "Updated Satellite Mission", "type": "OPTICAL"}' 
 </msg>
<msg time="2024-12-01T15:25:59.504750" level="INFO">PUT Response : url=http://localhost:1234/configs/1 
 status=400, reason=Bad Request 
 headers={'Accept': 'application/json; charset=utf-8', 'Access-Control-Allow-Headers': 'content-type, authorization, origin', 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Sun, 01 Dec 2024 13:25:59 GMT', 'Content-Length': '145'} 
 body={"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
 
 </msg>
<msg time="2024-12-01T15:25:59.505119" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>api</arg>
<arg>${CONFIGURATION_URL}/${VALID_ID}</arg>
<arg>headers=&amp;{REQ_UNAUTHORIZED_HEADERS}</arg>
<arg>json=${REQ_VALID_OPTICAL_UPDATE}</arg>
<arg>expected_status=400</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-01T15:25:59.500809" elapsed="0.004368"/>
</kw>
<kw name="Save Response Details" owner="common">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.508434" level="INFO">Status Code : 400</msg>
<arg>Status Code : ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.506725" elapsed="0.001795"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.510097" level="INFO">Response Body : {"meta":null,"data":null,"errors":[{"message":"Could not read token, authorization token not found","type":"jwt token","source":"data-server"}]}
</msg>
<arg>Response Body : ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-01T15:25:59.508750" elapsed="0.001415"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-12-01T15:25:59.511758" level="INFO">${response_json} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<var>${response_json}</var>
<arg>${response.text}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-12-01T15:25:59.510351" elapsed="0.001448"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-01T15:25:59.512349" level="INFO">${RESPONSE_JSON} = {'meta': None, 'data': None, 'errors': [{'message': 'Could not read token, authorization token not found', 'type': 'jwt token', 'source': 'data-server'}]}</msg>
<arg>${RESPONSE_JSON}</arg>
<arg>${response_json}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-01T15:25:59.512014" elapsed="0.000394"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2024-12-01T15:25:59.505780" elapsed="0.006722"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>400</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2024-12-01T15:25:59.512678" elapsed="0.000238"/>
</kw>
<kw name="Get Error Message" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['message']}</value>
<status status="PASS" start="2024-12-01T15:25:59.513383" elapsed="0.000050"/>
</return>
<msg time="2024-12-01T15:25:59.515252" level="INFO">${actual_error_message} = Could not read token, authorization token not found</msg>
<var>${actual_error_message}</var>
<status status="PASS" start="2024-12-01T15:25:59.513132" elapsed="0.002172"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_message}</arg>
<arg>${AUTHORIZATION_TOKEN_NOT_FOUND_ERROR_MSG}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.515584" elapsed="0.000386"/>
</kw>
<kw name="Get Error Source" owner="common">
<return>
<value>${RESPONSE_JSON['errors'][0]['source']}</value>
<status status="PASS" start="2024-12-01T15:25:59.516881" elapsed="0.000070"/>
</return>
<msg time="2024-12-01T15:25:59.518754" level="INFO">${actual_error_source} = data-server</msg>
<var>${actual_error_source}</var>
<status status="PASS" start="2024-12-01T15:25:59.516491" elapsed="0.002325"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${actual_error_source}</arg>
<arg>${DATA_SERVER_ERROR_SOURCE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-01T15:25:59.519044" elapsed="0.000445"/>
</kw>
<doc>Verify server rejects requests from unauthorized users.</doc>
<tag>id:update_09</tag>
<tag>service:update</tag>
<status status="PASS" start="2024-12-01T15:25:59.500104" elapsed="0.019614"/>
</test>
<kw name="Delete All Sessions with Satellite Configuration Service" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-01T15:25:59.521715" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-01T15:25:59.521060" elapsed="0.000850"/>
</kw>
<status status="PASS" start="2024-12-01T15:25:59.520666" elapsed="0.001369"/>
</kw>
<doc>Update satellite configuration test cases</doc>
<status status="FAIL" start="2024-12-01T15:25:59.011360" elapsed="0.510737"/>
</suite>
<status status="FAIL" start="2024-12-01T15:25:57.204690" elapsed="2.318791"/>
</suite>
<statistics>
<total>
<stat pass="29" fail="6" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">id:create_01</stat>
<stat pass="1" fail="0" skip="0">id:create_02</stat>
<stat pass="1" fail="0" skip="0">id:create_03</stat>
<stat pass="1" fail="0" skip="0">id:create_04</stat>
<stat pass="1" fail="0" skip="0">id:create_05</stat>
<stat pass="1" fail="0" skip="0">id:create_06</stat>
<stat pass="0" fail="1" skip="0">id:create_07</stat>
<stat pass="1" fail="0" skip="0">id:create_08</stat>
<stat pass="1" fail="0" skip="0">id:create_09</stat>
<stat pass="1" fail="0" skip="0">id:create_10</stat>
<stat pass="0" fail="1" skip="0">id:delete_01</stat>
<stat pass="1" fail="0" skip="0">id:delete_02</stat>
<stat pass="1" fail="0" skip="0">id:delete_03</stat>
<stat pass="1" fail="0" skip="0">id:delete_04</stat>
<stat pass="1" fail="0" skip="0">id:delete_05</stat>
<stat pass="1" fail="0" skip="0">id:delete_06</stat>
<stat pass="1" fail="0" skip="0">id:list_01</stat>
<stat pass="1" fail="0" skip="0">id:list_02</stat>
<stat pass="0" fail="1" skip="0">id:list_03</stat>
<stat pass="0" fail="1" skip="0">id:list_04</stat>
<stat pass="1" fail="0" skip="0">id:list_05</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_01</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_02</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_03</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_04</stat>
<stat pass="1" fail="0" skip="0">id:retrieve_05</stat>
<stat pass="0" fail="1" skip="0">id:update_01</stat>
<stat pass="1" fail="0" skip="0">id:update_02</stat>
<stat pass="1" fail="0" skip="0">id:update_03</stat>
<stat pass="1" fail="0" skip="0">id:update_04</stat>
<stat pass="1" fail="0" skip="0">id:update_05</stat>
<stat pass="1" fail="0" skip="0">id:update_06</stat>
<stat pass="1" fail="0" skip="0">id:update_07</stat>
<stat pass="1" fail="0" skip="0">id:update_08</stat>
<stat pass="1" fail="0" skip="0">id:update_09</stat>
<stat pass="8" fail="2" skip="0">service:create</stat>
<stat pass="5" fail="1" skip="0">service:delete</stat>
<stat pass="3" fail="2" skip="0">service:list</stat>
<stat pass="5" fail="0" skip="0">service:retrieve</stat>
<stat pass="8" fail="1" skip="0">service:update</stat>
</tag>
<suite>
<stat pass="29" fail="6" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="8" fail="2" skip="0" id="s1-s1" name="Create Satellite Configuration">Tests.Create Satellite Configuration</stat>
<stat pass="5" fail="1" skip="0" id="s1-s2" name="Delete Satellite Configuration">Tests.Delete Satellite Configuration</stat>
<stat pass="3" fail="2" skip="0" id="s1-s3" name="List Satellite Configurations">Tests.List Satellite Configurations</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="Retrieve Satellite Configuration">Tests.Retrieve Satellite Configuration</stat>
<stat pass="8" fail="1" skip="0" id="s1-s5" name="Update Satellite Configuration">Tests.Update Satellite Configuration</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
